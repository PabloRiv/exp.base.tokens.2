
//
// StyleDictionary+Struct.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

internal struct StyleDictionaryStruct {
    internal static let expAnimationDelayMedium = 0.5s /** Standard delay for animations */
    internal static let expAnimationDelayNone = 0s /** No delay */
    internal static let expAnimationDelayShort = 0.2s /** Quick delay before animation */
    internal static let expAnimationDurationLong = 1.2s /** Extended animations */
    internal static let expAnimationDurationMedium = 0.6s /** Standard animation duration */
    internal static let expAnimationDurationShort = 0.3s /** Quick animations */
    internal static let expAnimationEasingBackOut = back.out(1.7) /** Back out easing with overshoot effect */
    internal static let expAnimationEasingElasticOut = elastic.out(1, 0.3) /** Elastic bounce for expressive animations */
    internal static let expAnimationEasingPower1Out = power1.out /** Ease out with slight acceleration */
    internal static let expAnimationEasingPower2InOut = power2.inOut /** Balanced ease in-out for smooth transitions */
    internal static let expAnimationOpacityFadeIn = 1 /** Fully visible */
    internal static let expAnimationOpacityFadeOut = 0 /** Fully hidden */
    internal static let expAnimationTransformRotateLarge = rotate(45deg) /** Strong rotation for significant animation effects */
    internal static let expAnimationTransformRotateSmall = rotate(15deg) /** Subtle rotation for attention-grabbing animations */
    internal static let expAnimationTransformScaleLarge = scale(1.05) /** Slightly enlarged for focus or highlight effects */
    internal static let expAnimationTransformScaleSmall = scale(0.95) /** Slight reduction for hover or active states */
    internal static let expAnimationTransformTranslateDown = translateY(10px) /** Downward translation for exit animations */
    internal static let expAnimationTransformTranslateUp = translateY(-10px) /** Upward translation for entry animations */
    internal static let expColorBlack100 = hsl(0, 0%, 10%) /** Black very very light */
    internal static let expColorBlack200 = hsl(0, 0%, 8%) /** Black very light */
    internal static let expColorBlack300 = hsl(0, 0%, 6%) /** Black light */
    internal static let expColorBlack400 = hsl(0, 0%, 4%) /** Black lighter */
    internal static let expColorBlack50 = hsl(0, 0%, 20%) /** Black lightest */
    internal static let expColorBlack500 = hsl(0, 0%, 2%) /** Black base */
    internal static let expColorBlack600 = hsl(0, 0%, 1%) /** Black dark */
    internal static let expColorBlack700 = hsl(0, 0%, 0.5%) /** Black darker */
    internal static let expColorBlack800 = hsl(0, 0%, 0.3%) /** Black very dark */
    internal static let expColorBlack900 = hsl(0, 0%, 0%) /** Black darkest */
    internal static let expColorBlue100 = hsl(220, 90%, 95%)
    internal static let expColorBlue200 = hsl(220, 80%, 85%)
    internal static let expColorBlue300 = hsl(220, 70%, 75%)
    internal static let expColorBlue400 = hsl(220, 60%, 65%)
    internal static let expColorBlue500 = hsl(220, 50%, 55%)
    internal static let expColorBlue600 = hsl(220, 40%, 45%)
    internal static let expColorBlue700 = hsl(220, 30%, 35%)
    internal static let expColorBlue800 = hsl(220, 20%, 25%)
    internal static let expColorBlue900 = hsl(220, 10%, 15%)
    internal static let expColorGray100 = hsl(0, 0%, 95%) /** Gray lightest */
    internal static let expColorGray200 = hsl(0, 0%, 85%) /** Gray very light */
    internal static let expColorGray300 = hsl(0, 0%, 75%) /** Gray light */
    internal static let expColorGray400 = hsl(0, 0%, 65%) /** Gray lighter */
    internal static let expColorGray500 = hsl(0, 0%, 55%) /** Gray base */
    internal static let expColorGray600 = hsl(0, 0%, 45%) /** Gray dark */
    internal static let expColorGray650 = hsl(0, 0%, 40%) /** Gray dark */
    internal static let expColorGray700 = hsl(0, 0%, 35%) /** Gray darker */
    internal static let expColorGray800 = hsl(0, 0%, 25%) /** Gray very dark */
    internal static let expColorGray900 = hsl(0, 0%, 15%) /** Gray darkest */
    internal static let expColorGreen100 = hsl(120, 90%, 95%)
    internal static let expColorGreen200 = hsl(120, 80%, 85%)
    internal static let expColorGreen300 = hsl(120, 70%, 75%)
    internal static let expColorGreen400 = hsl(120, 60%, 65%)
    internal static let expColorGreen500 = hsl(120, 50%, 55%)
    internal static let expColorGreen600 = hsl(120, 40%, 45%)
    internal static let expColorGreen700 = hsl(120, 30%, 35%)
    internal static let expColorGreen800 = hsl(120, 20%, 25%)
    internal static let expColorGreen900 = hsl(120, 10%, 15%)
    internal static let expColorNeutral100 = hsl(0, 0%, 95%) /** Neutral lightest */
    internal static let expColorNeutral200 = hsl(0, 0%, 85%) /** Neutral very light */
    internal static let expColorNeutral300 = hsl(0, 0%, 75%) /** Neutral light */
    internal static let expColorNeutral400 = hsl(0, 0%, 65%) /** Neutral lighter */
    internal static let expColorNeutral500 = hsl(0, 0%, 55%) /** Neutral base */
    internal static let expColorNeutral600 = hsl(0, 0%, 45%) /** Neutral dark */
    internal static let expColorNeutral700 = hsl(0, 0%, 35%) /** Neutral darker */
    internal static let expColorNeutral800 = hsl(0, 0%, 25%) /** Neutral very dark */
    internal static let expColorNeutral900 = hsl(0, 0%, 15%) /** Neutral darkest */
    internal static let expColorOrange100 = hsl(30, 90%, 95%)
    internal static let expColorOrange200 = hsl(30, 80%, 85%)
    internal static let expColorOrange300 = hsl(30, 70%, 75%)
    internal static let expColorOrange400 = hsl(30, 60%, 65%)
    internal static let expColorOrange500 = hsl(30, 50%, 55%)
    internal static let expColorOrange600 = hsl(30, 40%, 45%)
    internal static let expColorOrange700 = hsl(30, 30%, 35%)
    internal static let expColorOrange800 = hsl(30, 20%, 25%)
    internal static let expColorOrange900 = hsl(30, 10%, 15%)
    internal static let expColorPrimary100 = hsl(270, 75%, 95%) /** Primary lightest */
    internal static let expColorPrimary200 = hsl(270, 70%, 85%) /** Primary very light */
    internal static let expColorPrimary300 = hsl(270, 65%, 75%) /** Primary light */
    internal static let expColorPrimary400 = hsl(270, 60%, 65%) /** Primary lighter */
    internal static let expColorPrimary500 = hsl(270, 55%, 55%) /** Primary base */
    internal static let expColorPrimary600 = hsl(270, 50%, 45%) /** Primary dark */
    internal static let expColorPrimary700 = hsl(270, 80%, 50%) /** Primary darker (matches #7B22E0) */
    internal static let expColorPrimary800 = hsl(270, 40%, 25%) /** Primary very dark */
    internal static let expColorPrimary900 = hsl(270, 30%, 15%) /** Primary darkest */
    internal static let expColorPurple100 = hsl(280, 90%, 95%)
    internal static let expColorPurple200 = hsl(280, 80%, 85%)
    internal static let expColorPurple300 = hsl(280, 70%, 75%)
    internal static let expColorPurple400 = hsl(280, 60%, 65%)
    internal static let expColorPurple500 = hsl(280, 50%, 55%)
    internal static let expColorPurple600 = hsl(280, 40%, 45%)
    internal static let expColorPurple700 = hsl(280, 30%, 35%)
    internal static let expColorPurple800 = hsl(280, 20%, 25%)
    internal static let expColorPurple900 = hsl(280, 10%, 15%)
    internal static let expColorRed100 = hsl(0, 85%, 90%) /** Lightest red */
    internal static let expColorRed200 = hsl(0, 80%, 80%) /** Very light red */
    internal static let expColorRed300 = hsl(0, 75%, 70%) /** Light red */
    internal static let expColorRed400 = hsl(0, 70%, 60%) /** Lighter red */
    internal static let expColorRed500 = hsl(0, 95%, 50%) /** Base red (#F01D13) */
    internal static let expColorRed600 = hsl(0, 80%, 40%) /** Dark red */
    internal static let expColorRed700 = hsl(0, 70%, 30%) /** Darker red */
    internal static let expColorRed800 = hsl(0, 60%, 25%) /** Very dark red */
    internal static let expColorRed900 = hsl(0, 50%, 20%) /** Darkest red */
    internal static let expColorSecondary100 = hsl(220, 100%, 95%) /** Secondary lightest */
    internal static let expColorSecondary200 = hsl(220, 100%, 85%) /** Secondary very light */
    internal static let expColorSecondary300 = hsl(220, 100%, 75%) /** Secondary light */
    internal static let expColorSecondary400 = hsl(220, 100%, 63%) /** Secondary lighter */
    internal static let expColorSecondary500 = hsl(220, 100%, 53%) /** Secondary base */
    internal static let expColorSecondary600 = hsl(220, 100%, 43%) /** Secondary dark */
    internal static let expColorSecondary700 = hsl(220, 100%, 33%) /** Secondary darker */
    internal static let expColorSecondary800 = hsl(220, 100%, 23%) /** Secondary very dark */
    internal static let expColorSecondary900 = hsl(220, 100%, 13%) /** Secondary darkest */
    internal static let expColorStatusCaution = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    internal static let expColorStatusInfo = UIColor(red: 0.137, green: 0.576, blue: 0.686, alpha: 1)
    internal static let expColorStatusSuccess = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    internal static let expColorStatusWarn = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    internal static let expColorTerciary100 = hsl(195, 85%, 90%)
    internal static let expColorTerciary200 = hsl(195, 85%, 80%)
    internal static let expColorTerciary300 = hsl(195, 85%, 70%)
    internal static let expColorTerciary400 = hsl(195, 85%, 60%)
    internal static let expColorTerciary500 = hsl(195, 85%, 50%)
    internal static let expColorTerciary600 = hsl(195, 85%, 40%)
    internal static let expColorTerciary700 = hsl(195, 85%, 30%)
    internal static let expColorTerciary800 = hsl(195, 85%, 20%)
    internal static let expColorTerciary900 = hsl(195, 85%, 10%)
    internal static let expColorTransparent = hsl(0, 0%, 0%, 0)
    internal static let expColorWhite100 = hsl(0, 0%, 100%) /** White pure */
    internal static let expColorWhite200 = hsl(0, 0%, 98%) /** White very light */
    internal static let expColorWhite300 = hsl(40, 20%, 98%) /** White warm light */
    internal static let expColorWhite400 = hsl(240, 20%, 98%) /** White cool light */
    internal static let expColorWhite500 = hsl(0, 0%, 95%) /** White base light */
    internal static let expColorWhite600 = hsl(0, 0%, 92%) /** White soft disabled */
    internal static let expColorWhite650 = hsl(0, 0%, 87%) /** White soft disabled */
    internal static let expColorWhite700 = rgba(255, 255, 255, 0.8) /** White light overlay */
    internal static let expColorWhite800 = rgba(255, 255, 255, 0.5) /** White medium overlay */
    internal static let expColorWhite900 = rgba(255, 255, 255, 0.2) /** White faint overlay */
    internal static let expColorYellow100 = hsl(60, 90%, 95%)
    internal static let expColorYellow200 = hsl(60, 80%, 85%)
    internal static let expColorYellow300 = hsl(60, 70%, 75%)
    internal static let expColorYellow400 = hsl(60, 60%, 65%)
    internal static let expColorYellow500 = hsl(60, 50%, 55%)
    internal static let expColorYellow600 = hsl(60, 40%, 45%)
    internal static let expColorYellow700 = hsl(60, 30%, 35%)
    internal static let expColorYellow800 = hsl(60, 20%, 25%)
    internal static let expColorYellow900 = hsl(60, 10%, 15%)
    internal static let expComponentsAccordionBackgroundColorAccordionslideButton = hsl(0, 0%, 95%)
    internal static let expComponentsAccordionBackgroundColorAccordionslideHover = rgba(255, 255, 255, 0.5)
    internal static let expComponentsAccordionBackgroundColorButton = none
    internal static let expComponentsAccordionBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsAccordionBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsAccordionBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsAccordionBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsAccordionBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    internal static let expComponentsAccordionBackgroundColorPrimary = hsl(280, 60%, 65%)
    internal static let expComponentsAccordionBackgroundColorSecondary = hsl(220, 100%, 53%)
    internal static let expComponentsAccordionBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    internal static let expComponentsAccordionBorderButtomBottom = 2px solid transparent
    internal static let expComponentsAccordionBorderButton = none
    internal static let expComponentsAccordionBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    internal static let expComponentsAccordionBorderColorBarBottom = hsl(0, 0%, 85%)
    internal static let expComponentsAccordionBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsAccordionBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsAccordionBorderColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsAccordionBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsAccordionBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsAccordionBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsAccordionBorderPanel = 1px solid hsl(0, 0%, 85%)
    internal static let expComponentsAccordionBorderPanelTop = none
    internal static let expComponentsAccordionBorderRadiusAccordionslide = 4px
    internal static let expComponentsAccordionBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsAccordionBorderWidth = 1px
    internal static let expComponentsAccordionFontSizeAccordionslideIcon = 1rem
    internal static let expComponentsAccordionFontSizeButton = 1rem
    internal static let expComponentsAccordionFontSizeLarge = 1.25rem
    internal static let expComponentsAccordionFontSizeMedium = 1rem
    internal static let expComponentsAccordionFontSizeSmall = .875rem
    internal static let expComponentsAccordionFontSizeXl = 1.5rem
    internal static let expComponentsAccordionFontWeightBold = 700
    internal static let expComponentsAccordionFontWeightExtraBold = 800
    internal static let expComponentsAccordionFontWeightLight = 300
    internal static let expComponentsAccordionFontWeightMedium = 500
    internal static let expComponentsAccordionFontWeightRegular = 400
    internal static let expComponentsAccordionFontWeightSemiBold = 600
    internal static let expComponentsAccordionFontWeightThin = 100
    internal static let expComponentsAccordionGapBar = .5rem
    internal static let expComponentsAccordionHeightAccordionslideIcon = 2em
    internal static let expComponentsAccordionHeightAccordionslideMinheightIcon = 2em
    internal static let expComponentsAccordionHeightMedium = 3.5rem
    internal static let expComponentsAccordionLineHeight = 1
    internal static let expComponentsAccordionLocationBottom = 1.5rem
    internal static let expComponentsAccordionLocationLeft = 1.5rem
    internal static let expComponentsAccordionLocationRight = 1.5rem
    internal static let expComponentsAccordionMarginAccordionContentLeft = 1.25rem
    internal static let expComponentsAccordionMarginAccordionslideButton = .5em 1em
    internal static let expComponentsAccordionMarginLarge = 1rem 1.5rem
    internal static let expComponentsAccordionMarginMedium = .75rem 1.25rem
    internal static let expComponentsAccordionMarginSmall = .5rem 1rem
    internal static let expComponentsAccordionNdsIconIconHeight = 2100
    internal static let expComponentsAccordionNdsIconIconWidth = 2100
    internal static let expComponentsAccordionNdsIconIconXaxis = 100
    internal static let expComponentsAccordionNdsIconIconYaxis = 100
    internal static let expComponentsAccordionPaddingButton = .5em 1em
    internal static let expComponentsAccordionPaddingLarge = 1rem 1.5rem
    internal static let expComponentsAccordionPaddingMedium = .75rem 1.25rem
    internal static let expComponentsAccordionPaddingSmall = .5rem 1rem
    internal static let expComponentsAccordionShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expComponentsAccordionShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    internal static let expComponentsAccordionShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    internal static let expComponentsAccordionTextColorAccordionslideIcon = hsl(220, 30%, 35%)
    internal static let expComponentsAccordionTextColorButton = hsl(0, 0%, 4%)
    internal static let expComponentsAccordionTextColorButtonActive = hsl(220, 40%, 45%)
    internal static let expComponentsAccordionTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsAccordionTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsAccordionTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsAccordionTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsAccordionTextColorLight = hsl(0, 0%, 95%)
    internal static let expComponentsAccordionTextColorPrimary = hsl(0, 0%, 95%)
    internal static let expComponentsAccordionTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsAccordionTransitionButton = color 0.3s, border-bottom-color 0.3s
    internal static let expComponentsAccordionWidthAccordionslideIcon = 2em
    internal static let expComponentsAccordionWidthAccordionslideMinwidthIcon = 2em
    internal static let expComponentsAccordionWidthMedium = 3.5rem
    internal static let expComponentsActionMenuIconRight = 0
    internal static let expComponentsActionMenuIconTop = 50%
    internal static let expComponentsActionMenuIconTransform = translateY(-50%)
    internal static let expComponentsActionMenuResultItemBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsActionMenuResultItemBackgroundColorHover = hsl(220, 100%, 53%)
    internal static let expComponentsActionMenuResultItemPadding = .5rem
    internal static let expComponentsActionMenuResultItemTextColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsActionMenuResultItemTextColorHover = hsl(0, 0%, 95%)
    internal static let expComponentsActionMenuResultListBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsActionMenuResultListBorder = 1px solid hsl(0, 0%, 85%)
    internal static let expComponentsActionMenuResultListBorderRadius = 4px
    internal static let expComponentsActionMenuResultListFontSize = 1rem
    internal static let expComponentsActionMenuResultListLeft = 0
    internal static let expComponentsActionMenuResultListListStyle = none
    internal static let expComponentsActionMenuResultListMargin = 0
    internal static let expComponentsActionMenuResultListMaxHeight = fit-content
    internal static let expComponentsActionMenuResultListPadding = 0
    internal static let expComponentsActionMenuResultListShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expComponentsActionMenuResultListTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsActionMenuResultListTextColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsActionMenuResultListTextColorHover = hsl(0, 0%, 2%)
    internal static let expComponentsActionMenuResultListTop = 100%
    internal static let expComponentsActionMenuResultListWidth = 100%
    internal static let expComponentsActionMenuResultListZIndex = 1000
    internal static let expComponentsActionMenuSearchBoxBorder = 1px solid hsl(0, 0%, 65%)
    internal static let expComponentsActionMenuSearchBoxBorderRadius = 4px
    internal static let expComponentsActionMenuSearchBoxFontSize = 1.25rem
    internal static let expComponentsActionMenuSearchBoxPadding = .5rem .5rem .5rem calc(2rem * .9375)
    internal static let expComponentsActionMenuSearchBoxWidth = 12rem
    internal static let expComponentsActionMenuSearchBoxWrapperWidth = 100%
    internal static let expComponentsActionMenuWidth = 100%
    internal static let expComponentsAlertBackgroundColorError = UIColor(red: 1.000, green: 0.922, blue: 0.933, alpha: 1)
    internal static let expComponentsAlertBackgroundColorInfo = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    internal static let expComponentsAlertBackgroundColorWarning = UIColor(red: 1.000, green: 0.953, blue: 0.878, alpha: 1)
    internal static let expComponentsAlertBorderRadius = 4px
    internal static let expComponentsAlertPadding = 16px
    internal static let expComponentsAlertTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    internal static let expComponentsAlertTextColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsAlertTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    internal static let expComponentsButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsButtonBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    internal static let expComponentsButtonBackgroundColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsButtonBackgroundColorSecondary = hsl(220, 100%, 53%)
    internal static let expComponentsButtonBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsButtonBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsButtonBorderColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsButtonBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsButtonBorderRadiusDefault = 4px
    internal static let expComponentsButtonBorderRadiusPill = 9999px
    internal static let expComponentsButtonFontSizeLarge = 1.25rem
    internal static let expComponentsButtonFontSizeMedium = 1rem
    internal static let expComponentsButtonFontSizeSmall = .875rem
    internal static let expComponentsButtonFontWeightBold = 700
    internal static let expComponentsButtonFontWeightExtraBold = 800
    internal static let expComponentsButtonFontWeightLight = 300
    internal static let expComponentsButtonFontWeightMedium = 500
    internal static let expComponentsButtonFontWeightRegular = 400
    internal static let expComponentsButtonFontWeightSemiBold = 600
    internal static let expComponentsButtonFontWeightThin = 100
    internal static let expComponentsButtonGroupGap = .25rem
    internal static let expComponentsButtonPaddingLarge = 1rem 1.5rem
    internal static let expComponentsButtonPaddingMedium = .75rem 1.25rem
    internal static let expComponentsButtonPaddingSmall = .5rem 1rem
    internal static let expComponentsButtonTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsButtonTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsButtonTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsButtonTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsButtonTextColorPrimary = hsl(0, 0%, 95%)
    internal static let expComponentsButtonTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsCardBackgroundColorDefault = hsl(0, 0%, 95%)
    internal static let expComponentsCardBackgroundColorFooter = hsl(0, 0%, 98%)
    internal static let expComponentsCardBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsCardBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expComponentsCardBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsCardBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    internal static let expComponentsCardBorderRadius = 4px
    internal static let expComponentsCardFontFamilyBody = Open Sans, sans-serif
    internal static let expComponentsCardFontSizeContent = 1rem
    internal static let expComponentsCardFontSizeLarge = 1.25rem
    internal static let expComponentsCardFontSizeMedium = 1rem
    internal static let expComponentsCardFontSizeSmall = .875rem
    internal static let expComponentsCardFontSizeSubTitle = 1rem
    internal static let expComponentsCardFontSizeTitle = 1.5rem
    internal static let expComponentsCardFontWeightBold = 700
    internal static let expComponentsCardFontWeightExtraBold = 800
    internal static let expComponentsCardFontWeightLight = 300
    internal static let expComponentsCardFontWeightMedium = 500
    internal static let expComponentsCardFontWeightRegular = 400
    internal static let expComponentsCardFontWeightSemiBold = 600
    internal static let expComponentsCardFontWeightThin = 100
    internal static let expComponentsCardPaddingCompact = .75em
    internal static let expComponentsCardPaddingDefault = 1em
    internal static let expComponentsCardShadowDefault = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1)
    internal static let expComponentsCardShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    internal static let expComponentsCardTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsCardTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsCardTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsCardTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsCardTextColorPrimary = hsl(0, 0%, 2%)
    internal static let expComponentsCardTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsCardTextColorSubtitle = hsl(0, 0%, 40%)
    internal static let expComponentsCardWidthExtraLarge = 100%
    internal static let expComponentsCardWidthLarge = 75%
    internal static let expComponentsCardWidthMedium = 50%
    internal static let expComponentsCardWidthSmall = 33%
    internal static let expComponentsCardWidthXtraSmall = 20%
    internal static let expComponentsCheckboxBackgroundColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsCheckboxBackgroundColorUnchecked = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsCheckboxBorderColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsCheckboxBorderColorUnchecked = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsCheckboxContainerGap = .5rem
    internal static let expComponentsCheckboxHeight = 1rem
    internal static let expComponentsCheckboxLabelFontSize = 1rem
    internal static let expComponentsCheckboxOpacityDisabled = 0.6
    internal static let expComponentsCheckboxSize = CGFloat(256.00)
    internal static let expComponentsCheckboxWidth = 1rem
    internal static let expComponentsChipBackgroundColorDefault = hsl(30, 50%, 55%)
    internal static let expComponentsChipBackgroundColorHover = hsl(30, 80%, 85%)
    internal static let expComponentsChipBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsChipBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expComponentsChipBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsChipBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    internal static let expComponentsChipBorderRadius = 16px
    internal static let expComponentsChipFontFamilyBody = Open Sans, sans-serif
    internal static let expComponentsChipFontSizeContent = 1rem
    internal static let expComponentsChipFontSizeLarge = 1.25rem
    internal static let expComponentsChipFontSizeMedium = 1rem
    internal static let expComponentsChipFontSizeSmall = .875rem
    internal static let expComponentsChipFontSizeSubTitle = 1rem
    internal static let expComponentsChipFontSizeTitle = 1.25rem
    internal static let expComponentsChipFontWeightBold = 700
    internal static let expComponentsChipFontWeightExtraBold = 800
    internal static let expComponentsChipFontWeightLight = 300
    internal static let expComponentsChipFontWeightMedium = 500
    internal static let expComponentsChipFontWeightRegular = 400
    internal static let expComponentsChipFontWeightSemiBold = 600
    internal static let expComponentsChipFontWeightThin = 100
    internal static let expComponentsChipLineHeightDefault = 1
    internal static let expComponentsChipPaddingClose = 0px
    internal static let expComponentsChipPaddingCompact = .75em
    internal static let expComponentsChipPaddingDefault = 0.5rem 1em
    internal static let expComponentsChipShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    internal static let expComponentsChipShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    internal static let expComponentsChipTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsChipTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsChipTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsChipTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsChipTextColorPrimary = hsl(0, 0%, 2%)
    internal static let expComponentsChipTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsChipTextColorSubtitle = hsl(0, 0%, 40%)
    internal static let expComponentsChipTextColorTitle = hsl(0, 0%, 40%)
    internal static let expComponentsChipWidthExtraLarge = 100%
    internal static let expComponentsChipWidthLarge = 75%
    internal static let expComponentsChipWidthMedium = 50%
    internal static let expComponentsChipWidthSmall = 33%
    internal static let expComponentsChipWidthXtraSmall = 20%
    internal static let expComponentsDrawerBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsDrawerBackgroundColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsDrawerBackgroundColorDrawerContent = hsl(0, 0%, 95%)
    internal static let expComponentsDrawerBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    internal static let expComponentsDrawerBackgroundColorInverse = hsl(195, 85%, 50%)
    internal static let expComponentsDrawerBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsDrawerBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expComponentsDrawerBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsDrawerBorderRadiusDefault = 4px
    internal static let expComponentsDrawerFontSizeContent = 1rem
    internal static let expComponentsDrawerFontSizeSubTitle = 1rem
    internal static let expComponentsDrawerFontSizeTitle = 1.5rem
    internal static let expComponentsDrawerFontWeightClose = 400
    internal static let expComponentsDrawerFontWeightTitle = 400
    internal static let expComponentsDrawerHeightBody = calc(100vh - 3.5rem)
    internal static let expComponentsDrawerHeightTitle = 3.5rem
    internal static let expComponentsDrawerMarginCloseLeft = auto
    internal static let expComponentsDrawerOverlay = rgba(0, 0, 0, 0.5)
    internal static let expComponentsDrawerPaddingActionTitleLeft = 0
    internal static let expComponentsDrawerPaddingDrawerInner = 1rem 2.5rem
    internal static let expComponentsDrawerPaddingDrawerInner768 = 2rem 2.5rem
    internal static let expComponentsDrawerPaddingTitleLeft = 3.5rem
    internal static let expComponentsDrawerShadowBox = 2px 3px 4px 0px rgba(0, 0, 0, 0.2)
    internal static let expComponentsDrawerTextColorBody = hsl(0, 0%, 2%)
    internal static let expComponentsDrawerTextColorIcon = hsl(0, 0%, 6%)
    internal static let expComponentsDrawerTextColorInverse = hsl(220, 100%, 53%)
    internal static let expComponentsDrawerTextColorSubtitle = hsl(0, 0%, 40%)
    internal static let expComponentsDrawerTextColorTitle = hsl(220, 100%, 53%)
    internal static let expComponentsDrawerTransformDefault = translateX(-100%)
    internal static let expComponentsDrawerTransformDrawerBottom = translateX(100%)
    internal static let expComponentsDrawerTransformDrawerRight = translateX(100%)
    internal static let expComponentsDrawerTransition = transform 0.3s ease-out
    internal static let expComponentsDrawerWidthBorder = 1px
    internal static let expComponentsDropdownArrowFontSize = .875rem
    internal static let expComponentsDropdownArrowTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsDropdownButtonBackgroundColor = hsl(0, 0%, 95%)
    internal static let expComponentsDropdownButtonBackgroundColorHover = hsl(0, 0%, 75%)
    internal static let expComponentsDropdownButtonBorder = 1px solid hsl(280, 40%, 45%)
    internal static let expComponentsDropdownButtonBorderColorHover = hsl(220, 100%, 53%)
    internal static let expComponentsDropdownButtonBorderRadius = 4px
    internal static let expComponentsDropdownButtonFontSize = 1rem
    internal static let expComponentsDropdownButtonFontWeight = 500
    internal static let expComponentsDropdownButtonPadding = .5rem 1rem
    internal static let expComponentsDropdownButtonTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsDropdownButtonTextColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsDropdownButtonTransition = border-color 0.3s ease
    internal static let expComponentsDropdownLabelFontSize = .875rem
    internal static let expComponentsDropdownLabelMarginBottom = .5rem
    internal static let expComponentsDropdownLabelTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsDropdownListBackgroundColor = hsl(0, 0%, 95%)
    internal static let expComponentsDropdownListBorder = 1px solid hsl(0, 0%, 85%)
    internal static let expComponentsDropdownListBorderRadius = 4px
    internal static let expComponentsDropdownListFontSize = 1rem
    internal static let expComponentsDropdownListHeight = fit-content
    internal static let expComponentsDropdownListLeft = 0
    internal static let expComponentsDropdownListListStyle = none
    internal static let expComponentsDropdownListMargin = 0
    internal static let expComponentsDropdownListPadding = 0
    internal static let expComponentsDropdownListShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expComponentsDropdownListTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsDropdownListTextColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsDropdownListTextColorHover = hsl(0, 0%, 2%)
    internal static let expComponentsDropdownListTop = 100%
    internal static let expComponentsDropdownListTransition = background-color 0.3s ease-in-out
    internal static let expComponentsDropdownListWidth = 100%
    internal static let expComponentsDropdownListZIndex = 1000
    internal static let expComponentsDropdownOptionBackgroundColor = hsl(0, 0%, 95%)
    internal static let expComponentsDropdownOptionBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsDropdownOptionBackgroundColorHover = hsl(220, 100%, 53%)
    internal static let expComponentsDropdownOptionBackgroundColorSelected = rgba(255, 255, 255, 0.2)
    internal static let expComponentsDropdownOptionBorder = none
    internal static let expComponentsDropdownOptionBorderRadius = 4px
    internal static let expComponentsDropdownOptionFontSize = 1rem
    internal static let expComponentsDropdownOptionFontWeight = 500
    internal static let expComponentsDropdownOptionFontWeightSelected = 700
    internal static let expComponentsDropdownOptionPadding = .5rem 1rem
    internal static let expComponentsDropdownOptionTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsDropdownOptionTextColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsDropdownOptionTextColorHover = hsl(0, 0%, 95%)
    internal static let expComponentsDropdownOptionTransition = background-color 0.3s ease-in-out
    internal static let expComponentsDropdownWidth = 12rem
    internal static let expComponentsFabBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsFabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsFabBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsFabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsFabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    internal static let expComponentsFabBackgroundColorPrimary = hsl(280, 60%, 65%)
    internal static let expComponentsFabBackgroundColorSecondary = hsl(220, 100%, 53%)
    internal static let expComponentsFabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsFabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsFabBorderColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsFabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsFabBorderRadiusPill = 9999px
    internal static let expComponentsFabFontSizeLarge = 1.25rem
    internal static let expComponentsFabFontSizeMedium = 1rem
    internal static let expComponentsFabFontSizeSmall = .875rem
    internal static let expComponentsFabFontSizeXl = 1.5rem
    internal static let expComponentsFabFontWeightBold = 700
    internal static let expComponentsFabFontWeightExtraBold = 800
    internal static let expComponentsFabFontWeightLight = 300
    internal static let expComponentsFabFontWeightMedium = 500
    internal static let expComponentsFabFontWeightRegular = 400
    internal static let expComponentsFabFontWeightSemiBold = 600
    internal static let expComponentsFabFontWeightThin = 100
    internal static let expComponentsFabHeightMedium = 3.5rem
    internal static let expComponentsFabLocationBottom = 1.5rem
    internal static let expComponentsFabLocationLeft = 1.5rem
    internal static let expComponentsFabLocationRight = 1.5rem
    internal static let expComponentsFabMarginAccordionslide = .5em 0 .5em 0
    internal static let expComponentsFabPaddingLarge = 1rem 1.5rem
    internal static let expComponentsFabPaddingMedium = .75rem 1.25rem
    internal static let expComponentsFabPaddingSmall = .5rem 1rem
    internal static let expComponentsFabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expComponentsFabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    internal static let expComponentsFabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    internal static let expComponentsFabTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsFabTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsFabTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsFabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsFabTextColorLight = hsl(0, 0%, 95%)
    internal static let expComponentsFabTextColorPrimary = hsl(0, 0%, 95%)
    internal static let expComponentsFabTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsFabWidthMedium = 3.5rem
    internal static let expComponentsIconFillDefault = hsl(0, 0%, 1%)
    internal static let expComponentsIconStrokeDefault = hsl(0, 0%, 1%)
    internal static let expComponentsMenuBackgroundColorDefault = hsl(0, 0%, 95%)
    internal static let expComponentsMenuBackgroundColorFooter = hsl(0, 0%, 98%)
    internal static let expComponentsMenuBackgroundColorToggleBg = hsl(0, 0%, 98%)
    internal static let expComponentsMenuBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsMenuBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expComponentsMenuBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsMenuBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    internal static let expComponentsMenuBorderRadius = 4px
    internal static let expComponentsMenuFontFamilyBody = Open Sans, sans-serif
    internal static let expComponentsMenuFontSizeContent = 1rem
    internal static let expComponentsMenuFontSizeLarge = 1.25rem
    internal static let expComponentsMenuFontSizeMedium = 1rem
    internal static let expComponentsMenuFontSizeSmall = .875rem
    internal static let expComponentsMenuFontSizeSubTitle = 1rem
    internal static let expComponentsMenuFontSizeTitle = 1.25rem
    internal static let expComponentsMenuFontWeightBold = 700
    internal static let expComponentsMenuFontWeightExtraBold = 800
    internal static let expComponentsMenuFontWeightLight = 300
    internal static let expComponentsMenuFontWeightMedium = 500
    internal static let expComponentsMenuFontWeightRegular = 400
    internal static let expComponentsMenuFontWeightSemiBold = 600
    internal static let expComponentsMenuFontWeightThin = 100
    internal static let expComponentsMenuPaddingCompact = .75em
    internal static let expComponentsMenuPaddingDefault = 0.5rem 1em
    internal static let expComponentsMenuShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    internal static let expComponentsMenuShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    internal static let expComponentsMenuTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsMenuTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsMenuTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsMenuTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsMenuTextColorPrimary = hsl(0, 0%, 2%)
    internal static let expComponentsMenuTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsMenuTextColorSubtitle = hsl(0, 0%, 40%)
    internal static let expComponentsMenuTextColorTitle = hsl(0, 0%, 40%)
    internal static let expComponentsMenuWidthExtraLarge = 100%
    internal static let expComponentsMenuWidthLarge = 75%
    internal static let expComponentsMenuWidthMedium = 50%
    internal static let expComponentsMenuWidthSmall = 33%
    internal static let expComponentsMenuWidthXtraSmall = 20%
    internal static let expComponentsModalBackgroundColor = hsl(0, 0%, 95%)
    internal static let expComponentsModalBodyFontFamily = Open Sans, sans-serif
    internal static let expComponentsModalBodyFontSize = 1rem
    internal static let expComponentsModalBodyPadding = 2.5rem 0.5rem
    internal static let expComponentsModalBodyWidth = 50em
    internal static let expComponentsModalBorderRadius = 4px
    internal static let expComponentsModalButtonCellPadding = 0 .5rem
    internal static let expComponentsModalButtonRowPadding = 1rem
    internal static let expComponentsModalCloseBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsModalCloseBorder = none
    internal static let expComponentsModalCloseFontWeight = 700
    internal static let expComponentsModalCloseHeight = 3.5rem
    internal static let expComponentsModalCloseInverse = hsl(195, 85%, 50%)
    internal static let expComponentsModalClosePadding = .75rem
    internal static let expComponentsModalCloseWidth = 3.5rem
    internal static let expComponentsModalContentBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsModalContentBorderRadius = 4px
    internal static let expComponentsModalContentHeight = 100vh
    internal static let expComponentsModalContentPadding = 1rem
    internal static let expComponentsModalContentShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expComponentsModalContentWidth = 100%
    internal static let expComponentsModalDialogTransformBottom = translate(-50%, 0)
    internal static let expComponentsModalDialogTransformDefault = translate(-50%, -50%)
    internal static let expComponentsModalDialogTransformLeft = translate(0, -50%)
    internal static let expComponentsModalDialogTransformRight = translate(0, -50%)
    internal static let expComponentsModalDialogTransformTop = translate(-50%, 0)
    internal static let expComponentsModalDialogTransition = transform 0.3s ease-out
    internal static let expComponentsModalHeaderBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsModalHeaderBorderBottom = 1px solid #CCCCCC
    internal static let expComponentsModalHeaderBorderRadius = 4px
    internal static let expComponentsModalHeaderHeight = 3.5rem
    internal static let expComponentsModalHeaderInverse = hsl(195, 85%, 50%)
    internal static let expComponentsModalHeaderPadding = 1rem
    internal static let expComponentsModalHeaderTextColor = hsl(0, 0%, 20%)
    internal static let expComponentsModalHeightMedium = 9em
    internal static let expComponentsModalHeightShort = 3em
    internal static let expComponentsModalHeightTall = 18em
    internal static let expComponentsModalIconInverse = hsl(195, 85%, 50%)
    internal static let expComponentsModalIconStyleCautionFill = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    internal static let expComponentsModalIconStyleCautionStroke = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    internal static let expComponentsModalIconStyleDefaultFill = hsl(0, 0%, 45%)
    internal static let expComponentsModalIconStyleDefaultStroke = hsl(0, 0%, 45%)
    internal static let expComponentsModalIconStyleSuccessFill = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    internal static let expComponentsModalIconStyleSuccessStroke = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    internal static let expComponentsModalIconStyleWarnFill = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    internal static let expComponentsModalIconStyleWarnStroke = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    internal static let expComponentsModalLineHeight = 1.5
    internal static let expComponentsModalOpenOpacity = 1
    internal static let expComponentsModalOverlayColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    internal static let expComponentsModalOverlayOpacity = 0.5
    internal static let expComponentsModalPadding = 1.5rem
    internal static let expComponentsModalResponsiveBorderRadius481px768px = 4px
    internal static let expComponentsModalResponsiveBorderRadiusMax480px = 4px
    internal static let expComponentsModalResponsiveBorderRadiusMinWidth768pxContentBorderRadius = .25em
    internal static let expComponentsModalResponsiveBorderRadiusMinWidth768pxHeaderBorderRadius = .25rem .25rem 0 0
    internal static let expComponentsModalResponsiveHeight481px768px = 26.25em
    internal static let expComponentsModalResponsiveHeightMax480px = 26.25em
    internal static let expComponentsModalResponsiveWidth481px768px = 17.5em
    internal static let expComponentsModalResponsiveWidthMax480px = 17.5em
    internal static let expComponentsModalStatusFontFamily = Open Sans, sans-serif
    internal static let expComponentsModalStatusFontSize = 1rem
    internal static let expComponentsModalStatusFontWeight = 400
    internal static let expComponentsModalStatusIconBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsModalStatusIconBorder = none
    internal static let expComponentsModalStatusIconFontWeight = 700
    internal static let expComponentsModalStatusIconHeight = 1.5rem
    internal static let expComponentsModalStatusIconInverse = hsl(195, 85%, 50%)
    internal static let expComponentsModalStatusIconMargin = 0 12px 0 0
    internal static let expComponentsModalStatusIconPadding = 0 12px 0 0
    internal static let expComponentsModalStatusIconTextColor = hsl(0, 0%, 20%)
    internal static let expComponentsModalStatusIconWidth = 1.5rem
    internal static let expComponentsModalStatusLineHeight = 1.5
    internal static let expComponentsModalStatusMargin = 1rem
    internal static let expComponentsModalStatusPadding = 1rem
    internal static let expComponentsModalSvgFill = hsl(0, 0%, 20%)
    internal static let expComponentsModalTextAreaFontFamily = Open Sans, sans-serif
    internal static let expComponentsModalTextAreaFontSize = 1rem
    internal static let expComponentsModalTextAreaPadding = 1rem
    internal static let expComponentsModalTextAreaTextAlign = left
    internal static let expComponentsModalTextAreaWidth = 23em
    internal static let expComponentsModalTextColor = hsl(0, 0%, 6%)
    internal static let expComponentsModalTitleFontFamily = Open Sans, sans-serif
    internal static let expComponentsModalTitleFontSize = 1.25rem
    internal static let expComponentsModalTitleFontWeight = 400
    internal static let expComponentsModalTitlePaddingLeft = .75rem
    internal static let expComponentsModalTransition = transform 0.3s ease-out
    internal static let expComponentsModalTypographyContent = 1rem
    internal static let expComponentsModalTypographyFontFamily = Open Sans, sans-serif
    internal static let expComponentsModalTypographySubtitle = 1rem
    internal static let expComponentsModalTypographyTitle = 1.5rem
    internal static let expComponentsModalWidthMedium = 35em
    internal static let expComponentsModalWidthNarrow = 28em
    internal static let expComponentsModalZIndex = 1000
    internal static let expComponentsRadioBackgroundColorChecked = hsl(220, 100%, 53%)
    internal static let expComponentsRadioBackgroundColorUnchecked = hsl(0, 0%, 95%)
    internal static let expComponentsRadioBorderColorChecked = hsl(0, 0%, 2%)
    internal static let expComponentsRadioBorderColorUnchecked = hsl(220, 100%, 53%)
    internal static let expComponentsRadioDisabledBackgroundColor = hsl(0, 0%, 75%)
    internal static let expComponentsRadioDisabledBorderColor = hsl(0, 0%, 45%)
    internal static let expComponentsRadioDisabledOpacity = 0.6
    internal static let expComponentsRadioGroupIndicatorBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsRadioGroupIndicatorBorder = 2px solid hsl(220, 100%, 43%)
    internal static let expComponentsRadioGroupIndicatorBorderRadius = CGFloat(800.00)
    internal static let expComponentsRadioGroupIndicatorHeight = 1rem
    internal static let expComponentsRadioGroupIndicatorMarginRight = .5rem
    internal static let expComponentsRadioGroupIndicatorTransition = background-color 0.3s ease
    internal static let expComponentsRadioGroupIndicatorWidth = 1rem
    internal static let expComponentsRadioGroupMarginBottom = .5rem
    internal static let expComponentsRadioLabelFontFamily = Open Sans, sans-serif
    internal static let expComponentsRadioLabelFontSize = 1rem
    internal static let expComponentsRadioLabelMarginLeft = .5rem
    internal static let expComponentsRadioLabelTextColor = hsl(0, 0%, 2%)
    internal static let expComponentsRadioSize = CGFloat(256.00)
    internal static let expComponentsSliderThumbColor = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expComponentsSliderThumbSize = CGFloat(256.00)
    internal static let expComponentsSliderTrackColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsSliderTrackHeight = CGFloat(64.00)
    internal static let expComponentsSplitButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsSplitButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsSplitButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsSplitButtonBackgroundColorDropdownButton = hsl(220, 100%, 53%)
    internal static let expComponentsSplitButtonBackgroundColorDropdownButtonHover = hsl(220, 100%, 23%)
    internal static let expComponentsSplitButtonBackgroundColorDropdownMenu = hsl(0, 0%, 92%)
    internal static let expComponentsSplitButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsSplitButtonBackgroundColorPrimaryButton = hsl(280, 40%, 45%)
    internal static let expComponentsSplitButtonBackgroundColorPrimaryButtonHover = hsl(280, 20%, 25%)
    internal static let expComponentsSplitButtonBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsSplitButtonBorderDropdownButton = 1px solid hsl(220, 100%, 43%)
    internal static let expComponentsSplitButtonBorderDropdownButtonLeft = 1px solid hsl(220, 100%, 23%)
    internal static let expComponentsSplitButtonBorderDropdownMenu = 1px solid hsl(0, 0%, 45%)
    internal static let expComponentsSplitButtonBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsSplitButtonBorderPrimaryButton = 1px solid hsl(280, 40%, 45%)
    internal static let expComponentsSplitButtonBorderRadiusDropdownButton = 0 4px 4px 0
    internal static let expComponentsSplitButtonBorderRadiusDropdownMenu = 4px
    internal static let expComponentsSplitButtonBorderRadiusPrimaryButton = 4px 0 0 4px
    internal static let expComponentsSplitButtonFontSizeDropdownIcon = 1rem
    internal static let expComponentsSplitButtonFontSizePrimaryButton = 1rem
    internal static let expComponentsSplitButtonFontWeightBold = 700
    internal static let expComponentsSplitButtonFontWeightExtraBold = 800
    internal static let expComponentsSplitButtonFontWeightLight = 300
    internal static let expComponentsSplitButtonFontWeightMedium = 500
    internal static let expComponentsSplitButtonFontWeightRegular = 400
    internal static let expComponentsSplitButtonFontWeightSemiBold = 600
    internal static let expComponentsSplitButtonFontWeightThin = 100
    internal static let expComponentsSplitButtonLabelColor = hsl(0, 0%, 6%)
    internal static let expComponentsSplitButtonLabelColorHover = hsl(0, 0%, 2%)
    internal static let expComponentsSplitButtonLabelFontSize = 1rem
    internal static let expComponentsSplitButtonLabelFontWeight = 500
    internal static let expComponentsSplitButtonLabelMarginBottom = .5rem
    internal static let expComponentsSplitButtonLabelTransition = color 0.3s
    internal static let expComponentsSplitButtonPaddingDropdownButton = .73em
    internal static let expComponentsSplitButtonPaddingPrimaryButton = .5rem 1rem
    internal static let expComponentsSplitButtonRangeSliderGap = .5rem
    internal static let expComponentsSplitButtonRangeSliderRangeBackgroundColor = hsl(0, 0%, 85%)
    internal static let expComponentsSplitButtonRangeSliderRangeBorderRadius = 4px
    internal static let expComponentsSplitButtonRangeSliderRangeTransition = background-color 0.3s ease-in-out
    internal static let expComponentsSplitButtonRangeSliderThumbBackgroundColor = hsl(195, 85%, 50%)
    internal static let expComponentsSplitButtonRangeSliderThumbBorderRadius = 50%
    internal static let expComponentsSplitButtonRangeSliderThumbHeight = 1.25rem
    internal static let expComponentsSplitButtonRangeSliderThumbTransition = background-color 0.3s ease-in-out
    internal static let expComponentsSplitButtonRangeSliderThumbWidth = 1.25rem
    internal static let expComponentsSplitButtonRangeSliderValueDisplayColor = hsl(0, 0%, 6%)
    internal static let expComponentsSplitButtonRangeSliderValueDisplayFontSize = 1rem
    internal static let expComponentsSplitButtonRangeSliderValueDisplayFontWeight = 700
    internal static let expComponentsSplitButtonShadowDropdownMenuBox = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expComponentsSplitButtonTextColorDropdownButton = hsl(0, 0%, 95%)
    internal static let expComponentsSplitButtonTextColorPrimaryButton = hsl(0, 0%, 95%)
    internal static let expComponentsSplitButtonTransitionPrimaryButton = background-color 0.3s ease-in-out
    internal static let expComponentsSplitButtonWidthDropdownMenuMin = 8rem
    internal static let expComponentsSwitchBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsSwitchBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsSwitchBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsSwitchBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsSwitchBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    internal static let expComponentsSwitchBackgroundColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsSwitchBackgroundColorSecondary = hsl(220, 100%, 53%)
    internal static let expComponentsSwitchBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsSwitchBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsSwitchBorderColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsSwitchBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsSwitchBorderRadiusDefault = 4px
    internal static let expComponentsSwitchBorderRadiusPill = 9999px
    internal static let expComponentsSwitchFontSize = .675rem
    internal static let expComponentsSwitchFontWeight = 700
    internal static let expComponentsSwitchHeight = 1.5rem
    internal static let expComponentsSwitchLeverColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsSwitchLeverColorBackgroundOnDefault = hsl(280, 60%, 65%)
    internal static let expComponentsSwitchLeverHeightLarge = 1.5rem
    internal static let expComponentsSwitchLeverHeightMedium = 1.25rem
    internal static let expComponentsSwitchLeverHeightSmall = 1rem
    internal static let expComponentsSwitchLeverShadowBoxShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expComponentsSwitchLeverShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    internal static let expComponentsSwitchLeverShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    internal static let expComponentsSwitchLeverShadowOnStatic = none
    internal static let expComponentsSwitchLeverWidthLarge = 4rem
    internal static let expComponentsSwitchLeverWidthMedium = 3rem
    internal static let expComponentsSwitchLeverWidthSmall = 2rem
    internal static let expComponentsSwitchPaddingLarge = 1rem 1.5rem
    internal static let expComponentsSwitchPaddingMedium = .75rem 1.25rem
    internal static let expComponentsSwitchPaddingSmall = .5rem 1rem
    internal static let expComponentsSwitchTextColorDanger = hsl(0, 80%, 40%)
    internal static let expComponentsSwitchTextColorDefault = hsl(0, 0%, 4%)
    internal static let expComponentsSwitchTextColorSuccess = hsl(120, 60%, 65%)
    internal static let expComponentsSwitchTextColorWarning = hsl(60, 40%, 45%)
    internal static let expComponentsSwitchThumbColorBackgroundOffStaticDefault = hsl(280, 60%, 65%)
    internal static let expComponentsSwitchThumbColorBackgroundOffStaticDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsSwitchThumbColorBackgroundOffStaticFocused = hsl(220, 100%, 53%)
    internal static let expComponentsSwitchThumbColorBackgroundOffStaticHover = hsl(280, 50%, 55%)
    internal static let expComponentsSwitchThumbColorBackgroundOffStaticPressed = hsl(220, 100%, 53%)
    internal static let expComponentsSwitchThumbColorBackgroundOnStaticDefault = hsl(280, 60%, 65%)
    internal static let expComponentsSwitchThumbColorBackgroundOnStaticFocused = hsl(220, 100%, 53%)
    internal static let expComponentsSwitchThumbColorBackgroundOnStaticHover = hsl(280, 40%, 45%)
    internal static let expComponentsSwitchThumbColorBorderOffFocused = 4px solid hsl(0, 0%, 55%)
    internal static let expComponentsSwitchThumbColorBorderOffPressed = 4px solid hsl(270, 55%, 55%)
    internal static let expComponentsSwitchThumbColorBorderOnFocused = 4px solid hsl(220, 100%, 53%)
    internal static let expComponentsSwitchThumbColorBorderOnPressed = 4px solid hsl(270, 55%, 55%)
    internal static let expComponentsSwitchThumbShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    internal static let expComponentsSwitchThumbShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    internal static let expComponentsSwitchThumbShadowOnStatic = none
    internal static let expComponentsSwitchThumbWidth = 1.5rem
    internal static let expComponentsSwitchTrackColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsSwitchTrackColorBackgroundOnDefault = hsl(240, 20%, 98%)
    internal static let expComponentsSwitchTrackHeight = 1.25rem
    internal static let expComponentsSwitchTrackShadow = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    internal static let expComponentsSwitchTrackWidth = 3rem
    internal static let expComponentsTabBackgroundColorButton = none
    internal static let expComponentsTabBackgroundColorDanger = hsl(0, 95%, 50%)
    internal static let expComponentsTabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    internal static let expComponentsTabBackgroundColorDisabled = hsl(0, 0%, 85%)
    internal static let expComponentsTabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsTabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    internal static let expComponentsTabBackgroundColorPrimary = hsl(280, 60%, 65%)
    internal static let expComponentsTabBackgroundColorSecondary = hsl(220, 100%, 53%)
    internal static let expComponentsTabBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    internal static let expComponentsTabBorderButtomBottom = 2px solid transparent
    internal static let expComponentsTabBorderButton = none
    internal static let expComponentsTabBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    internal static let expComponentsTabBorderColorBarBottom = hsl(0, 0%, 85%)
    internal static let expComponentsTabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsTabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsTabBorderColorPrimary = hsl(280, 40%, 45%)
    internal static let expComponentsTabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsTabBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    internal static let expComponentsTabBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    internal static let expComponentsTabBorderPanel = 1px solid hsl(0, 0%, 85%)
    internal static let expComponentsTabBorderPanelTop = none
    internal static let expComponentsTabBorderRadiusPill = 9999px
    internal static let expComponentsTabBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expComponentsTabBorderWidth = 1px
    internal static let expComponentsTabFontSizeButton = 1rem
    internal static let expComponentsTabFontSizeLarge = 1.25rem
    internal static let expComponentsTabFontSizeMedium = 1rem
    internal static let expComponentsTabFontSizeSmall = .875rem
    internal static let expComponentsTabFontSizeXl = 1.5rem
    internal static let expComponentsTabFontWeightBold = 700
    internal static let expComponentsTabFontWeightExtraBold = 800
    internal static let expComponentsTabFontWeightLight = 300
    internal static let expComponentsTabFontWeightMedium = 500
    internal static let expComponentsTabFontWeightRegular = 400
    internal static let expComponentsTabFontWeightSemiBold = 600
    internal static let expComponentsTabFontWeightThin = 100
    internal static let expComponentsTabGapBar = .5rem
    internal static let expComponentsTabHeightMedium = 3.5rem
    internal static let expComponentsTabLocationBottom = 1.5rem
    internal static let expComponentsTabLocationLeft = 1.5rem
    internal static let expComponentsTabLocationRight = 1.5rem
    internal static let expComponentsTabPaddingButton = .5em 1em
    internal static let expComponentsTabPaddingLarge = 1rem 1.5rem
    internal static let expComponentsTabPaddingMedium = .75rem 1.25rem
    internal static let expComponentsTabPaddingSmall = .5rem 1rem
    internal static let expComponentsTabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expComponentsTabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    internal static let expComponentsTabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    internal static let expComponentsTabTextColorButton = hsl(0, 0%, 4%)
    internal static let expComponentsTabTextColorButtonActive = hsl(220, 40%, 45%)
    internal static let expComponentsTabTextColorDanger = hsl(0, 0%, 95%)
    internal static let expComponentsTabTextColorDisabled = hsl(0, 0%, 45%)
    internal static let expComponentsTabTextColorHoverDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsTabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    internal static let expComponentsTabTextColorLight = hsl(0, 0%, 95%)
    internal static let expComponentsTabTextColorPrimary = hsl(0, 0%, 95%)
    internal static let expComponentsTabTextColorSecondary = hsl(0, 0%, 95%)
    internal static let expComponentsTabTransitionButton = color 0.3s, border-bottom-color 0.3s
    internal static let expComponentsTabWidthMedium = 3.5rem
    internal static let expComponentsTextareaBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expComponentsTextareaBorder = 1px solid hsl(0, 0%, 75%)
    internal static let expComponentsTextareaBorderFocus = hsl(220, 100%, 53%)
    internal static let expComponentsTextareaBorderRadius = 4px
    internal static let expComponentsTextareaCharCounterFontFamily = Open Sans, sans-serif
    internal static let expComponentsTextareaCharCounterFontSize = .875rem
    internal static let expComponentsTextareaCharCounterFontWeight = 400
    internal static let expComponentsTextareaCharCounterMargin = .5rem 0 0 0
    internal static let expComponentsTextareaCharCounterTextAlign = right
    internal static let expComponentsTextareaCharCounterTextColor = hsl(0, 0%, 55%)
    internal static let expComponentsTextareaDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsTextareaErrorFontFamily = Open Sans, sans-serif
    internal static let expComponentsTextareaErrorFontSize = .875rem
    internal static let expComponentsTextareaErrorFontWeight = 400
    internal static let expComponentsTextareaErrorMargin = .5rem 0 0 0
    internal static let expComponentsTextareaErrorTextColor = hsl(0, 95%, 50%)
    internal static let expComponentsTextareaFontSize = 1rem
    internal static let expComponentsTextareaGap = .5rem
    internal static let expComponentsTextareaPadding = .5rem
    internal static let expComponentsTextareaPlaceholderBackgroundColor = hsl(0, 0%, 85%)
    internal static let expComponentsTextareaPlaceholderTextColor = hsl(0, 0%, 55%)
    internal static let expComponentsTextareaTextColorPlaceholder = hsl(0, 0%, 55%)
    internal static let expComponentsTextareaTransition = transform 0.3s ease-out
    internal static let expComponentsTextareaWidth = 16rem
    internal static let expComponentsTextinputBackgroundColorDefault = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputBackgroundColorDisabled = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    internal static let expComponentsTextinputBackgroundColorNumeric = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputBorderRadiusDefault = 4px
    internal static let expComponentsTextinputButtonBackgroundColor = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputButtonBackgroundColorDisabled = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputButtonBackgroundColorHover = hsl(220, 100%, 53%)
    internal static let expComponentsTextinputButtonBorder = 1px solid hsl(0, 0%, 75%)
    internal static let expComponentsTextinputButtonBorderRadius = 4px
    internal static let expComponentsTextinputButtonFontSize = 1.25rem
    internal static let expComponentsTextinputButtonHeight = 2rem
    internal static let expComponentsTextinputButtonMargin = .5rem 0 0 0
    internal static let expComponentsTextinputButtonPadding = .5rem
    internal static let expComponentsTextinputButtonTextColor = hsl(0, 0%, 20%)
    internal static let expComponentsTextinputButtonTextColorDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsTextinputButtonTextColorHover = hsl(0, 0%, 95%)
    internal static let expComponentsTextinputButtonTransition = transform 0.3s ease-out
    internal static let expComponentsTextinputButtonWidth = 2rem
    internal static let expComponentsTextinputErrorMessageFontFamily = Open Sans, sans-serif
    internal static let expComponentsTextinputErrorMessageFontSize = .875rem
    internal static let expComponentsTextinputErrorMessageFontWeight = 400
    internal static let expComponentsTextinputErrorMessageMargin = .5rem 0 0 0
    internal static let expComponentsTextinputErrorMessageTextColor = hsl(0, 95%, 50%)
    internal static let expComponentsTextinputInputBorder = 1px solid hsl(0, 0%, 75%)
    internal static let expComponentsTextinputInputBorderFocus = hsl(220, 100%, 53%)
    internal static let expComponentsTextinputInputBorderRadius = 4px
    internal static let expComponentsTextinputInputBorderRadiusNumeric = 4px
    internal static let expComponentsTextinputInputFontSize = 1rem
    internal static let expComponentsTextinputInputGap = .5rem
    internal static let expComponentsTextinputInputPadding = .5rem
    internal static let expComponentsTextinputInputTextColorDisabled = hsl(0, 0%, 75%)
    internal static let expComponentsTextinputInputTextColorPlaceholder = hsl(0, 0%, 55%)
    internal static let expComponentsTextinputInputTransition = transform 0.3s ease-out
    internal static let expComponentsTextinputInputWidth = 16rem
    internal static let expComponentsTextinputInputWidthNumeric = 4rem
    internal static let expComponentsTextinputLabelFontFamily = Open Sans, sans-serif
    internal static let expComponentsTextinputLabelFontSize = 1rem
    internal static let expComponentsTextinputLabelFontWeight = 400
    internal static let expComponentsTextinputLabelMargin = .5rem 0 0 0
    internal static let expComponentsTextinputLabelTextColor = hsl(0, 0%, 20%)
    internal static let expComponentsTextinputPaddingDefault = 8px 12px
    internal static let expComponentsTextinputWrapperErrorBorderColor = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    internal static let expComponentsToastBackgroundColorError = hsl(0, 95%, 50%)
    internal static let expComponentsToastBackgroundColorInfo = hsl(220, 60%, 65%)
    internal static let expComponentsToastBackgroundColorSuccess = hsl(120, 60%, 65%)
    internal static let expComponentsToastBackgroundColorWarning = hsl(60, 40%, 45%)
    internal static let expComponentsToastBorderRadius = 4px
    internal static let expComponentsToastFontSize = 1rem
    internal static let expComponentsToastPadding = 1rem
    internal static let expComponentsToastPositionsBottomLeftBottom = 1rem
    internal static let expComponentsToastPositionsBottomLeftLeft = 1rem
    internal static let expComponentsToastPositionsBottomRightBottom = 1rem
    internal static let expComponentsToastPositionsBottomRightRight = 1rem
    internal static let expComponentsToastPositionsTopLeftLeft = 1rem
    internal static let expComponentsToastPositionsTopLeftTop = 1rem
    internal static let expComponentsToastPositionsTopRightRight = 1rem
    internal static let expComponentsToastPositionsTopRightTop = 1rem
    internal static let expComponentsToastShadowBox = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expComponentsToastTextColorDefault = hsl(0, 0%, 95%)
    internal static let expComponentsToastTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    internal static let expComponentsToastTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    internal static let expComponentsToastTransition = transform 0.3s ease-out
    internal static let expComponentsToastZIndex = 1000
    internal static let expComponentsTooltipBackgroundColor = hsl(0, 0%, 6%)
    internal static let expComponentsTooltipBorderRadius = 4px
    internal static let expComponentsTooltipFontSize = .875rem
    internal static let expComponentsTooltipPadding = .5rem
    internal static let expComponentsTooltipPointerBackgroundColor = hsl(0, 0%, 2%)
    internal static let expComponentsTooltipPointerBorderStyle = solid
    internal static let expComponentsTooltipPointerBottomBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    internal static let expComponentsTooltipPointerBottomBorderWidth = 8px 8px 0 8px
    internal static let expComponentsTooltipPointerBottomLeft = 52%
    internal static let expComponentsTooltipPointerBottomMarginTop = 1rem
    internal static let expComponentsTooltipPointerBottomTop = -32%
    internal static let expComponentsTooltipPointerBottomTransform = translateX(-50%) rotate(180deg)
    internal static let expComponentsTooltipPointerContentBackground = hsl(0, 0%, 2%)
    internal static let expComponentsTooltipPointerContentBorderRadius = 4px
    internal static let expComponentsTooltipPointerContentFontSize = .875rem
    internal static let expComponentsTooltipPointerContentPadding = .5rem
    internal static let expComponentsTooltipPointerContentTextColor = hsl(0, 0%, 95%)
    internal static let expComponentsTooltipPointerContentWhiteSpace = nowrap
    internal static let expComponentsTooltipPointerContentZIndex = 1000
    internal static let expComponentsTooltipPointerHeight = calc(.5rem * .375)
    internal static let expComponentsTooltipPointerLeftBorderColor = hsl(0, 0%, 0%, 0) hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    internal static let expComponentsTooltipPointerLeftBorderWidth = 8px 8px 8px 0
    internal static let expComponentsTooltipPointerLeftRight = -11px
    internal static let expComponentsTooltipPointerLeftTop = 50%
    internal static let expComponentsTooltipPointerLeftTransform = translateY(-50%) rotate(180deg)
    internal static let expComponentsTooltipPointerRightBorderColor = transparent transparent transparent hsl(0, 0%, 2%)
    internal static let expComponentsTooltipPointerRightBorderWidth = .5rem 0 .5rem .5rem
    internal static let expComponentsTooltipPointerRightLeft = -11.5%
    internal static let expComponentsTooltipPointerRightTop = 50%
    internal static let expComponentsTooltipPointerRightTransform = translateY(-50%) rotate(180deg)
    internal static let expComponentsTooltipPointerTopBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    internal static let expComponentsTooltipPointerTopBorderWidth = .5rem .5rem 0 .5rem
    internal static let expComponentsTooltipPointerTopBottom = -11px
    internal static let expComponentsTooltipPointerTopLeft = 50%
    internal static let expComponentsTooltipPointerTopTop = auto
    internal static let expComponentsTooltipPointerTopTransform = translateX(-50%) rotate(360deg)
    internal static let expComponentsTooltipPointerWidth = calc(.5rem * .625)
    internal static let expComponentsTooltipShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expComponentsTooltipTextColor = hsl(0, 0%, 95%)
    internal static let expComponentsTooltipZIndex = 1000
    internal static let expConceptActionAliasesCta = action
    internal static let expConceptActionAliasesInteraction = action
    internal static let expConceptActionAliasesInteractive = action
    internal static let expConceptActionDisabledBackgroundColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expConceptActionDisabledTextColor = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    internal static let expConceptActionPrimaryBackgroundColor = UIColor(red: 0.000, green: 0.482, blue: 1.000, alpha: 1)
    internal static let expConceptActionPrimaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expConceptActionSecondaryBackgroundColor = UIColor(red: 0.424, green: 0.459, blue: 0.490, alpha: 1)
    internal static let expConceptActionSecondaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expConceptAllocationHigh = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1) /** Represents high allocation or usage level */
    internal static let expConceptAllocationLow = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Represents low allocation or usage level */
    internal static let expConceptAllocationMedium = UIColor(red: 1.000, green: 0.765, blue: 0.000, alpha: 1) /** Represents medium allocation or usage level */
    internal static let expConceptBodyColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    internal static let expConceptBodyColorMuted = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    internal static let expConceptBodyFontSizeDefault = CGFloat(256.00)
    internal static let expConceptBodyFontSizeSmall = CGFloat(224.00)
    internal static let expConceptBodyFontWeightDefault = 400
    internal static let expConceptBodyLineHeightDefault = 1.5
    internal static let expConceptCommerceAvailabilityInStock = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    internal static let expConceptCommerceAvailabilityOutOfStock = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    internal static let expConceptCommerceDiscountColor = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    internal static let expConceptCommerceDiscountFontWeight = 700
    internal static let expConceptCommercePriceColor = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    internal static let expConceptCommercePriceFontSize = CGFloat(288.00)
    internal static let expConceptFeedbackAliasesAlert = feedback
    internal static let expConceptFeedbackAliasesMessaging = feedback
    internal static let expConceptFeedbackAliasesNotification = feedback
    internal static let expConceptFeedbackErrorBackgroundColor = UIColor(red: 0.949, green: 0.871, blue: 0.871, alpha: 1)
    internal static let expConceptFeedbackErrorTextColor = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    internal static let expConceptFeedbackSuccessBackgroundColor = UIColor(red: 0.875, green: 0.941, blue: 0.847, alpha: 1)
    internal static let expConceptFeedbackSuccessTextColor = UIColor(red: 0.235, green: 0.463, blue: 0.239, alpha: 1)
    internal static let expConceptFeedbackWarningBackgroundColor = UIColor(red: 0.988, green: 0.973, blue: 0.890, alpha: 1)
    internal static let expConceptFeedbackWarningTextColor = UIColor(red: 0.541, green: 0.427, blue: 0.231, alpha: 1)
    internal static let expConceptHeadingAliasesDisplay = heading
    internal static let expConceptHeadingAliasesHeader = heading
    internal static let expConceptHeadingAliasesHeadingLevel = heading
    internal static let expConceptHeadingAliasesHeadline = heading
    internal static let expConceptHeadingFontSizeLarge = CGFloat(512.00)
    internal static let expConceptHeadingFontSizeMedium = CGFloat(384.00)
    internal static let expConceptHeadingFontSizeSmall = CGFloat(288.00)
    internal static let expConceptHeadingFontWeightDefault = 700
    internal static let expConceptHeadingLineHeightDefault = 1.2
    internal static let expConceptVisualizationAliasesCharting = visualization
    internal static let expConceptVisualizationAliasesCharts = visualization
    internal static let expConceptVisualizationAliasesDataviz = visualization
    internal static let expConceptVisualizationHighlight = UIColor(red: 1.000, green: 0.843, blue: 0.000, alpha: 1)
    internal static let expConceptVisualizationPrimary = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expConceptVisualizationSecondary = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    internal static let expConceptVisualizationTertiary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    internal static let expElementBadgeBackgroundColorDefault = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expElementBadgeBackgroundColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expElementBadgeBackgroundColorSuccess = UIColor(red: 0.000, green: 0.800, blue: 0.400, alpha: 1)
    internal static let expElementBadgeBorderRadius = 12px
    internal static let expElementBadgePaddingLarge = 6px 12px
    internal static let expElementBadgePaddingMedium = 4px 8px
    internal static let expElementBadgePaddingSmall = 2px 4px
    internal static let expElementBadgeTextColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expElementLeftIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expElementLeftIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    internal static let expElementLeftIconColorDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    internal static let expElementLeftIconSizeLarge = CGFloat(512.00)
    internal static let expElementLeftIconSizeMedium = CGFloat(384.00)
    internal static let expElementLeftIconSizeSmall = CGFloat(256.00)
    internal static let expElementMaskBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.8)
    internal static let expElementMaskBlur = CGFloat(64.00)
    internal static let expElementMaskOpacity = 0.8
    internal static let expElementOverlayBackgroundColorDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    internal static let expElementOverlayBackgroundColorLight = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.3)
    internal static let expElementOverlayOpacityDefault = 0.5
    internal static let expElementOverlayOpacityLight = 0.3
    internal static let expElementRightIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expElementRightIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    internal static let expElementRightIconColorHover = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    internal static let expElementRightIconSizeLarge = CGFloat(512.00)
    internal static let expElementRightIconSizeMedium = CGFloat(384.00)
    internal static let expElementRightIconSizeSmall = CGFloat(256.00)
    internal static let expElementSpinnerAnimationDurationFast = 0.5s
    internal static let expElementSpinnerAnimationDurationNormal = 1s
    internal static let expElementSpinnerAnimationDurationSlow = 1.5s
    internal static let expElementSpinnerColorDefault = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    internal static let expElementSpinnerColorLight = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    internal static let expElementSpinnerSizeLarge = CGFloat(512.00)
    internal static let expElementSpinnerSizeMedium = CGFloat(384.00)
    internal static let expElementSpinnerSizeSmall = CGFloat(256.00)
    internal static let expElementTooltipBackgroundColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    internal static let expElementTooltipBorderRadius = 4px
    internal static let expElementTooltipPadding = 8px
    internal static let expElementTooltipShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    internal static let expElementTooltipTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expElevationBackground = 0 /** Base background layer */
    internal static let expElevationContent = 10 /** Primary content layer */
    internal static let expElevationHeader = 100 /** Header or navigation bar layer */
    internal static let expElevationModal = 500 /** Modal dialogs, highest elevation in most layouts */
    internal static let expElevationOverlay = 200 /** Overlay elements like modals or drop-downs */
    internal static let expElevationPopover = 400 /** Popovers, positioned above tooltips */
    internal static let expElevationTooltip = 300 /** Tooltips, positioned above overlays */
    internal static let expFontFontSizeBody = 1rem
    internal static let expFontFontSizeHeading = 1.75rem
    internal static let expFontFontSizeLg = 1.25rem
    internal static let expFontFontSizeMd = 1rem
    internal static let expFontFontSizeSm = .875rem
    internal static let expFontFontSizeXl = 1.5rem
    internal static let expFontFontSizeXs = .75rem
    internal static let expFontFontSizeXxl = 2rem
    internal static let expFontFontSizeXxs = .675rem
    internal static let expFontFontStyleItalic = italic
    internal static let expFontFontStyleNormal = normal
    internal static let expFontFontStyleOblique = oblique
    internal static let expFontFontWeightBold = 700
    internal static let expFontFontWeightExtraBold = 800
    internal static let expFontFontWeightLight = 300
    internal static let expFontFontWeightMedium = 500
    internal static let expFontFontWeightRegular = 400
    internal static let expFontFontWeightSemiBold = 600
    internal static let expFontFontWeightThin = 100
    internal static let expFontFontsMonospace = Courier New, monospace
    internal static let expFontFontsSans = Open Sans, sans-serif
    internal static let expFontFontsSerif = Times New Roman, serif
    internal static let expFontLetterSpacingNormal = 0px /** Normal letter spacing */
    internal static let expFontLetterSpacingTight = -0.5px /** Tight letter spacing */
    internal static let expFontLetterSpacingWide = 0.5px /** Wide letter spacing */
    internal static let expFontLineHeightLoose = 1.8 /** Looser line height for readability */
    internal static let expFontLineHeightNormal = 1.5 /** Standard line height */
    internal static let expFontLineHeightTight = 1.2 /** Tight line height for compact text */
    internal static let expFontTextTransformCapitalize = capitalize
    internal static let expFontTextTransformLowercase = lowercase
    internal static let expFontTextTransformNone = none
    internal static let expFontTextTransformUppercase = uppercase
    internal static let expFontTypographyBodyFontFamily = Times New Roman, serif
    internal static let expFontTypographyBodyFontSize = 1rem
    internal static let expFontTypographyBodyFontWeight = 400
    internal static let expFontTypographyBodyLetterSpacing = 0px
    internal static let expFontTypographyBodyLineHeight = 1.5
    internal static let expFontTypographyBodyTextTransform = none
    internal static let expFontTypographyButtonFontFamily = Open Sans, sans-serif
    internal static let expFontTypographyButtonFontSize = .875rem
    internal static let expFontTypographyButtonFontWeight = 700
    internal static let expFontTypographyButtonLetterSpacing = 0.5px
    internal static let expFontTypographyButtonLineHeight = 1.2
    internal static let expFontTypographyButtonTextTransform = uppercase
    internal static let expFontTypographyCaptionFontFamily = Times New Roman, serif
    internal static let expFontTypographyCaptionFontSize = .875rem
    internal static let expFontTypographyCaptionFontWeight = 300
    internal static let expFontTypographyCaptionLetterSpacing = 0.5px
    internal static let expFontTypographyCaptionLineHeight = 1.8
    internal static let expFontTypographyCaptionTextTransform = none
    internal static let expFontTypographyHeadingFontFamily = Open Sans, sans-serif
    internal static let expFontTypographyHeadingFontSize = 1.25rem
    internal static let expFontTypographyHeadingFontWeight = 700
    internal static let expFontTypographyHeadingLetterSpacing = 0px
    internal static let expFontTypographyHeadingLineHeight = 1.2
    internal static let expFontTypographyHeadingTextTransform = capitalize
    internal static let expFontTypographySubheadingFontFamily = Open Sans, sans-serif
    internal static let expFontTypographySubheadingFontSize = 1rem
    internal static let expFontTypographySubheadingFontWeight = 600
    internal static let expFontTypographySubheadingLetterSpacing = -0.5px
    internal static let expFontTypographySubheadingLineHeight = 1.5
    internal static let expFontTypographySubheadingTextTransform = none
    internal static let expGroupButtonGroupsOrientation = horizontal
    internal static let expGroupButtonGroupsSpacing = 8px
    internal static let expGroupButtonGroupsStackedOnMobile = true
    internal static let expGroupContextMenuAnimation = fade
    internal static let expGroupContextMenuCloseOnClickOutside = true
    internal static let expGroupContextMenuOpenOnRightClick = true
    internal static let expGroupDropdownMaxHeight = CGFloat(3200.00)
    internal static let expGroupDropdownMultiSelect = false
    internal static let expGroupDropdownOpenOnHover = false
    internal static let expGroupFloatingActionButtonExpandable = false
    internal static let expGroupFloatingActionButtonPosition = bottom-right
    internal static let expGroupFloatingActionButtonShowShadow = true
    internal static let expGroupFormsDefault = true
    internal static let expGroupFormsDisabled = false
    internal static let expGroupFormsHasError = false
    internal static let expGroupLoginForgotPasswordLinkVisible = true
    internal static let expGroupLoginRememberMeEnabled = true
    internal static let expGroupLoginShowPasswordToggle = true
    internal static let expGroupModalsAnimation = slide
    internal static let expGroupModalsCentered = true
    internal static let expGroupModalsCloseOnOverlayClick = true
    internal static let expGroupSearchBordered = true
    internal static let expGroupSearchIconVisible = true
    internal static let expGroupSearchPlaceholder = Search...
    internal static let expGroupSlidersMaxValue = 100
    internal static let expGroupSlidersMinValue = 0
    internal static let expGroupSlidersShowLabels = true
    internal static let expGroupSlidersShowTicks = true
    internal static let expGroupSlidersStep = 1
    internal static let expGroupTooltipsDelay = 300
    internal static let expGroupTooltipsInteractive = true
    internal static let expGroupTooltipsPosition = top
    internal static let expMediaQueriesDesktopExtraLarge = CGFloat(40960.00) /** Extra-large desktops (e.g., QHD screens) */
    internal static let expMediaQueriesDesktopLarge = CGFloat(30720.00) /** Large desktops (e.g., Full HD screens) */
    internal static let expMediaQueriesDesktopMedium = CGFloat(23040.00) /** Standard desktops (e.g., MacBook Pro 15-inch) */
    internal static let expMediaQueriesDesktopSmall = CGFloat(20480.00) /** Small desktops or large tablets in landscape mode */
    internal static let expMediaQueriesMobileExtraLargeLandscape = CGFloat(12992.00) /** Extra-large mobile devices in landscape (e.g., larger Android phones) */
    internal static let expMediaQueriesMobileExtraLargePortrait = CGFloat(7680.00) /** Extra-large mobile devices in portrait (e.g., larger Android phones) */
    internal static let expMediaQueriesMobileLargeLandscape = CGFloat(12288.00) /** Large mobile devices in landscape (e.g., Pixel 5) */
    internal static let expMediaQueriesMobileLargePortrait = CGFloat(6800.00) /** Large mobile devices in portrait (e.g., Pixel 5) */
    internal static let expMediaQueriesMobileMediumLandscape = CGFloat(10672.00) /** Medium mobile devices in landscape (e.g., iPhone 11) */
    internal static let expMediaQueriesMobileMediumPortrait = CGFloat(6000.00) /** Medium mobile devices in portrait (e.g., iPhone 11) */
    internal static let expMediaQueriesMobileSmallLandscape = CGFloat(7680.00) /** Small mobile devices in landscape (e.g., iPhone SE) */
    internal static let expMediaQueriesMobileSmallPortrait = CGFloat(5120.00) /** Small mobile devices in portrait (e.g., iPhone SE) */
    internal static let expMediaQueriesTabletLarge = CGFloat(16384.00) /** Large tablets (e.g., iPad Pro) */
    internal static let expMediaQueriesTabletMedium = CGFloat(12288.00) /** Medium tablets (e.g., iPad Mini) */
    internal static let expMediaQueriesTabletSmall = CGFloat(9600.00) /** Small tablets (e.g., 7-inch devices) */
    internal static let expMediaQueriesTelevision4k = CGFloat(61440.00) /** 4K UHD resolution for TVs */
    internal static let expMediaQueriesTelevision8k = CGFloat(122880.00) /** 8K UHD resolution for TVs */
    internal static let expMediaQueriesTelevisionFullHd = CGFloat(30720.00) /** Full HD resolution for TVs */
    internal static let expMediaQueriesTelevisionHd = CGFloat(20480.00) /** HD resolution for TVs */
    internal static let expModeOnDarkBackgroundPrimary = UIColor(red: 0.122, green: 0.161, blue: 0.216, alpha: 1)
    internal static let expModeOnDarkBackgroundSecondary = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    internal static let expModeOnDarkBackgroundTertiary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    internal static let expModeOnDarkBorderDefault = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    internal static let expModeOnDarkBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    internal static let expModeOnDarkTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    internal static let expModeOnDarkTextPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expModeOnDarkTextSecondary = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    internal static let expModeOnLightBackgroundPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expModeOnLightBackgroundSecondary = UIColor(red: 0.976, green: 0.980, blue: 0.984, alpha: 1)
    internal static let expModeOnLightBackgroundTertiary = UIColor(red: 0.898, green: 0.906, blue: 0.922, alpha: 1)
    internal static let expModeOnLightBorderDefault = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    internal static let expModeOnLightBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    internal static let expModeOnLightTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    internal static let expModeOnLightTextPrimary = UIColor(red: 0.067, green: 0.094, blue: 0.153, alpha: 1)
    internal static let expModeOnLightTextSecondary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    internal static let expScaleBoundedLightnessScale10 = UIColor(red: 0.090, green: 0.098, blue: 0.110, alpha: 1)
    internal static let expScaleBoundedLightnessScale50 = UIColor(red: 0.451, green: 0.498, blue: 0.549, alpha: 1)
    internal static let expScaleBoundedLightnessScale90 = UIColor(red: 0.890, green: 0.902, blue: 0.910, alpha: 1)
    internal static let expScaleEnumeratedLevels100 = 100
    internal static let expScaleEnumeratedLevels200 = 200
    internal static let expScaleEnumeratedLevels300 = 300
    internal static let expScaleEnumeratedLevels400 = 400
    internal static let expScaleEnumeratedLevels50 = 50
    internal static let expScaleEnumeratedLevels500 = 500
    internal static let expScaleEnumeratedLevels600 = 600
    internal static let expScaleEnumeratedLevels700 = 700
    internal static let expScaleEnumeratedLevels800 = 800
    internal static let expScaleEnumeratedLevels900 = 900
    internal static let expScaleOrderedValuesExtraLarge = CGFloat(32.00)
    internal static let expScaleOrderedValuesJumbo = CGFloat(48.00)
    internal static let expScaleOrderedValuesLarge = CGFloat(24.00)
    internal static let expScaleOrderedValuesMedium = CGFloat(16.00)
    internal static let expScaleOrderedValuesSmall = CGFloat(12.00)
    internal static let expScaleProportionalBase1x = CGFloat(16.00)
    internal static let expScaleProportionalBase2x = CGFloat(32.00)
    internal static let expScaleProportionalBase4x = CGFloat(64.00)
    internal static let expScaleProportionalBaseHalf = CGFloat(8.00)
    internal static let expScaleProportionalBaseQuarter = CGFloat(4.00)
    internal static let expScaleTshirtSizesLg = CGFloat(32.00)
    internal static let expScaleTshirtSizesMd = CGFloat(24.00)
    internal static let expScaleTshirtSizesSm = CGFloat(16.00)
    internal static let expScaleTshirtSizesXl = CGFloat(48.00)
    internal static let expScaleTshirtSizesXs = CGFloat(12.00)
    internal static let expScaleTshirtSizesXxl = CGFloat(64.00)
    internal static let expScaleTshirtSizesXxs = CGFloat(8.00)
    internal static let expShadowBoxOne = 0 4px 6px rgba(0, 0, 0, 0.1)
    internal static let expShadowExtraLarge = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1) /** Extra large shadow for dialogs or focused states */
    internal static let expShadowFloating = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15) /** High shadow for floating elements or fixed buttons */
    internal static let expShadowFloatingLarge = 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40) /** High shadow for floating elements or fixed buttons */
    internal static let expShadowInner = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    internal static let expShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08) /** Large shadow for modals or overlays */
    internal static let expShadowMedium = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08) /** Medium shadow for elements like cards */
    internal static let expShadowNone = none /** No shadow */
    internal static let expShadowOverlay = rgba(0, 0, 0, 0.5)
    internal static let expShadowSmall = 0px 1px 2px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.08) /** Small shadow for light elements like buttons */
    internal static let expShadowSmallFloat = 0px 2px 4px rgba(0, 0, 0, 0.2) /** Small floating shadow for light elements like floating action buttons */
    internal static let expSizesAvatarLarge = CGFloat(1152.00)
    internal static let expSizesAvatarMedium = CGFloat(768.00)
    internal static let expSizesAvatarSmall = CGFloat(384.00)
    internal static let expSizesAvatarXLarge = CGFloat(1536.00)
    internal static let expSizesContainerFullWidth = CGFloat(1600.00)
    internal static let expSizesContainerLarge = CGFloat(19200.00)
    internal static let expSizesContainerMedium = CGFloat(12800.00)
    internal static let expSizesContainerSmall = CGFloat(6400.00)
    internal static let expSizesIconLarge = CGFloat(512.00)
    internal static let expSizesIconMedium = CGFloat(384.00)
    internal static let expSizesIconSmall = CGFloat(256.00)
    internal static let expSizesIconXLarge = CGFloat(640.00)
    internal static let expSizesRadiusCircle = 50%
    internal static let expSizesRadiusLarge = 16px
    internal static let expSizesRadiusMedium = 8px
    internal static let expSizesRadiusNone = 0px
    internal static let expSizesRadiusPill = 9999px
    internal static let expSizesRadiusSmall = 4px
    internal static let expSpace12x = 3rem
    internal static let expSpace14x = 3.5rem
    internal static let expSpace16x = 4rem
    internal static let expSpace1x = .25rem
    internal static let expSpace24x = 6rem
    internal static let expSpace2x = .5rem
    internal static let expSpace32x = 8rem
    internal static let expSpace3x = .75rem
    internal static let expSpace48x = 12rem
    internal static let expSpace4x = 1rem
    internal static let expSpace5x = 1.25rem
    internal static let expSpace64x = 16rem
    internal static let expSpace6x = 1.5rem
    internal static let expSpace7x = 1.75rem
    internal static let expSpace8x = 2rem
    internal static let expSpaceHalfX = .125rem
    internal static let expSpaceInline16x = 4rem
    internal static let expSpaceInline1x = .25rem
    internal static let expSpaceInline2x = .5rem
    internal static let expSpaceInline3x = .75rem
    internal static let expSpaceInline4x = 1rem
    internal static let expSpaceInline6x = 1.5rem
    internal static let expSpaceInline8x = 2rem
    internal static let expSpaceInlineHalfX = .125rem
    internal static let expSpaceInlineNone = 0px
    internal static let expSpaceInset12x = 3rem
    internal static let expSpaceInset16x = 4rem
    internal static let expSpaceInset1x = .25rem
    internal static let expSpaceInset2x = .5rem
    internal static let expSpaceInset3x = .75rem
    internal static let expSpaceInset4x = 1rem
    internal static let expSpaceInset6x = 1.5rem
    internal static let expSpaceInset8x = 2rem
    internal static let expSpaceInsetHalfX = .125rem
    internal static let expSpaceInsetNone = 0px
    internal static let expSpaceInsetSquish1x = .25rem .5rem
    internal static let expSpaceInsetSquish2x = .5rem 1rem
    internal static let expSpaceInsetSquish3x = .75rem 1.25rem
    internal static let expSpaceInsetSquish4x = 1rem 2rem
    internal static let expSpaceInsetSquish6x = 1.5rem 3rem
    internal static let expSpaceInsetSquishHalfX = .125rem .25rem
    internal static let expSpaceInsetSquishNone = 0px
    internal static let expSpaceInsetStretch1x = .5rem .25rem
    internal static let expSpaceInsetStretch2x = .75rem .5rem
    internal static let expSpaceInsetStretch3x = 1.5rem .75rem
    internal static let expSpaceInsetStretch4x = 2rem 1rem
    internal static let expSpaceInsetStretch6x = 3rem 1.5rem
    internal static let expSpaceInsetStretchHalfX = .25rem .125rem
    internal static let expSpaceInsetStretchNone = 0px
    internal static let expSpaceNone = 0px
    internal static let expSpaceStack12x = 3rem
    internal static let expSpaceStack16x = 4rem
    internal static let expSpaceStack1x = .25rem
    internal static let expSpaceStack24x = 6rem
    internal static let expSpaceStack2x = .5rem
    internal static let expSpaceStack32x = 8rem
    internal static let expSpaceStack3x = .75rem
    internal static let expSpaceStack4x = 1rem
    internal static let expSpaceStack5x = 1.25rem
    internal static let expSpaceStack6x = 1.5rem
    internal static let expSpaceStack8x = 2rem
    internal static let expSpaceStackHalfX = .125rem
    internal static let expSpaceStackNone = 0px
    internal static let expStateActiveBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    internal static let expStateActiveBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    internal static let expStateActiveText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expStateDefaultBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    internal static let expStateDefaultBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    internal static let expStateDefaultText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    internal static let expStateDisabledBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    internal static let expStateDisabledBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    internal static let expStateDisabledText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.4)
    internal static let expStateErrorBackground = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.1)
    internal static let expStateErrorBorder = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.8)
    internal static let expStateErrorText = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expStateFocusBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.02)
    internal static let expStateFocusOutline = 2px solid rgba(0, 123, 255, 0.8)
    internal static let expStateFocusText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    internal static let expStateHoverBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.05)
    internal static let expStateHoverBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    internal static let expStateHoverText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.8)
    internal static let expStatePressBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    internal static let expStatePressBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.3)
    internal static let expStatePressText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    internal static let expStateSuccessBackground = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 0.1)
    internal static let expStateSuccessBorder = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 0.8)
    internal static let expStateSuccessText = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    internal static let expThreeCameraFovDefault = 75 /** Default field of view for perspective camera */
    internal static let expThreeCameraFovNarrow = 50 /** Narrow field of view for close-ups */
    internal static let expThreeCameraFovWide = 90 /** Wider field of view for immersive scenes */
    internal static let expThreeCameraPositionCloseUp = 0,1,2 /** Closer position for focused shots */
    internal static let expThreeCameraPositionDefault = 0,1,5 /** Standard camera position */
    internal static let expThreeCameraPositionHighAngle = 0,5,5 /** Higher angle for overhead views */
    internal static let expThreeLightColorCool = #C1EFFF /** Cool light color for modern or sci-fi themes */
    internal static let expThreeLightColorNeutral = #FFFFFF /** Neutral white light for general purpose */
    internal static let expThreeLightColorWarm = #FFDDC1 /** Warm light color for cozy environments */
    internal static let expThreeLightIntensityHigh = 2 /** High intensity for spotlight effects */
    internal static let expThreeLightIntensityLow = 0.5 /** Low-intensity light for ambient scenes */
    internal static let expThreeLightIntensityMedium = 1 /** Standard intensity for balanced lighting */
    internal static let expThreeMaterialMetalnessFull = 1 /** Fully metallic surfaces */
    internal static let expThreeMaterialMetalnessNone = 0 /** Non-metallic surfaces */
    internal static let expThreeMaterialMetalnessSemi = 0.5 /** Semi-metallic surfaces */
    internal static let expThreeMaterialRoughnessRough = 1 /** Fully rough surfaces with matte finish */
    internal static let expThreeMaterialRoughnessSemiRough = 0.5 /** Moderately rough surfaces */
    internal static let expThreeMaterialRoughnessSmooth = 0.1 /** Very smooth surfaces with a glossy finish */
    internal static let expThreeTransformRotationX = 0.01 /** Slight rotation on the X-axis for dynamic positioning */
    internal static let expThreeTransformRotationY = 0.01 /** Slight rotation on the Y-axis for orbit animations */
    internal static let expThreeTransformScaleDefault = 1 /** Default scale */
    internal static let expThreeTransformScaleLarge = 2 /** Larger scale for emphasis or focused views */
    internal static let expThreeTransformScaleSmall = 0.5 /** Small scale for thumbnails or previews */
    internal static let expTouchGestureLongPressDuration = 500ms
    internal static let expTouchGestureSwipeThreshold = CGFloat(800.00)
    internal static let expTouchGestureTapDuration = 200ms
    internal static let expTouchSpacingLarge = CGFloat(384.00)
    internal static let expTouchSpacingMedium = CGFloat(256.00)
    internal static let expTouchSpacingSmall = CGFloat(128.00)
    internal static let expTouchTargetLarge = CGFloat(768.00)
    internal static let expTouchTargetMedium = CGFloat(640.00)
    internal static let expTouchTargetSmall = CGFloat(512.00)
    internal static let expUnitsBorderRadiusLg = 16px
    internal static let expUnitsBorderRadiusMd = 8px
    internal static let expUnitsBorderRadiusPill = 9999px
    internal static let expUnitsBorderRadiusSm = 4px
    internal static let expUnitsBorderWidthMedium = 1px
    internal static let expUnitsBorderWidthThick = 1.25px
    internal static let expUnitsBorderWidthThin = .75px
    internal static let expUnitsLineHeightDense = 1.2
    internal static let expUnitsLineHeightLg = 1.75
    internal static let expUnitsLineHeightLoose = 1.8
    internal static let expUnitsLineHeightMd = 1.5
    internal static let expUnitsLineHeightSm = 1.25
    internal static let expUnitsLineHeightXl = 2
    internal static let expUnitsLineHeightXs = 1
    internal static let expUnitsOpacityFull = 1
    internal static let expUnitsOpacityHigh = 0.9
    internal static let expUnitsOpacityLow = 0.3
    internal static let expUnitsOpacityMedium = 0.6
    internal static let expUnitsOpacityNone = 0
    internal static let expUnitsShadowLg = 0px 8px 16px rgba(0, 0, 0, 0.2)
    internal static let expUnitsShadowMd = 0px 4px 8px rgba(0, 0, 0, 0.15)
    internal static let expUnitsShadowSm = 0px 2px 4px rgba(0, 0, 0, 0.1)
    internal static let expVariantErrorAlert = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Used for alert messages related to errors */
    internal static let expVariantErrorCritical = UIColor(red: 0.776, green: 0.157, blue: 0.157, alpha: 1) /** Used for critical errors or states */
    internal static let expVariantErrorDanger = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Used to indicate dangerous actions */
    internal static let expVariantErrorError = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** General error indicator */
    internal static let expVariantErrorPrimary = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Primary color for error and danger indicators */
    internal static let expVariantErrorSecondary = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Secondary color for alerting errors */
    internal static let expVariantErrorTertiary = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** Tertiary color for subtle error indicators */
    internal static let expVariantInformationInfo = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Used for informational messages */
    internal static let expVariantInformationInformation = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** General information indicator */
    internal static let expVariantInformationPrimary = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Primary color for informational messages */
    internal static let expVariantInformationSecondary = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** Secondary color for additional informational elements */
    internal static let expVariantInformationTertiary = UIColor(red: 0.733, green: 0.871, blue: 0.984, alpha: 1) /** Tertiary color for subtle informational cues */
    internal static let expVariantNeutralDefault = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Standard neutral color for non-critical messages */
    internal static let expVariantNeutralPrimary = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Primary neutral color for base states */
    internal static let expVariantNeutralSecondary = UIColor(red: 0.741, green: 0.741, blue: 0.741, alpha: 1) /** Secondary neutral color for subdued elements */
    internal static let expVariantNeutralTertiary = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1) /** Tertiary neutral color for background elements */
    internal static let expVariantNewAnnouncement = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Used for announcements or newly added features */
    internal static let expVariantNewHighlight = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Highlight to draw attention to new items */
    internal static let expVariantNewNewFeature = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Indicator for new features or items */
    internal static let expVariantNewPrimary = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Primary color for new or highlighted features */
    internal static let expVariantNewSecondary = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Secondary color for supporting new features */
    internal static let expVariantNewTertiary = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Tertiary color for subtle new indicators */
    internal static let expVariantSuccessConfirmation = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Used for successful confirmation actions */
    internal static let expVariantSuccessPositive = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Used to indicate positive status */
    internal static let expVariantSuccessPrimary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Primary color for success actions and statuses */
    internal static let expVariantSuccessSecondary = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Secondary color for success-related components */
    internal static let expVariantSuccessSuccess = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** General success indicator */
    internal static let expVariantSuccessTertiary = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** Tertiary color for subtle success elements */
    internal static let expVariantWarningAttention = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Used for actions that require user attention */
    internal static let expVariantWarningCaution = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Used to indicate cautionary actions */
    internal static let expVariantWarningDefault = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** General warning indicator */
    internal static let expVariantWarningPrimary = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** Primary warning color for critical attention */
    internal static let expVariantWarningSecondary = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Secondary warning color for less critical states */
    internal static let expVariantWarningTertiary = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Tertiary warning color for subtle caution cues */
}