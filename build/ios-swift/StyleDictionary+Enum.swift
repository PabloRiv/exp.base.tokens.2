
//
// StyleDictionary+Enum.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

public enum StyleDictionaryEnum {
    public static let expAnimationDelayMedium = 0.5s /** Standard delay for animations */
    public static let expAnimationDelayNone = 0s /** No delay */
    public static let expAnimationDelayShort = 0.2s /** Quick delay before animation */
    public static let expAnimationDurationLong = 1.2s /** Extended animations */
    public static let expAnimationDurationMedium = 0.6s /** Standard animation duration */
    public static let expAnimationDurationShort = 0.3s /** Quick animations */
    public static let expAnimationEasingBackOut = back.out(1.7) /** Back out easing with overshoot effect */
    public static let expAnimationEasingElasticOut = elastic.out(1, 0.3) /** Elastic bounce for expressive animations */
    public static let expAnimationEasingPower1Out = power1.out /** Ease out with slight acceleration */
    public static let expAnimationEasingPower2InOut = power2.inOut /** Balanced ease in-out for smooth transitions */
    public static let expAnimationOpacityFadeIn = 1 /** Fully visible */
    public static let expAnimationOpacityFadeOut = 0 /** Fully hidden */
    public static let expAnimationTransformRotateLarge = rotate(45deg) /** Strong rotation for significant animation effects */
    public static let expAnimationTransformRotateSmall = rotate(15deg) /** Subtle rotation for attention-grabbing animations */
    public static let expAnimationTransformScaleLarge = scale(1.05) /** Slightly enlarged for focus or highlight effects */
    public static let expAnimationTransformScaleSmall = scale(0.95) /** Slight reduction for hover or active states */
    public static let expAnimationTransformTranslateDown = translateY(10px) /** Downward translation for exit animations */
    public static let expAnimationTransformTranslateUp = translateY(-10px) /** Upward translation for entry animations */
    public static let expBorderInputs = #ccc
    public static let expColorBlack100 = hsl(0, 0%, 10%) /** Black very very light */
    public static let expColorBlack200 = hsl(0, 0%, 8%) /** Black very light */
    public static let expColorBlack300 = hsl(0, 0%, 6%) /** Black light */
    public static let expColorBlack400 = hsl(0, 0%, 4%) /** Black lighter */
    public static let expColorBlack50 = hsl(0, 0%, 20%) /** Black lightest */
    public static let expColorBlack500 = hsl(0, 0%, 2%) /** Black base */
    public static let expColorBlack600 = hsl(0, 0%, 1%) /** Black dark */
    public static let expColorBlack700 = hsl(0, 0%, 0.5%) /** Black darker */
    public static let expColorBlack800 = hsl(0, 0%, 0.3%) /** Black very dark */
    public static let expColorBlack900 = hsl(0, 0%, 0%) /** Black darkest */
    public static let expColorBlue100 = hsl(220, 90%, 95%)
    public static let expColorBlue200 = hsl(220, 80%, 85%)
    public static let expColorBlue300 = hsl(220, 70%, 75%)
    public static let expColorBlue400 = hsl(220, 60%, 65%)
    public static let expColorBlue500 = hsl(220, 50%, 55%)
    public static let expColorBlue600 = hsl(220, 40%, 45%)
    public static let expColorBlue700 = hsl(220, 30%, 35%)
    public static let expColorBlue800 = hsl(220, 20%, 25%)
    public static let expColorBlue900 = hsl(220, 10%, 15%)
    public static let expColorGray100 = hsl(0, 0%, 95%) /** Gray lightest */
    public static let expColorGray200 = hsl(0, 0%, 85%) /** Gray very light */
    public static let expColorGray300 = hsl(0, 0%, 75%) /** Gray light */
    public static let expColorGray400 = hsl(0, 0%, 65%) /** Gray lighter */
    public static let expColorGray500 = hsl(0, 0%, 55%) /** Gray base */
    public static let expColorGray600 = hsl(0, 0%, 45%) /** Gray dark */
    public static let expColorGray650 = hsl(0, 0%, 40%) /** Gray dark */
    public static let expColorGray700 = hsl(0, 0%, 35%) /** Gray darker */
    public static let expColorGray800 = hsl(0, 0%, 25%) /** Gray very dark */
    public static let expColorGray900 = hsl(0, 0%, 15%) /** Gray darkest */
    public static let expColorGreen100 = hsl(120, 90%, 95%)
    public static let expColorGreen200 = hsl(120, 80%, 85%)
    public static let expColorGreen300 = hsl(120, 70%, 75%)
    public static let expColorGreen400 = hsl(120, 60%, 65%)
    public static let expColorGreen500 = hsl(120, 50%, 55%)
    public static let expColorGreen600 = hsl(120, 40%, 45%)
    public static let expColorGreen700 = hsl(120, 30%, 35%)
    public static let expColorGreen800 = hsl(120, 20%, 25%)
    public static let expColorGreen900 = hsl(120, 10%, 15%)
    public static let expColorNeutral100 = hsl(0, 0%, 95%) /** Neutral lightest */
    public static let expColorNeutral200 = hsl(0, 0%, 85%) /** Neutral very light */
    public static let expColorNeutral300 = hsl(0, 0%, 75%) /** Neutral light */
    public static let expColorNeutral400 = hsl(0, 0%, 65%) /** Neutral lighter */
    public static let expColorNeutral500 = hsl(0, 0%, 55%) /** Neutral base */
    public static let expColorNeutral600 = hsl(0, 0%, 45%) /** Neutral dark */
    public static let expColorNeutral700 = hsl(0, 0%, 35%) /** Neutral darker */
    public static let expColorNeutral800 = hsl(0, 0%, 25%) /** Neutral very dark */
    public static let expColorNeutral900 = hsl(0, 0%, 15%) /** Neutral darkest */
    public static let expColorOrange100 = hsl(30, 90%, 95%)
    public static let expColorOrange200 = hsl(30, 80%, 85%)
    public static let expColorOrange300 = hsl(30, 70%, 75%)
    public static let expColorOrange400 = hsl(30, 60%, 65%)
    public static let expColorOrange500 = hsl(30, 50%, 55%)
    public static let expColorOrange600 = hsl(30, 40%, 45%)
    public static let expColorOrange700 = hsl(30, 30%, 35%)
    public static let expColorOrange800 = hsl(30, 20%, 25%)
    public static let expColorOrange900 = hsl(30, 10%, 15%)
    public static let expColorPrimary100 = hsl(270, 75%, 95%) /** Primary lightest */
    public static let expColorPrimary200 = hsl(270, 70%, 85%) /** Primary very light */
    public static let expColorPrimary300 = hsl(270, 65%, 75%) /** Primary light */
    public static let expColorPrimary400 = hsl(270, 60%, 65%) /** Primary lighter */
    public static let expColorPrimary500 = hsl(270, 55%, 55%) /** Primary base */
    public static let expColorPrimary600 = hsl(270, 50%, 45%) /** Primary dark */
    public static let expColorPrimary700 = hsl(270, 80%, 50%) /** Primary darker (matches #7B22E0) */
    public static let expColorPrimary800 = hsl(270, 40%, 25%) /** Primary very dark */
    public static let expColorPrimary900 = hsl(270, 30%, 15%) /** Primary darkest */
    public static let expColorPurple100 = hsl(280, 90%, 95%)
    public static let expColorPurple200 = hsl(280, 80%, 85%)
    public static let expColorPurple300 = hsl(280, 70%, 75%)
    public static let expColorPurple400 = hsl(280, 60%, 65%)
    public static let expColorPurple500 = hsl(280, 50%, 55%)
    public static let expColorPurple600 = hsl(280, 40%, 45%)
    public static let expColorPurple700 = hsl(280, 30%, 35%)
    public static let expColorPurple800 = hsl(280, 20%, 25%)
    public static let expColorPurple900 = hsl(280, 10%, 15%)
    public static let expColorRed100 = hsl(0, 85%, 90%) /** Lightest red */
    public static let expColorRed200 = hsl(0, 80%, 80%) /** Very light red */
    public static let expColorRed300 = hsl(0, 75%, 70%) /** Light red */
    public static let expColorRed400 = hsl(0, 70%, 60%) /** Lighter red */
    public static let expColorRed500 = hsl(0, 95%, 50%) /** Base red (#F01D13) */
    public static let expColorRed600 = hsl(0, 80%, 40%) /** Dark red */
    public static let expColorRed700 = hsl(0, 70%, 30%) /** Darker red */
    public static let expColorRed800 = hsl(0, 60%, 25%) /** Very dark red */
    public static let expColorRed900 = hsl(0, 50%, 20%) /** Darkest red */
    public static let expColorSecondary100 = hsl(220, 100%, 95%) /** Secondary lightest */
    public static let expColorSecondary200 = hsl(220, 100%, 85%) /** Secondary very light */
    public static let expColorSecondary300 = hsl(220, 100%, 75%) /** Secondary light */
    public static let expColorSecondary400 = hsl(220, 100%, 63%) /** Secondary lighter */
    public static let expColorSecondary500 = hsl(220, 100%, 53%) /** Secondary base */
    public static let expColorSecondary600 = hsl(220, 100%, 43%) /** Secondary dark */
    public static let expColorSecondary700 = hsl(220, 100%, 33%) /** Secondary darker */
    public static let expColorSecondary800 = hsl(220, 100%, 23%) /** Secondary very dark */
    public static let expColorSecondary900 = hsl(220, 100%, 13%) /** Secondary darkest */
    public static let expColorStatusCaution = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expColorStatusInfo = UIColor(red: 0.137, green: 0.576, blue: 0.686, alpha: 1)
    public static let expColorStatusSuccess = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expColorStatusWarn = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expColorTerciary100 = hsl(195, 85%, 90%)
    public static let expColorTerciary200 = hsl(195, 85%, 80%)
    public static let expColorTerciary300 = hsl(195, 85%, 70%)
    public static let expColorTerciary400 = hsl(195, 85%, 60%)
    public static let expColorTerciary500 = hsl(195, 85%, 50%)
    public static let expColorTerciary600 = hsl(195, 85%, 40%)
    public static let expColorTerciary700 = hsl(195, 85%, 30%)
    public static let expColorTerciary800 = hsl(195, 85%, 20%)
    public static let expColorTerciary900 = hsl(195, 85%, 10%)
    public static let expColorTransparent = hsl(0, 0%, 0%, 0)
    public static let expColorWhite100 = hsl(0, 0%, 100%) /** White pure */
    public static let expColorWhite200 = hsl(0, 0%, 98%) /** White very light */
    public static let expColorWhite300 = hsl(40, 20%, 98%) /** White warm light */
    public static let expColorWhite400 = hsl(240, 20%, 98%) /** White cool light */
    public static let expColorWhite500 = hsl(0, 0%, 95%) /** White base light */
    public static let expColorWhite600 = hsl(0, 0%, 92%) /** White soft disabled */
    public static let expColorWhite650 = hsl(0, 0%, 87%) /** White soft disabled */
    public static let expColorWhite700 = rgba(255, 255, 255, 0.8) /** White light overlay */
    public static let expColorWhite800 = rgba(255, 255, 255, 0.5) /** White medium overlay */
    public static let expColorWhite900 = rgba(255, 255, 255, 0.2) /** White faint overlay */
    public static let expColorYellow100 = hsl(60, 90%, 95%)
    public static let expColorYellow200 = hsl(60, 80%, 85%)
    public static let expColorYellow300 = hsl(60, 70%, 75%)
    public static let expColorYellow400 = hsl(60, 60%, 65%)
    public static let expColorYellow500 = hsl(60, 50%, 55%)
    public static let expColorYellow600 = hsl(60, 40%, 45%)
    public static let expColorYellow700 = hsl(60, 30%, 35%)
    public static let expColorYellow800 = hsl(60, 20%, 25%)
    public static let expColorYellow900 = hsl(60, 10%, 15%)
    public static let expCompositionAccordionBackgroundColorAccordionslideButton = hsl(0, 0%, 95%)
    public static let expCompositionAccordionBackgroundColorAccordionslideHover = rgba(255, 255, 255, 0.5)
    public static let expCompositionAccordionBackgroundColorButton = none
    public static let expCompositionAccordionBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionAccordionBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionAccordionBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionAccordionBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionAccordionBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expCompositionAccordionBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expCompositionAccordionBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expCompositionAccordionBackgroundColorTerciary = hsl(195, 85%, 50%)
    public static let expCompositionAccordionBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    public static let expCompositionAccordionBorderButtomBottom = 2px solid transparent
    public static let expCompositionAccordionBorderButton = none
    public static let expCompositionAccordionBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    public static let expCompositionAccordionBorderColorBarBottom = hsl(0, 0%, 85%)
    public static let expCompositionAccordionBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionAccordionBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionAccordionBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionAccordionBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionAccordionBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionAccordionBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionAccordionBorderPanel = 1px solid hsl(0, 0%, 85%)
    public static let expCompositionAccordionBorderPanelTop = none
    public static let expCompositionAccordionBorderRadiusAccordionslide = 4px
    public static let expCompositionAccordionBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionAccordionBorderWidth = 1px
    public static let expCompositionAccordionFontSizeAccordionslideIcon = 1rem
    public static let expCompositionAccordionFontSizeButton = 1rem
    public static let expCompositionAccordionFontSizeLarge = 1.25rem
    public static let expCompositionAccordionFontSizeMedium = 1rem
    public static let expCompositionAccordionFontSizeSmall = .875rem
    public static let expCompositionAccordionFontSizeXl = 1.5rem
    public static let expCompositionAccordionFontWeightBold = 700
    public static let expCompositionAccordionFontWeightExtraBold = 800
    public static let expCompositionAccordionFontWeightLight = 300
    public static let expCompositionAccordionFontWeightMedium = 500
    public static let expCompositionAccordionFontWeightRegular = 400
    public static let expCompositionAccordionFontWeightSemiBold = 600
    public static let expCompositionAccordionFontWeightThin = 100
    public static let expCompositionAccordionGapBar = .5rem
    public static let expCompositionAccordionHeightAccordionslideIcon = 2em
    public static let expCompositionAccordionHeightAccordionslideMinheightIcon = 2em
    public static let expCompositionAccordionHeightMedium = 3.5rem
    public static let expCompositionAccordionLineHeight = 1
    public static let expCompositionAccordionLocationBottom = 1.5rem
    public static let expCompositionAccordionLocationLeft = 1.5rem
    public static let expCompositionAccordionLocationRight = 1.5rem
    public static let expCompositionAccordionMarginAccordionContentLeft = 1.25rem
    public static let expCompositionAccordionMarginAccordionslideButton = .5em 1em
    public static let expCompositionAccordionMarginLarge = 1rem 1.5rem
    public static let expCompositionAccordionMarginMedium = .75rem 1.25rem
    public static let expCompositionAccordionMarginSmall = .5rem 1rem
    public static let expCompositionAccordionNdsIconIconHeight = 2100
    public static let expCompositionAccordionNdsIconIconWidth = 2100
    public static let expCompositionAccordionNdsIconIconXaxis = 100
    public static let expCompositionAccordionNdsIconIconYaxis = 100
    public static let expCompositionAccordionPaddingButton = .5em 1em
    public static let expCompositionAccordionPaddingLarge = 1rem 1.5rem
    public static let expCompositionAccordionPaddingMedium = .75rem 1.25rem
    public static let expCompositionAccordionPaddingSmall = .5rem 1rem
    public static let expCompositionAccordionShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expCompositionAccordionShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expCompositionAccordionShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expCompositionAccordionTextColorAccordionslideIcon = hsl(220, 30%, 35%)
    public static let expCompositionAccordionTextColorButton = hsl(0, 0%, 4%)
    public static let expCompositionAccordionTextColorButtonActive = hsl(220, 40%, 45%)
    public static let expCompositionAccordionTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionAccordionTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionAccordionTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionAccordionTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionAccordionTextColorLight = hsl(0, 0%, 95%)
    public static let expCompositionAccordionTextColorPrimary = hsl(0, 0%, 95%)
    public static let expCompositionAccordionTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionAccordionTransitionButton = color 0.3s, border-bottom-color 0.3s
    public static let expCompositionAccordionWidthAccordionslideIcon = 2em
    public static let expCompositionAccordionWidthAccordionslideMinwidthIcon = 2em
    public static let expCompositionAccordionWidthMedium = 3.5rem
    public static let expCompositionActionMenuIconRight = 0
    public static let expCompositionActionMenuIconTop = 50%
    public static let expCompositionActionMenuIconTransform = translateY(-50%)
    public static let expCompositionActionMenuResultItemBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionActionMenuResultItemBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expCompositionActionMenuResultItemPadding = .5rem
    public static let expCompositionActionMenuResultItemTextColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionActionMenuResultItemTextColorHover = hsl(0, 0%, 95%)
    public static let expCompositionActionMenuResultListBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionActionMenuResultListBorder = 1px solid hsl(0, 0%, 85%)
    public static let expCompositionActionMenuResultListBorderRadius = 4px
    public static let expCompositionActionMenuResultListFontSize = 1rem
    public static let expCompositionActionMenuResultListLeft = 0
    public static let expCompositionActionMenuResultListListStyle = none
    public static let expCompositionActionMenuResultListMargin = 0
    public static let expCompositionActionMenuResultListMaxHeight = fit-content
    public static let expCompositionActionMenuResultListPadding = 0
    public static let expCompositionActionMenuResultListShadow = [object Object]
    public static let expCompositionActionMenuResultListTextColor = hsl(0, 0%, 6%)
    public static let expCompositionActionMenuResultListTextColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionActionMenuResultListTextColorHover = hsl(0, 0%, 2%)
    public static let expCompositionActionMenuResultListTop = 100%
    public static let expCompositionActionMenuResultListWidth = 100%
    public static let expCompositionActionMenuResultListZIndex = 1000
    public static let expCompositionActionMenuSearchBoxBorder = 1px solid hsl(0, 0%, 65%)
    public static let expCompositionActionMenuSearchBoxBorderRadius = 4px
    public static let expCompositionActionMenuSearchBoxFontSize = 1.25rem
    public static let expCompositionActionMenuSearchBoxPadding = .5rem .5rem .5rem calc(2rem * .9375)
    public static let expCompositionActionMenuSearchBoxWidth = 12rem
    public static let expCompositionActionMenuSearchBoxWrapperWidth = 100%
    public static let expCompositionActionMenuWidth = 100%
    public static let expCompositionAlertBackgroundColorError = UIColor(red: 1.000, green: 0.922, blue: 0.933, alpha: 1)
    public static let expCompositionAlertBackgroundColorInfo = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expCompositionAlertBackgroundColorWarning = UIColor(red: 1.000, green: 0.953, blue: 0.878, alpha: 1)
    public static let expCompositionAlertBorderRadius = 4px
    public static let expCompositionAlertPadding = 16px
    public static let expCompositionAlertTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expCompositionAlertTextColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionAlertTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    public static let expCompositionButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionButtonBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expCompositionButtonBackgroundColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionButtonBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expCompositionButtonBackgroundColorTerciary = hsl(195, 85%, 50%)
    public static let expCompositionButtonBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionButtonBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionButtonBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionButtonBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionButtonBorderRadiusDefault = 4px
    public static let expCompositionButtonBorderRadiusPill = 9999px
    public static let expCompositionButtonFont = Open Sans, sans-serif
    public static let expCompositionButtonFontSizeLarge = 1.25rem
    public static let expCompositionButtonFontSizeMedium = 1rem
    public static let expCompositionButtonFontSizeSmall = .875rem
    public static let expCompositionButtonFontWeightDefault = 700
    public static let expCompositionButtonGroupGap = .25rem
    public static let expCompositionButtonPaddingLarge = 1rem 1.5rem
    public static let expCompositionButtonPaddingMedium = .75rem 1.25rem
    public static let expCompositionButtonPaddingSmall = .5rem 1rem
    public static let expCompositionButtonTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionButtonTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionButtonTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionButtonTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionButtonTextColorPrimary = hsl(0, 0%, 95%)
    public static let expCompositionButtonTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionCardBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expCompositionCardBackgroundColorFooter = hsl(0, 0%, 98%)
    public static let expCompositionCardBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionCardBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expCompositionCardBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionCardBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expCompositionCardBorderRadius = 4px
    public static let expCompositionCardFontFamilyBody = Open Sans, sans-serif
    public static let expCompositionCardFontSizeContent = 1rem
    public static let expCompositionCardFontSizeLarge = 1.25rem
    public static let expCompositionCardFontSizeMedium = 1rem
    public static let expCompositionCardFontSizeSmall = .875rem
    public static let expCompositionCardFontSizeSubTitle = 1rem
    public static let expCompositionCardFontSizeTitle = 1.5rem
    public static let expCompositionCardFontWeightBold = 700
    public static let expCompositionCardFontWeightExtraBold = 800
    public static let expCompositionCardFontWeightLight = 300
    public static let expCompositionCardFontWeightMedium = 500
    public static let expCompositionCardFontWeightRegular = 400
    public static let expCompositionCardFontWeightSemiBold = 600
    public static let expCompositionCardFontWeightThin = 100
    public static let expCompositionCardPaddingCompact = .75em
    public static let expCompositionCardPaddingDefault = 1em
    public static let expCompositionCardShadowDefault = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1)
    public static let expCompositionCardShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expCompositionCardTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionCardTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionCardTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionCardTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionCardTextColorPrimary = hsl(0, 0%, 2%)
    public static let expCompositionCardTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionCardTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expCompositionCardWidthExtraLarge = 100%
    public static let expCompositionCardWidthLarge = 75%
    public static let expCompositionCardWidthMedium = 50%
    public static let expCompositionCardWidthSmall = 33%
    public static let expCompositionCardWidthXtraSmall = 20%
    public static let expCompositionCheckboxBackgroundColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionCheckboxBackgroundColorUnchecked = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionCheckboxBorderColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionCheckboxBorderColorUnchecked = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionCheckboxContainerGap = .5rem
    public static let expCompositionCheckboxHeight = 1rem
    public static let expCompositionCheckboxLabelFontSize = 1rem
    public static let expCompositionCheckboxOpacityDisabled = 0.6
    public static let expCompositionCheckboxSize = CGFloat(256.00)
    public static let expCompositionCheckboxWidth = 1rem
    public static let expCompositionChipBackgroundColorDefault = hsl(30, 50%, 55%)
    public static let expCompositionChipBackgroundColorHover = hsl(30, 80%, 85%)
    public static let expCompositionChipBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionChipBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expCompositionChipBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionChipBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expCompositionChipBorderRadius = 16px
    public static let expCompositionChipFontFamilyBody = Open Sans, sans-serif
    public static let expCompositionChipFontSizeContent = 1rem
    public static let expCompositionChipFontSizeLarge = 1.25rem
    public static let expCompositionChipFontSizeMedium = 1rem
    public static let expCompositionChipFontSizeSmall = .875rem
    public static let expCompositionChipFontSizeSubTitle = 1rem
    public static let expCompositionChipFontSizeTitle = 1.25rem
    public static let expCompositionChipFontWeightBold = 700
    public static let expCompositionChipFontWeightExtraBold = 800
    public static let expCompositionChipFontWeightLight = 300
    public static let expCompositionChipFontWeightMedium = 500
    public static let expCompositionChipFontWeightRegular = 400
    public static let expCompositionChipFontWeightSemiBold = 600
    public static let expCompositionChipFontWeightThin = 100
    public static let expCompositionChipLineHeightDefault = 1
    public static let expCompositionChipPaddingClose = 0px
    public static let expCompositionChipPaddingCompact = .75em
    public static let expCompositionChipPaddingDefault = 0.5rem 1em
    public static let expCompositionChipShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    public static let expCompositionChipShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expCompositionChipTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionChipTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionChipTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionChipTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionChipTextColorPrimary = hsl(0, 0%, 2%)
    public static let expCompositionChipTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionChipTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expCompositionChipTextColorTitle = hsl(0, 0%, 40%)
    public static let expCompositionChipWidthExtraLarge = 100%
    public static let expCompositionChipWidthLarge = 75%
    public static let expCompositionChipWidthMedium = 50%
    public static let expCompositionChipWidthSmall = 33%
    public static let expCompositionChipWidthXtraSmall = 20%
    public static let expCompositionDrawerBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionDrawerBackgroundColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionDrawerBackgroundColorDrawerContent = hsl(0, 0%, 95%)
    public static let expCompositionDrawerBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expCompositionDrawerBackgroundColorInverse = hsl(195, 85%, 50%)
    public static let expCompositionDrawerBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionDrawerBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expCompositionDrawerBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionDrawerBorderRadiusDefault = 4px
    public static let expCompositionDrawerFontSizeContent = 1rem
    public static let expCompositionDrawerFontSizeSubTitle = 1rem
    public static let expCompositionDrawerFontSizeTitle = 1.5rem
    public static let expCompositionDrawerFontWeightClose = 400
    public static let expCompositionDrawerFontWeightTitle = 400
    public static let expCompositionDrawerHeightBody = calc(100vh - 3.5rem)
    public static let expCompositionDrawerHeightTitle = 3.5rem
    public static let expCompositionDrawerMarginCloseLeft = auto
    public static let expCompositionDrawerOverlay = rgba(0, 0, 0, 0.5)
    public static let expCompositionDrawerPaddingActionTitleLeft = 0
    public static let expCompositionDrawerPaddingDrawerInner = 1rem 2.5rem
    public static let expCompositionDrawerPaddingDrawerInner768 = 2rem 2.5rem
    public static let expCompositionDrawerPaddingTitleLeft = 3.5rem
    public static let expCompositionDrawerShadowBox = 2px 3px 4px 0px rgba(0, 0, 0, 0.2)
    public static let expCompositionDrawerTextColorBody = hsl(0, 0%, 2%)
    public static let expCompositionDrawerTextColorIcon = hsl(0, 0%, 6%)
    public static let expCompositionDrawerTextColorInverse = hsl(220, 100%, 53%)
    public static let expCompositionDrawerTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expCompositionDrawerTextColorTitle = hsl(220, 100%, 53%)
    public static let expCompositionDrawerTransformDefault = translateX(-100%)
    public static let expCompositionDrawerTransformDrawerBottom = translateX(100%)
    public static let expCompositionDrawerTransformDrawerRight = translateX(100%)
    public static let expCompositionDrawerTransition = transform 0.3s ease-out
    public static let expCompositionDrawerWidthBorder = 1px
    public static let expCompositionDropdownArrowFontSize = .875rem
    public static let expCompositionDropdownArrowHeight = 19px
    public static let expCompositionDropdownArrowTextColor = hsl(0, 0%, 6%)
    public static let expCompositionDropdownArrowWidth = 22px
    public static let expCompositionDropdownButtonBackgroundColor = hsl(0, 0%, 100%)
    public static let expCompositionDropdownButtonBackgroundColorHover = hsl(0, 0%, 75%)
    public static let expCompositionDropdownButtonBorder = hsl(0, 0%, 55%)
    public static let expCompositionDropdownButtonBorderColorHover = hsl(220, 100%, 53%)
    public static let expCompositionDropdownButtonBorderRadius = 4px
    public static let expCompositionDropdownButtonFontSize = 1rem
    public static let expCompositionDropdownButtonFontWeight = 500
    public static let expCompositionDropdownButtonPadding = .5rem 1rem
    public static let expCompositionDropdownButtonTextColor = hsl(0, 0%, 6%)
    public static let expCompositionDropdownButtonTextColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionDropdownButtonTransition = border-color 0.3s ease
    public static let expCompositionDropdownLabelFontSize = .875rem
    public static let expCompositionDropdownLabelMarginBottom = .5rem
    public static let expCompositionDropdownLabelTextColor = hsl(0, 0%, 6%)
    public static let expCompositionDropdownListBackgroundColor = hsl(0, 0%, 100%)
    public static let expCompositionDropdownListBorder = hsl(0, 0%, 85%)
    public static let expCompositionDropdownListBorderRadius = 4px
    public static let expCompositionDropdownListBorderWidth = 1
    public static let expCompositionDropdownListFontSize = 1rem
    public static let expCompositionDropdownListHeight = fit-content
    public static let expCompositionDropdownListLeft = 0
    public static let expCompositionDropdownListListStyle = none
    public static let expCompositionDropdownListMargin = 0
    public static let expCompositionDropdownListPadding = 0
    public static let expCompositionDropdownListShadow = [object Object]
    public static let expCompositionDropdownListTextColor = hsl(0, 0%, 6%)
    public static let expCompositionDropdownListTextColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionDropdownListTextColorHover = hsl(0, 0%, 2%)
    public static let expCompositionDropdownListTop = 100%
    public static let expCompositionDropdownListTransition = background-color 0.3s ease-in-out
    public static let expCompositionDropdownListWidth = 12rem
    public static let expCompositionDropdownListZIndex = 1000
    public static let expCompositionDropdownOptionBackgroundColor = hsl(0, 0%, 95%)
    public static let expCompositionDropdownOptionBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionDropdownOptionBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expCompositionDropdownOptionBackgroundColorSelected = rgba(255, 255, 255, 0.2)
    public static let expCompositionDropdownOptionBorder = none
    public static let expCompositionDropdownOptionBorderRadius = 4px
    public static let expCompositionDropdownOptionFontSize = 1rem
    public static let expCompositionDropdownOptionFontWeight = 500
    public static let expCompositionDropdownOptionFontWeightSelected = 700
    public static let expCompositionDropdownOptionPadding = .5rem 1rem
    public static let expCompositionDropdownOptionTextColor = hsl(0, 0%, 6%)
    public static let expCompositionDropdownOptionTextColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionDropdownOptionTextColorHover = hsl(0, 0%, 95%)
    public static let expCompositionDropdownOptionTransition = background-color 0.3s ease-in-out
    public static let expCompositionDropdownWidth = 12rem
    public static let expCompositionFabBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionFabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionFabBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionFabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionFabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expCompositionFabBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expCompositionFabBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expCompositionFabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionFabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionFabBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionFabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionFabBorderRadiusPill = 9999px
    public static let expCompositionFabFontSizeLarge = 1.25rem
    public static let expCompositionFabFontSizeMedium = 1rem
    public static let expCompositionFabFontSizeSmall = .875rem
    public static let expCompositionFabFontSizeXl = 1.5rem
    public static let expCompositionFabFontWeightBold = 700
    public static let expCompositionFabFontWeightExtraBold = 800
    public static let expCompositionFabFontWeightLight = 300
    public static let expCompositionFabFontWeightMedium = 500
    public static let expCompositionFabFontWeightRegular = 400
    public static let expCompositionFabFontWeightSemiBold = 600
    public static let expCompositionFabFontWeightThin = 100
    public static let expCompositionFabHeightMedium = 3.5rem
    public static let expCompositionFabLocationBottom = 1.5rem
    public static let expCompositionFabLocationLeft = 1.5rem
    public static let expCompositionFabLocationRight = 1.5rem
    public static let expCompositionFabMarginAccordionslide = .5em 0 .5em 0
    public static let expCompositionFabPaddingLarge = 1rem 1.5rem
    public static let expCompositionFabPaddingMedium = .75rem 1.25rem
    public static let expCompositionFabPaddingSmall = .5rem 1rem
    public static let expCompositionFabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expCompositionFabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expCompositionFabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expCompositionFabTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionFabTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionFabTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionFabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionFabTextColorLight = hsl(0, 0%, 95%)
    public static let expCompositionFabTextColorPrimary = hsl(0, 0%, 95%)
    public static let expCompositionFabTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionFabWidthMedium = 3.5rem
    public static let expCompositionIconFillDefault = hsl(0, 0%, 1%)
    public static let expCompositionIconStrokeDefault = hsl(0, 0%, 1%)
    public static let expCompositionMenuBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expCompositionMenuBackgroundColorFooter = hsl(0, 0%, 98%)
    public static let expCompositionMenuBackgroundColorToggleBg = hsl(0, 0%, 98%)
    public static let expCompositionMenuBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionMenuBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expCompositionMenuBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionMenuBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expCompositionMenuBorderRadius = 4px
    public static let expCompositionMenuFontFamilyBody = Open Sans, sans-serif
    public static let expCompositionMenuFontSizeContent = 1rem
    public static let expCompositionMenuFontSizeLarge = 1.25rem
    public static let expCompositionMenuFontSizeMedium = 1rem
    public static let expCompositionMenuFontSizeSmall = .875rem
    public static let expCompositionMenuFontSizeSubTitle = 1rem
    public static let expCompositionMenuFontSizeTitle = 1.25rem
    public static let expCompositionMenuFontWeightBold = 700
    public static let expCompositionMenuFontWeightExtraBold = 800
    public static let expCompositionMenuFontWeightLight = 300
    public static let expCompositionMenuFontWeightMedium = 500
    public static let expCompositionMenuFontWeightRegular = 400
    public static let expCompositionMenuFontWeightSemiBold = 600
    public static let expCompositionMenuFontWeightThin = 100
    public static let expCompositionMenuPaddingCompact = .75em
    public static let expCompositionMenuPaddingDefault = 0.5rem 1em
    public static let expCompositionMenuShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    public static let expCompositionMenuShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expCompositionMenuTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionMenuTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionMenuTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionMenuTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionMenuTextColorPrimary = hsl(0, 0%, 2%)
    public static let expCompositionMenuTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionMenuTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expCompositionMenuTextColorTitle = hsl(0, 0%, 40%)
    public static let expCompositionMenuWidthExtraLarge = 100%
    public static let expCompositionMenuWidthLarge = 75%
    public static let expCompositionMenuWidthMedium = 50%
    public static let expCompositionMenuWidthSmall = 33%
    public static let expCompositionMenuWidthXtraSmall = 20%
    public static let expCompositionModalBackgroundColor = hsl(0, 0%, 95%)
    public static let expCompositionModalBodyFontFamily = Open Sans, sans-serif
    public static let expCompositionModalBodyFontSize = 1rem
    public static let expCompositionModalBodyPadding = 2.5rem 0.5rem
    public static let expCompositionModalBodyWidth = 50em
    public static let expCompositionModalBorderRadius = 4px
    public static let expCompositionModalButtonCellPadding = 0 .5rem
    public static let expCompositionModalButtonRowPadding = 1rem
    public static let expCompositionModalCloseBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionModalCloseBorder = none
    public static let expCompositionModalCloseFontWeight = 700
    public static let expCompositionModalCloseHeight = 3.5rem
    public static let expCompositionModalCloseInverse = hsl(195, 85%, 50%)
    public static let expCompositionModalClosePadding = .75rem
    public static let expCompositionModalCloseWidth = 3.5rem
    public static let expCompositionModalContentBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionModalContentBorderRadius = 4px
    public static let expCompositionModalContentHeight = 100vh
    public static let expCompositionModalContentPadding = 1rem
    public static let expCompositionModalContentShadow = [object Object]
    public static let expCompositionModalContentWidth = 100%
    public static let expCompositionModalDialogTransformBottom = translate(-50%, 0)
    public static let expCompositionModalDialogTransformDefault = translate(-50%, -50%)
    public static let expCompositionModalDialogTransformLeft = translate(0, -50%)
    public static let expCompositionModalDialogTransformRight = translate(0, -50%)
    public static let expCompositionModalDialogTransformTop = translate(-50%, 0)
    public static let expCompositionModalDialogTransition = transform 0.3s ease-out
    public static let expCompositionModalHeaderBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionModalHeaderBorderBottom = 1px solid #CCCCCC
    public static let expCompositionModalHeaderBorderRadius = 4px
    public static let expCompositionModalHeaderHeight = 3.5rem
    public static let expCompositionModalHeaderInverse = hsl(195, 85%, 50%)
    public static let expCompositionModalHeaderPadding = 1rem
    public static let expCompositionModalHeaderTextColor = hsl(0, 0%, 20%)
    public static let expCompositionModalHeightMedium = 9em
    public static let expCompositionModalHeightShort = 3em
    public static let expCompositionModalHeightTall = 18em
    public static let expCompositionModalIconInverse = hsl(195, 85%, 50%)
    public static let expCompositionModalIconStyleCautionFill = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expCompositionModalIconStyleCautionStroke = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expCompositionModalIconStyleDefaultFill = hsl(0, 0%, 45%)
    public static let expCompositionModalIconStyleDefaultStroke = hsl(0, 0%, 45%)
    public static let expCompositionModalIconStyleSuccessFill = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expCompositionModalIconStyleSuccessStroke = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expCompositionModalIconStyleWarnFill = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expCompositionModalIconStyleWarnStroke = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expCompositionModalLineHeight = 1.5
    public static let expCompositionModalOpenOpacity = 1
    public static let expCompositionModalOverlayColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let expCompositionModalOverlayOpacity = 0.5
    public static let expCompositionModalPadding = 1.5rem
    public static let expCompositionModalResponsiveBorderRadius481px768px = 4px
    public static let expCompositionModalResponsiveBorderRadiusMax480px = 4px
    public static let expCompositionModalResponsiveBorderRadiusMinWidth768pxContentBorderRadius = .25em
    public static let expCompositionModalResponsiveBorderRadiusMinWidth768pxHeaderBorderRadius = .25rem .25rem 0 0
    public static let expCompositionModalResponsiveHeight481px768px = 26.25em
    public static let expCompositionModalResponsiveHeightMax480px = 26.25em
    public static let expCompositionModalResponsiveWidth481px768px = 17.5em
    public static let expCompositionModalResponsiveWidthMax480px = 17.5em
    public static let expCompositionModalStatusFontFamily = Open Sans, sans-serif
    public static let expCompositionModalStatusFontSize = 1rem
    public static let expCompositionModalStatusFontWeight = 400
    public static let expCompositionModalStatusIconBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionModalStatusIconBorder = none
    public static let expCompositionModalStatusIconFontWeight = 700
    public static let expCompositionModalStatusIconHeight = 1.5rem
    public static let expCompositionModalStatusIconInverse = hsl(195, 85%, 50%)
    public static let expCompositionModalStatusIconMargin = 0 12px 0 0
    public static let expCompositionModalStatusIconPadding = 0 12px 0 0
    public static let expCompositionModalStatusIconTextColor = hsl(0, 0%, 20%)
    public static let expCompositionModalStatusIconWidth = 1.5rem
    public static let expCompositionModalStatusLineHeight = 1.5
    public static let expCompositionModalStatusMargin = 1rem
    public static let expCompositionModalStatusPadding = 1rem
    public static let expCompositionModalSvgFill = hsl(0, 0%, 20%)
    public static let expCompositionModalTextAreaFontFamily = Open Sans, sans-serif
    public static let expCompositionModalTextAreaFontSize = 1rem
    public static let expCompositionModalTextAreaPadding = 1rem
    public static let expCompositionModalTextAreaTextAlign = left
    public static let expCompositionModalTextAreaWidth = 23em
    public static let expCompositionModalTextColor = hsl(0, 0%, 6%)
    public static let expCompositionModalTitleFontFamily = Open Sans, sans-serif
    public static let expCompositionModalTitleFontSize = 1.25rem
    public static let expCompositionModalTitleFontWeight = 400
    public static let expCompositionModalTitlePaddingLeft = .75rem
    public static let expCompositionModalTransition = transform 0.3s ease-out
    public static let expCompositionModalTypographyContent = 1rem
    public static let expCompositionModalTypographyFontFamily = Open Sans, sans-serif
    public static let expCompositionModalTypographySubtitle = 1rem
    public static let expCompositionModalTypographyTitle = 1.5rem
    public static let expCompositionModalWidthMedium = 35em
    public static let expCompositionModalWidthNarrow = 28em
    public static let expCompositionModalZIndex = 1000
    public static let expCompositionRadioBackgroundColorChecked = hsl(220, 100%, 53%)
    public static let expCompositionRadioBackgroundColorUnchecked = hsl(0, 0%, 95%)
    public static let expCompositionRadioBorderColorChecked = hsl(0, 0%, 2%)
    public static let expCompositionRadioBorderColorUnchecked = hsl(220, 100%, 53%)
    public static let expCompositionRadioDisabledBackgroundColor = hsl(0, 0%, 75%)
    public static let expCompositionRadioDisabledBorderColor = hsl(0, 0%, 45%)
    public static let expCompositionRadioDisabledOpacity = 0.6
    public static let expCompositionRadioGroupIndicatorBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionRadioGroupIndicatorBorder = 2px solid hsl(220, 100%, 43%)
    public static let expCompositionRadioGroupIndicatorBorderRadius = CGFloat(800.00)
    public static let expCompositionRadioGroupIndicatorHeight = 1rem
    public static let expCompositionRadioGroupIndicatorMarginRight = .5rem
    public static let expCompositionRadioGroupIndicatorTransition = background-color 0.3s ease
    public static let expCompositionRadioGroupIndicatorWidth = 1rem
    public static let expCompositionRadioGroupMarginBottom = .5rem
    public static let expCompositionRadioLabelFontFamily = Open Sans, sans-serif
    public static let expCompositionRadioLabelFontSize = 1rem
    public static let expCompositionRadioLabelMarginLeft = .5rem
    public static let expCompositionRadioLabelTextColor = hsl(0, 0%, 2%)
    public static let expCompositionRadioSize = CGFloat(256.00)
    public static let expCompositionSliderThumbColor = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expCompositionSliderThumbSize = CGFloat(256.00)
    public static let expCompositionSliderTrackColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionSliderTrackHeight = CGFloat(64.00)
    public static let expCompositionSplitButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionSplitButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionSplitButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionSplitButtonBackgroundColorDropdownButton = hsl(220, 100%, 53%)
    public static let expCompositionSplitButtonBackgroundColorDropdownButtonHover = hsl(220, 100%, 23%)
    public static let expCompositionSplitButtonBackgroundColorDropdownMenu = hsl(0, 0%, 92%)
    public static let expCompositionSplitButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionSplitButtonBackgroundColorPrimaryButton = hsl(280, 40%, 45%)
    public static let expCompositionSplitButtonBackgroundColorPrimaryButtonHover = hsl(280, 20%, 25%)
    public static let expCompositionSplitButtonBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionSplitButtonBorderDropdownButton = 1px solid hsl(220, 100%, 43%)
    public static let expCompositionSplitButtonBorderDropdownButtonLeft = 1px solid hsl(220, 100%, 23%)
    public static let expCompositionSplitButtonBorderDropdownMenu = 1px solid hsl(0, 0%, 45%)
    public static let expCompositionSplitButtonBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionSplitButtonBorderPrimaryButton = 1px solid hsl(280, 40%, 45%)
    public static let expCompositionSplitButtonBorderRadiusDropdownButton = 0 4px 4px 0
    public static let expCompositionSplitButtonBorderRadiusDropdownMenu = 4px
    public static let expCompositionSplitButtonBorderRadiusPrimaryButton = 4px 0 0 4px
    public static let expCompositionSplitButtonFontSizeDropdownIcon = 1rem
    public static let expCompositionSplitButtonFontSizePrimaryButton = 1rem
    public static let expCompositionSplitButtonFontWeightBold = 700
    public static let expCompositionSplitButtonFontWeightExtraBold = 800
    public static let expCompositionSplitButtonFontWeightLight = 300
    public static let expCompositionSplitButtonFontWeightMedium = 500
    public static let expCompositionSplitButtonFontWeightRegular = 400
    public static let expCompositionSplitButtonFontWeightSemiBold = 600
    public static let expCompositionSplitButtonFontWeightThin = 100
    public static let expCompositionSplitButtonLabelColor = hsl(0, 0%, 6%)
    public static let expCompositionSplitButtonLabelColorHover = hsl(0, 0%, 2%)
    public static let expCompositionSplitButtonLabelFontSize = 1rem
    public static let expCompositionSplitButtonLabelFontWeight = 500
    public static let expCompositionSplitButtonLabelMarginBottom = .5rem
    public static let expCompositionSplitButtonLabelTransition = color 0.3s
    public static let expCompositionSplitButtonPaddingDropdownButton = .73em
    public static let expCompositionSplitButtonPaddingPrimaryButton = .5rem 1rem
    public static let expCompositionSplitButtonRangeSliderGap = .5rem
    public static let expCompositionSplitButtonRangeSliderRangeBackgroundColor = hsl(0, 0%, 85%)
    public static let expCompositionSplitButtonRangeSliderRangeBorderRadius = 4px
    public static let expCompositionSplitButtonRangeSliderRangeTransition = background-color 0.3s ease-in-out
    public static let expCompositionSplitButtonRangeSliderThumbBackgroundColor = hsl(195, 85%, 50%)
    public static let expCompositionSplitButtonRangeSliderThumbBorderRadius = 50%
    public static let expCompositionSplitButtonRangeSliderThumbHeight = 1.25rem
    public static let expCompositionSplitButtonRangeSliderThumbTransition = background-color 0.3s ease-in-out
    public static let expCompositionSplitButtonRangeSliderThumbWidth = 1.25rem
    public static let expCompositionSplitButtonRangeSliderValueDisplayColor = hsl(0, 0%, 6%)
    public static let expCompositionSplitButtonRangeSliderValueDisplayFontSize = 1rem
    public static let expCompositionSplitButtonRangeSliderValueDisplayFontWeight = 700
    public static let expCompositionSplitButtonShadowDropdownMenuBox = [object Object]
    public static let expCompositionSplitButtonTextColorDropdownButton = hsl(0, 0%, 95%)
    public static let expCompositionSplitButtonTextColorPrimaryButton = hsl(0, 0%, 95%)
    public static let expCompositionSplitButtonTransitionPrimaryButton = background-color 0.3s ease-in-out
    public static let expCompositionSplitButtonWidthDropdownMenuMin = 8rem
    public static let expCompositionSwitchBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionSwitchBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionSwitchBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionSwitchBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionSwitchBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expCompositionSwitchBackgroundColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionSwitchBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expCompositionSwitchBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionSwitchBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionSwitchBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionSwitchBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionSwitchBorderRadiusDefault = 4px
    public static let expCompositionSwitchBorderRadiusPill = 9999px
    public static let expCompositionSwitchFontSize = .675rem
    public static let expCompositionSwitchFontWeight = 700
    public static let expCompositionSwitchHeight = 1.5rem
    public static let expCompositionSwitchLeverColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    public static let expCompositionSwitchLeverColorBackgroundOnDefault = hsl(280, 60%, 65%)
    public static let expCompositionSwitchLeverHeightLarge = 1.5rem
    public static let expCompositionSwitchLeverHeightMedium = 1.25rem
    public static let expCompositionSwitchLeverHeightSmall = 1rem
    public static let expCompositionSwitchLeverShadowBoxShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expCompositionSwitchLeverShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    public static let expCompositionSwitchLeverShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    public static let expCompositionSwitchLeverShadowOnStatic = none
    public static let expCompositionSwitchLeverWidthLarge = 4rem
    public static let expCompositionSwitchLeverWidthMedium = 3rem
    public static let expCompositionSwitchLeverWidthSmall = 2rem
    public static let expCompositionSwitchPaddingLarge = 1rem 1.5rem
    public static let expCompositionSwitchPaddingMedium = .75rem 1.25rem
    public static let expCompositionSwitchPaddingSmall = .5rem 1rem
    public static let expCompositionSwitchTextColorDanger = hsl(0, 80%, 40%)
    public static let expCompositionSwitchTextColorDefault = hsl(0, 0%, 4%)
    public static let expCompositionSwitchTextColorSuccess = hsl(120, 60%, 65%)
    public static let expCompositionSwitchTextColorWarning = hsl(60, 40%, 45%)
    public static let expCompositionSwitchThumbColorBackgroundOffStaticDefault = hsl(280, 60%, 65%)
    public static let expCompositionSwitchThumbColorBackgroundOffStaticDisabled = hsl(0, 0%, 45%)
    public static let expCompositionSwitchThumbColorBackgroundOffStaticFocused = hsl(220, 100%, 53%)
    public static let expCompositionSwitchThumbColorBackgroundOffStaticHover = hsl(280, 50%, 55%)
    public static let expCompositionSwitchThumbColorBackgroundOffStaticPressed = hsl(220, 100%, 53%)
    public static let expCompositionSwitchThumbColorBackgroundOnStaticDefault = hsl(280, 60%, 65%)
    public static let expCompositionSwitchThumbColorBackgroundOnStaticFocused = hsl(220, 100%, 53%)
    public static let expCompositionSwitchThumbColorBackgroundOnStaticHover = hsl(280, 40%, 45%)
    public static let expCompositionSwitchThumbColorBorderOffFocused = 4px solid hsl(0, 0%, 55%)
    public static let expCompositionSwitchThumbColorBorderOffPressed = 4px solid hsl(270, 55%, 55%)
    public static let expCompositionSwitchThumbColorBorderOnFocused = 4px solid hsl(220, 100%, 53%)
    public static let expCompositionSwitchThumbColorBorderOnPressed = 4px solid hsl(270, 55%, 55%)
    public static let expCompositionSwitchThumbShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    public static let expCompositionSwitchThumbShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    public static let expCompositionSwitchThumbShadowOnStatic = none
    public static let expCompositionSwitchThumbWidth = 1.5rem
    public static let expCompositionSwitchTrackColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    public static let expCompositionSwitchTrackColorBackgroundOnDefault = hsl(240, 20%, 98%)
    public static let expCompositionSwitchTrackHeight = 1.25rem
    public static let expCompositionSwitchTrackShadow = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    public static let expCompositionSwitchTrackWidth = 3rem
    public static let expCompositionTabBackgroundColorButton = none
    public static let expCompositionTabBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expCompositionTabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expCompositionTabBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expCompositionTabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionTabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expCompositionTabBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expCompositionTabBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expCompositionTabBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    public static let expCompositionTabBorderButtomBottom = 2px solid transparent
    public static let expCompositionTabBorderButton = none
    public static let expCompositionTabBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    public static let expCompositionTabBorderColorBarBottom = hsl(0, 0%, 85%)
    public static let expCompositionTabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionTabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionTabBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expCompositionTabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionTabBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expCompositionTabBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expCompositionTabBorderPanel = 1px solid hsl(0, 0%, 85%)
    public static let expCompositionTabBorderPanelTop = none
    public static let expCompositionTabBorderRadiusPill = 9999px
    public static let expCompositionTabBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expCompositionTabBorderWidth = 1px
    public static let expCompositionTabFontSizeButton = 1rem
    public static let expCompositionTabFontSizeLarge = 1.25rem
    public static let expCompositionTabFontSizeMedium = 1rem
    public static let expCompositionTabFontSizeSmall = .875rem
    public static let expCompositionTabFontSizeXl = 1.5rem
    public static let expCompositionTabFontWeightBold = 700
    public static let expCompositionTabFontWeightExtraBold = 800
    public static let expCompositionTabFontWeightLight = 300
    public static let expCompositionTabFontWeightMedium = 500
    public static let expCompositionTabFontWeightRegular = 400
    public static let expCompositionTabFontWeightSemiBold = 600
    public static let expCompositionTabFontWeightThin = 100
    public static let expCompositionTabGapBar = .5rem
    public static let expCompositionTabHeightMedium = 3.5rem
    public static let expCompositionTabLocationBottom = 1.5rem
    public static let expCompositionTabLocationLeft = 1.5rem
    public static let expCompositionTabLocationRight = 1.5rem
    public static let expCompositionTabPaddingButton = .5em 1em
    public static let expCompositionTabPaddingLarge = 1rem 1.5rem
    public static let expCompositionTabPaddingMedium = .75rem 1.25rem
    public static let expCompositionTabPaddingSmall = .5rem 1rem
    public static let expCompositionTabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expCompositionTabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expCompositionTabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expCompositionTabTextColorButton = hsl(0, 0%, 4%)
    public static let expCompositionTabTextColorButtonActive = hsl(220, 40%, 45%)
    public static let expCompositionTabTextColorDanger = hsl(0, 0%, 95%)
    public static let expCompositionTabTextColorDisabled = hsl(0, 0%, 45%)
    public static let expCompositionTabTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expCompositionTabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expCompositionTabTextColorLight = hsl(0, 0%, 95%)
    public static let expCompositionTabTextColorPrimary = hsl(0, 0%, 95%)
    public static let expCompositionTabTextColorSecondary = hsl(0, 0%, 95%)
    public static let expCompositionTabTransitionButton = color 0.3s, border-bottom-color 0.3s
    public static let expCompositionTabWidthMedium = 3.5rem
    public static let expCompositionTextareaBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expCompositionTextareaBorder = 1px solid hsl(0, 0%, 75%)
    public static let expCompositionTextareaBorderFocus = hsl(220, 100%, 53%)
    public static let expCompositionTextareaBorderRadius = 4px
    public static let expCompositionTextareaCharCounterFontFamily = Open Sans, sans-serif
    public static let expCompositionTextareaCharCounterFontSize = .875rem
    public static let expCompositionTextareaCharCounterFontWeight = 400
    public static let expCompositionTextareaCharCounterMargin = .5rem 0 0 0
    public static let expCompositionTextareaCharCounterTextAlign = right
    public static let expCompositionTextareaCharCounterTextColor = hsl(0, 0%, 55%)
    public static let expCompositionTextareaDisabled = hsl(0, 0%, 75%)
    public static let expCompositionTextareaErrorFontFamily = Open Sans, sans-serif
    public static let expCompositionTextareaErrorFontSize = .875rem
    public static let expCompositionTextareaErrorFontWeight = 400
    public static let expCompositionTextareaErrorMargin = .5rem 0 0 0
    public static let expCompositionTextareaErrorTextColor = hsl(0, 95%, 50%)
    public static let expCompositionTextareaFontSize = 1rem
    public static let expCompositionTextareaGap = .5rem
    public static let expCompositionTextareaPadding = .5rem
    public static let expCompositionTextareaPlaceholderBackgroundColor = hsl(0, 0%, 85%)
    public static let expCompositionTextareaPlaceholderTextColor = hsl(0, 0%, 55%)
    public static let expCompositionTextareaTextColorPlaceholder = hsl(0, 0%, 55%)
    public static let expCompositionTextareaTransition = transform 0.3s ease-out
    public static let expCompositionTextareaWidth = 16rem
    public static let expCompositionTextinputBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expCompositionTextinputBackgroundColorDisabled = hsl(0, 0%, 95%)
    public static let expCompositionTextinputBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expCompositionTextinputBackgroundColorNumeric = hsl(0, 0%, 95%)
    public static let expCompositionTextinputBorderRadiusDefault = 4px
    public static let expCompositionTextinputButtonBackgroundColor = hsl(0, 0%, 95%)
    public static let expCompositionTextinputButtonBackgroundColorDisabled = hsl(0, 0%, 95%)
    public static let expCompositionTextinputButtonBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expCompositionTextinputButtonBorder = 1px solid hsl(0, 0%, 75%)
    public static let expCompositionTextinputButtonBorderRadius = 4px
    public static let expCompositionTextinputButtonFontSize = 1.25rem
    public static let expCompositionTextinputButtonHeight = 2rem
    public static let expCompositionTextinputButtonMargin = .5rem 0 0 0
    public static let expCompositionTextinputButtonPadding = .5rem
    public static let expCompositionTextinputButtonTextColor = hsl(0, 0%, 20%)
    public static let expCompositionTextinputButtonTextColorDisabled = hsl(0, 0%, 75%)
    public static let expCompositionTextinputButtonTextColorHover = hsl(0, 0%, 95%)
    public static let expCompositionTextinputButtonTransition = transform 0.3s ease-out
    public static let expCompositionTextinputButtonWidth = 2rem
    public static let expCompositionTextinputErrorMessageFontFamily = Open Sans, sans-serif
    public static let expCompositionTextinputErrorMessageFontSize = .875rem
    public static let expCompositionTextinputErrorMessageFontWeight = 400
    public static let expCompositionTextinputErrorMessageMargin = .5rem 0 0 0
    public static let expCompositionTextinputErrorMessageTextColor = hsl(0, 95%, 50%)
    public static let expCompositionTextinputInputBorder = 1px solid hsl(0, 0%, 75%)
    public static let expCompositionTextinputInputBorderFocus = hsl(220, 100%, 53%)
    public static let expCompositionTextinputInputBorderRadius = 4px
    public static let expCompositionTextinputInputBorderRadiusNumeric = 4px
    public static let expCompositionTextinputInputFontSize = 1rem
    public static let expCompositionTextinputInputGap = .5rem
    public static let expCompositionTextinputInputPadding = .5rem
    public static let expCompositionTextinputInputTextColorDisabled = hsl(0, 0%, 75%)
    public static let expCompositionTextinputInputTextColorPlaceholder = hsl(0, 0%, 55%)
    public static let expCompositionTextinputInputTransition = transform 0.3s ease-out
    public static let expCompositionTextinputInputWidth = 16rem
    public static let expCompositionTextinputInputWidthNumeric = 4rem
    public static let expCompositionTextinputLabelFontFamily = Open Sans, sans-serif
    public static let expCompositionTextinputLabelFontSize = 1rem
    public static let expCompositionTextinputLabelFontWeight = 400
    public static let expCompositionTextinputLabelMargin = .5rem 0 0 0
    public static let expCompositionTextinputLabelTextColor = hsl(0, 0%, 20%)
    public static let expCompositionTextinputPaddingDefault = 8px 12px
    public static let expCompositionTextinputWrapperErrorBorderColor = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expCompositionToastBackgroundColorError = hsl(0, 95%, 50%)
    public static let expCompositionToastBackgroundColorInfo = hsl(220, 60%, 65%)
    public static let expCompositionToastBackgroundColorSuccess = hsl(120, 60%, 65%)
    public static let expCompositionToastBackgroundColorWarning = hsl(60, 40%, 45%)
    public static let expCompositionToastBorderRadius = 4px
    public static let expCompositionToastFontSize = 1rem
    public static let expCompositionToastPadding = 1rem
    public static let expCompositionToastPositionsBottomLeftBottom = 1rem
    public static let expCompositionToastPositionsBottomLeftLeft = 1rem
    public static let expCompositionToastPositionsBottomRightBottom = 1rem
    public static let expCompositionToastPositionsBottomRightRight = 1rem
    public static let expCompositionToastPositionsTopLeftLeft = 1rem
    public static let expCompositionToastPositionsTopLeftTop = 1rem
    public static let expCompositionToastPositionsTopRightRight = 1rem
    public static let expCompositionToastPositionsTopRightTop = 1rem
    public static let expCompositionToastShadowBox = [object Object]
    public static let expCompositionToastTextColorDefault = hsl(0, 0%, 95%)
    public static let expCompositionToastTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expCompositionToastTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    public static let expCompositionToastTransition = transform 0.3s ease-out
    public static let expCompositionToastZIndex = 1000
    public static let expCompositionTooltipBackgroundColor = hsl(0, 0%, 6%)
    public static let expCompositionTooltipBorderRadius = 4px
    public static let expCompositionTooltipFontSize = .875rem
    public static let expCompositionTooltipPadding = .5rem
    public static let expCompositionTooltipPointerBackgroundColor = hsl(0, 0%, 2%)
    public static let expCompositionTooltipPointerBorderStyle = solid
    public static let expCompositionTooltipPointerBottomBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expCompositionTooltipPointerBottomBorderWidth = 8px 8px 0 8px
    public static let expCompositionTooltipPointerBottomLeft = 52%
    public static let expCompositionTooltipPointerBottomMarginTop = 1rem
    public static let expCompositionTooltipPointerBottomTop = -32%
    public static let expCompositionTooltipPointerBottomTransform = translateX(-50%) rotate(180deg)
    public static let expCompositionTooltipPointerContentBackground = hsl(0, 0%, 2%)
    public static let expCompositionTooltipPointerContentBorderRadius = 4px
    public static let expCompositionTooltipPointerContentFontSize = .875rem
    public static let expCompositionTooltipPointerContentPadding = .5rem
    public static let expCompositionTooltipPointerContentTextColor = hsl(0, 0%, 95%)
    public static let expCompositionTooltipPointerContentWhiteSpace = nowrap
    public static let expCompositionTooltipPointerContentZIndex = 1000
    public static let expCompositionTooltipPointerHeight = calc(.5rem * .375)
    public static let expCompositionTooltipPointerLeftBorderColor = hsl(0, 0%, 0%, 0) hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expCompositionTooltipPointerLeftBorderWidth = 8px 8px 8px 0
    public static let expCompositionTooltipPointerLeftRight = -11px
    public static let expCompositionTooltipPointerLeftTop = 50%
    public static let expCompositionTooltipPointerLeftTransform = translateY(-50%) rotate(180deg)
    public static let expCompositionTooltipPointerRightBorderColor = transparent transparent transparent hsl(0, 0%, 2%)
    public static let expCompositionTooltipPointerRightBorderWidth = .5rem 0 .5rem .5rem
    public static let expCompositionTooltipPointerRightLeft = -11.5%
    public static let expCompositionTooltipPointerRightTop = 50%
    public static let expCompositionTooltipPointerRightTransform = translateY(-50%) rotate(180deg)
    public static let expCompositionTooltipPointerTopBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expCompositionTooltipPointerTopBorderWidth = .5rem .5rem 0 .5rem
    public static let expCompositionTooltipPointerTopBottom = -11px
    public static let expCompositionTooltipPointerTopLeft = 50%
    public static let expCompositionTooltipPointerTopTop = auto
    public static let expCompositionTooltipPointerTopTransform = translateX(-50%) rotate(360deg)
    public static let expCompositionTooltipPointerWidth = calc(.5rem * .625)
    public static let expCompositionTooltipShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expCompositionTooltipTextColor = hsl(0, 0%, 95%)
    public static let expCompositionTooltipZIndex = 1000
    public static let expConceptActionAliasesCta = action
    public static let expConceptActionAliasesInteraction = action
    public static let expConceptActionAliasesInteractive = action
    public static let expConceptActionDisabledBackgroundColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expConceptActionDisabledTextColor = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    public static let expConceptActionPrimaryBackgroundColor = UIColor(red: 0.000, green: 0.482, blue: 1.000, alpha: 1)
    public static let expConceptActionPrimaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expConceptActionSecondaryBackgroundColor = UIColor(red: 0.424, green: 0.459, blue: 0.490, alpha: 1)
    public static let expConceptActionSecondaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expConceptAllocationHigh = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1) /** Represents high allocation or usage level */
    public static let expConceptAllocationLow = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Represents low allocation or usage level */
    public static let expConceptAllocationMedium = UIColor(red: 1.000, green: 0.765, blue: 0.000, alpha: 1) /** Represents medium allocation or usage level */
    public static let expConceptBodyColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expConceptBodyColorMuted = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    public static let expConceptBodyFontSizeDefault = CGFloat(256.00)
    public static let expConceptBodyFontSizeSmall = CGFloat(224.00)
    public static let expConceptBodyFontWeightDefault = 400
    public static let expConceptBodyLineHeightDefault = 1.5
    public static let expConceptCommerceAvailabilityInStock = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    public static let expConceptCommerceAvailabilityOutOfStock = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    public static let expConceptCommerceDiscountColor = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expConceptCommerceDiscountFontWeight = 700
    public static let expConceptCommercePriceColor = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    public static let expConceptCommercePriceFontSize = CGFloat(288.00)
    public static let expConceptFeedbackAliasesAlert = feedback
    public static let expConceptFeedbackAliasesMessaging = feedback
    public static let expConceptFeedbackAliasesNotification = feedback
    public static let expConceptFeedbackErrorBackgroundColor = UIColor(red: 0.949, green: 0.871, blue: 0.871, alpha: 1)
    public static let expConceptFeedbackErrorTextColor = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    public static let expConceptFeedbackSuccessBackgroundColor = UIColor(red: 0.875, green: 0.941, blue: 0.847, alpha: 1)
    public static let expConceptFeedbackSuccessTextColor = UIColor(red: 0.235, green: 0.463, blue: 0.239, alpha: 1)
    public static let expConceptFeedbackWarningBackgroundColor = UIColor(red: 0.988, green: 0.973, blue: 0.890, alpha: 1)
    public static let expConceptFeedbackWarningTextColor = UIColor(red: 0.541, green: 0.427, blue: 0.231, alpha: 1)
    public static let expConceptHeadingAliasesDisplay = heading
    public static let expConceptHeadingAliasesHeader = heading
    public static let expConceptHeadingAliasesHeadingLevel = heading
    public static let expConceptHeadingAliasesHeadline = heading
    public static let expConceptHeadingFontSizeLarge = CGFloat(512.00)
    public static let expConceptHeadingFontSizeMedium = CGFloat(384.00)
    public static let expConceptHeadingFontSizeSmall = CGFloat(288.00)
    public static let expConceptHeadingFontWeightDefault = 700
    public static let expConceptHeadingLineHeightDefault = 1.2
    public static let expConceptVisualizationAliasesCharting = visualization
    public static let expConceptVisualizationAliasesCharts = visualization
    public static let expConceptVisualizationAliasesDataviz = visualization
    public static let expConceptVisualizationHighlight = UIColor(red: 1.000, green: 0.843, blue: 0.000, alpha: 1)
    public static let expConceptVisualizationPrimary = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expConceptVisualizationSecondary = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    public static let expConceptVisualizationTertiary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    public static let expElementBadgeBackgroundColorDefault = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expElementBadgeBackgroundColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementBadgeBackgroundColorSuccess = UIColor(red: 0.000, green: 0.800, blue: 0.400, alpha: 1)
    public static let expElementBadgeBorderRadius = 12px
    public static let expElementBadgePaddingLarge = 6px 12px
    public static let expElementBadgePaddingMedium = 4px 8px
    public static let expElementBadgePaddingSmall = 2px 4px
    public static let expElementBadgeTextColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expElementLeftIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementLeftIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementLeftIconColorDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let expElementLeftIconSizeLarge = CGFloat(512.00)
    public static let expElementLeftIconSizeMedium = CGFloat(384.00)
    public static let expElementLeftIconSizeSmall = CGFloat(256.00)
    public static let expElementMaskBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.8)
    public static let expElementMaskBlur = CGFloat(64.00)
    public static let expElementMaskOpacity = 0.8
    public static let expElementOverlayBackgroundColorDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let expElementOverlayBackgroundColorLight = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.3)
    public static let expElementOverlayOpacityDefault = 0.5
    public static let expElementOverlayOpacityLight = 0.3
    public static let expElementRightIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementRightIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementRightIconColorHover = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let expElementRightIconSizeLarge = CGFloat(512.00)
    public static let expElementRightIconSizeMedium = CGFloat(384.00)
    public static let expElementRightIconSizeSmall = CGFloat(256.00)
    public static let expElementSpinnerAnimationDurationFast = 0.5s
    public static let expElementSpinnerAnimationDurationNormal = 1s
    public static let expElementSpinnerAnimationDurationSlow = 1.5s
    public static let expElementSpinnerColorDefault = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementSpinnerColorLight = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expElementSpinnerSizeLarge = CGFloat(512.00)
    public static let expElementSpinnerSizeMedium = CGFloat(384.00)
    public static let expElementSpinnerSizeSmall = CGFloat(256.00)
    public static let expElementTooltipBackgroundColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementTooltipBorderRadius = 4px
    public static let expElementTooltipPadding = 8px
    public static let expElementTooltipShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expElementTooltipTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expElevationBackground = 0 /** Base background layer */
    public static let expElevationContent = 10 /** Primary content layer */
    public static let expElevationHeader = 100 /** Header or navigation bar layer */
    public static let expElevationModal = 500 /** Modal dialogs, highest elevation in most layouts */
    public static let expElevationOverlay = 200 /** Overlay elements like modals or drop-downs */
    public static let expElevationPopover = 400 /** Popovers, positioned above tooltips */
    public static let expElevationTooltip = 300 /** Tooltips, positioned above overlays */
    public static let expFontFontSizeBody = 1rem
    public static let expFontFontSizeHeading = 1.75rem
    public static let expFontFontSizeLg = 1.25rem
    public static let expFontFontSizeMd = 1rem
    public static let expFontFontSizeSm = .875rem
    public static let expFontFontSizeXl = 1.5rem
    public static let expFontFontSizeXs = .75rem
    public static let expFontFontSizeXxl = 2rem
    public static let expFontFontSizeXxs = .675rem
    public static let expFontFontStyleItalic = italic
    public static let expFontFontStyleNormal = normal
    public static let expFontFontStyleOblique = oblique
    public static let expFontFontWeightBold = 700
    public static let expFontFontWeightExtraBold = 800
    public static let expFontFontWeightLight = 300
    public static let expFontFontWeightMedium = 500
    public static let expFontFontWeightRegular = 400
    public static let expFontFontWeightSemiBold = 600
    public static let expFontFontWeightThin = 100
    public static let expFontFontsMonospace = Courier New, monospace
    public static let expFontFontsSans = Open Sans, sans-serif
    public static let expFontFontsSerif = Times New Roman, serif
    public static let expFontLetterSpacingNormal = 0px /** Normal letter spacing */
    public static let expFontLetterSpacingTight = -0.5px /** Tight letter spacing */
    public static let expFontLetterSpacingWide = 0.5px /** Wide letter spacing */
    public static let expFontLineHeightLoose = 1.8 /** Looser line height for readability */
    public static let expFontLineHeightNormal = 1.5 /** Standard line height */
    public static let expFontLineHeightTight = 1.2 /** Tight line height for compact text */
    public static let expFontTextTransformCapitalize = capitalize
    public static let expFontTextTransformLowercase = lowercase
    public static let expFontTextTransformNone = none
    public static let expFontTextTransformUppercase = uppercase
    public static let expFontTypographyBodyFontFamily = Times New Roman, serif
    public static let expFontTypographyBodyFontSize = 1rem
    public static let expFontTypographyBodyFontWeight = 400
    public static let expFontTypographyBodyLetterSpacing = 0px
    public static let expFontTypographyBodyLineHeight = 1.5
    public static let expFontTypographyBodyTextTransform = none
    public static let expFontTypographyButtonFontFamily = Open Sans, sans-serif
    public static let expFontTypographyButtonFontSize = .875rem
    public static let expFontTypographyButtonFontWeight = 700
    public static let expFontTypographyButtonLetterSpacing = 0.5px
    public static let expFontTypographyButtonLineHeight = 1.2
    public static let expFontTypographyButtonTextTransform = uppercase
    public static let expFontTypographyCaptionFontFamily = Times New Roman, serif
    public static let expFontTypographyCaptionFontSize = .875rem
    public static let expFontTypographyCaptionFontWeight = 300
    public static let expFontTypographyCaptionLetterSpacing = 0.5px
    public static let expFontTypographyCaptionLineHeight = 1.8
    public static let expFontTypographyCaptionTextTransform = none
    public static let expFontTypographyHeadingFontFamily = Open Sans, sans-serif
    public static let expFontTypographyHeadingFontSize = 1.25rem
    public static let expFontTypographyHeadingFontWeight = 700
    public static let expFontTypographyHeadingLetterSpacing = 0px
    public static let expFontTypographyHeadingLineHeight = 1.2
    public static let expFontTypographyHeadingTextTransform = capitalize
    public static let expFontTypographySubheadingFontFamily = Open Sans, sans-serif
    public static let expFontTypographySubheadingFontSize = 1rem
    public static let expFontTypographySubheadingFontWeight = 600
    public static let expFontTypographySubheadingLetterSpacing = -0.5px
    public static let expFontTypographySubheadingLineHeight = 1.5
    public static let expFontTypographySubheadingTextTransform = none
    public static let expGroupButtonGroupsOrientation = horizontal
    public static let expGroupButtonGroupsSpacing = 8px
    public static let expGroupButtonGroupsStackedOnMobile = true
    public static let expGroupContextMenuAnimation = fade
    public static let expGroupContextMenuCloseOnClickOutside = true
    public static let expGroupContextMenuOpenOnRightClick = true
    public static let expGroupDropdownMaxHeight = CGFloat(3200.00)
    public static let expGroupDropdownMultiSelect = false
    public static let expGroupDropdownOpenOnHover = false
    public static let expGroupFloatingActionButtonExpandable = false
    public static let expGroupFloatingActionButtonPosition = bottom-right
    public static let expGroupFloatingActionButtonShowShadow = true
    public static let expGroupFormsDefault = true
    public static let expGroupFormsDisabled = false
    public static let expGroupFormsHasError = false
    public static let expGroupLoginForgotPasswordLinkVisible = true
    public static let expGroupLoginRememberMeEnabled = true
    public static let expGroupLoginShowPasswordToggle = true
    public static let expGroupModalsAnimation = slide
    public static let expGroupModalsCentered = true
    public static let expGroupModalsCloseOnOverlayClick = true
    public static let expGroupSearchBordered = true
    public static let expGroupSearchIconVisible = true
    public static let expGroupSearchPlaceholder = Search...
    public static let expGroupSlidersMaxValue = 100
    public static let expGroupSlidersMinValue = 0
    public static let expGroupSlidersShowLabels = true
    public static let expGroupSlidersShowTicks = true
    public static let expGroupSlidersStep = 1
    public static let expGroupTooltipsDelay = 300
    public static let expGroupTooltipsInteractive = true
    public static let expGroupTooltipsPosition = top
    public static let expMediaQueriesDesktopExtraLarge = CGFloat(40960.00) /** Extra-large desktops (e.g., QHD screens) */
    public static let expMediaQueriesDesktopLarge = CGFloat(30720.00) /** Large desktops (e.g., Full HD screens) */
    public static let expMediaQueriesDesktopMedium = CGFloat(23040.00) /** Standard desktops (e.g., MacBook Pro 15-inch) */
    public static let expMediaQueriesDesktopSmall = CGFloat(20480.00) /** Small desktops or large tablets in landscape mode */
    public static let expMediaQueriesMobileExtraLargeLandscape = CGFloat(12992.00) /** Extra-large mobile devices in landscape (e.g., larger Android phones) */
    public static let expMediaQueriesMobileExtraLargePortrait = CGFloat(7680.00) /** Extra-large mobile devices in portrait (e.g., larger Android phones) */
    public static let expMediaQueriesMobileLargeLandscape = CGFloat(12288.00) /** Large mobile devices in landscape (e.g., Pixel 5) */
    public static let expMediaQueriesMobileLargePortrait = CGFloat(6800.00) /** Large mobile devices in portrait (e.g., Pixel 5) */
    public static let expMediaQueriesMobileMediumLandscape = CGFloat(10672.00) /** Medium mobile devices in landscape (e.g., iPhone 11) */
    public static let expMediaQueriesMobileMediumPortrait = CGFloat(6000.00) /** Medium mobile devices in portrait (e.g., iPhone 11) */
    public static let expMediaQueriesMobileSmallLandscape = CGFloat(7680.00) /** Small mobile devices in landscape (e.g., iPhone SE) */
    public static let expMediaQueriesMobileSmallPortrait = CGFloat(5120.00) /** Small mobile devices in portrait (e.g., iPhone SE) */
    public static let expMediaQueriesTabletLarge = CGFloat(16384.00) /** Large tablets (e.g., iPad Pro) */
    public static let expMediaQueriesTabletMedium = CGFloat(12288.00) /** Medium tablets (e.g., iPad Mini) */
    public static let expMediaQueriesTabletSmall = CGFloat(9600.00) /** Small tablets (e.g., 7-inch devices) */
    public static let expMediaQueriesTelevision4k = CGFloat(61440.00) /** 4K UHD resolution for TVs */
    public static let expMediaQueriesTelevision8k = CGFloat(122880.00) /** 8K UHD resolution for TVs */
    public static let expMediaQueriesTelevisionFullHd = CGFloat(30720.00) /** Full HD resolution for TVs */
    public static let expMediaQueriesTelevisionHd = CGFloat(20480.00) /** HD resolution for TVs */
    public static let expModeOnDarkBackgroundPrimary = UIColor(red: 0.122, green: 0.161, blue: 0.216, alpha: 1)
    public static let expModeOnDarkBackgroundSecondary = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    public static let expModeOnDarkBackgroundTertiary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    public static let expModeOnDarkBorderDefault = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    public static let expModeOnDarkBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnDarkTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnDarkTextPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expModeOnDarkTextSecondary = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    public static let expModeOnLightBackgroundPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expModeOnLightBackgroundSecondary = UIColor(red: 0.976, green: 0.980, blue: 0.984, alpha: 1)
    public static let expModeOnLightBackgroundTertiary = UIColor(red: 0.898, green: 0.906, blue: 0.922, alpha: 1)
    public static let expModeOnLightBorderDefault = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    public static let expModeOnLightBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnLightTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnLightTextPrimary = UIColor(red: 0.067, green: 0.094, blue: 0.153, alpha: 1)
    public static let expModeOnLightTextSecondary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    public static let expScaleBoundedLightnessScale10 = UIColor(red: 0.090, green: 0.098, blue: 0.110, alpha: 1)
    public static let expScaleBoundedLightnessScale50 = UIColor(red: 0.451, green: 0.498, blue: 0.549, alpha: 1)
    public static let expScaleBoundedLightnessScale90 = UIColor(red: 0.890, green: 0.902, blue: 0.910, alpha: 1)
    public static let expScaleEnumeratedLevels100 = 100
    public static let expScaleEnumeratedLevels200 = 200
    public static let expScaleEnumeratedLevels300 = 300
    public static let expScaleEnumeratedLevels400 = 400
    public static let expScaleEnumeratedLevels50 = 50
    public static let expScaleEnumeratedLevels500 = 500
    public static let expScaleEnumeratedLevels600 = 600
    public static let expScaleEnumeratedLevels700 = 700
    public static let expScaleEnumeratedLevels800 = 800
    public static let expScaleEnumeratedLevels900 = 900
    public static let expScaleOrderedValuesExtraLarge = CGFloat(32.00)
    public static let expScaleOrderedValuesJumbo = CGFloat(48.00)
    public static let expScaleOrderedValuesLarge = CGFloat(24.00)
    public static let expScaleOrderedValuesMedium = CGFloat(16.00)
    public static let expScaleOrderedValuesSmall = CGFloat(12.00)
    public static let expScaleProportionalBase1x = CGFloat(16.00)
    public static let expScaleProportionalBase2x = CGFloat(32.00)
    public static let expScaleProportionalBase4x = CGFloat(64.00)
    public static let expScaleProportionalBaseHalf = CGFloat(8.00)
    public static let expScaleProportionalBaseQuarter = CGFloat(4.00)
    public static let expScaleTshirtSizesLg = CGFloat(32.00)
    public static let expScaleTshirtSizesMd = CGFloat(24.00)
    public static let expScaleTshirtSizesSm = CGFloat(16.00)
    public static let expScaleTshirtSizesXl = CGFloat(48.00)
    public static let expScaleTshirtSizesXs = CGFloat(12.00)
    public static let expScaleTshirtSizesXxl = CGFloat(64.00)
    public static let expScaleTshirtSizesXxs = CGFloat(8.00)
    public static let expShadowBoxShadowDropShadow = [object Object]
    public static let expShadowExtraLarge = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1) /** Extra large shadow for dialogs or focused states */
    public static let expShadowFloating = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15) /** High shadow for floating elements or fixed buttons */
    public static let expShadowFloatingLarge = 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40) /** High shadow for floating elements or fixed buttons */
    public static let expShadowInner = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    public static let expShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08) /** Large shadow for modals or overlays */
    public static let expShadowMedium = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08) /** Medium shadow for elements like cards */
    public static let expShadowNone = none /** No shadow */
    public static let expShadowOverlay = rgba(0, 0, 0, 0.5)
    public static let expShadowSmall = 0px 1px 2px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.08) /** Small shadow for light elements like buttons */
    public static let expShadowSmallFloat = 0px 2px 4px rgba(0, 0, 0, 0.2) /** Small floating shadow for light elements like floating action buttons */
    public static let expSizesAvatarLarge = CGFloat(1152.00)
    public static let expSizesAvatarMedium = CGFloat(768.00)
    public static let expSizesAvatarSmall = CGFloat(384.00)
    public static let expSizesAvatarXLarge = CGFloat(1536.00)
    public static let expSizesContainerFullWidth = CGFloat(1600.00)
    public static let expSizesContainerLarge = CGFloat(19200.00)
    public static let expSizesContainerMedium = CGFloat(12800.00)
    public static let expSizesContainerSmall = CGFloat(6400.00)
    public static let expSizesIconLarge = CGFloat(512.00)
    public static let expSizesIconMedium = CGFloat(384.00)
    public static let expSizesIconSmall = CGFloat(256.00)
    public static let expSizesIconXLarge = CGFloat(640.00)
    public static let expSizesRadiusCircle = 50%
    public static let expSizesRadiusLarge = 16px
    public static let expSizesRadiusMedium = 8px
    public static let expSizesRadiusNone = 0px
    public static let expSizesRadiusPill = 9999px
    public static let expSizesRadiusSmall = 4px
    public static let expSpace12x = 3rem
    public static let expSpace14x = 3.5rem
    public static let expSpace16x = 4rem
    public static let expSpace1x = .25rem
    public static let expSpace24x = 6rem
    public static let expSpace2x = .5rem
    public static let expSpace32x = 8rem
    public static let expSpace3x = .75rem
    public static let expSpace48x = 12rem
    public static let expSpace4x = 1rem
    public static let expSpace5x = 1.25rem
    public static let expSpace64x = 16rem
    public static let expSpace6x = 1.5rem
    public static let expSpace7x = 1.75rem
    public static let expSpace8x = 2rem
    public static let expSpaceHalfX = .125rem
    public static let expSpaceInline16x = 4rem
    public static let expSpaceInline1x = .25rem
    public static let expSpaceInline2x = .5rem
    public static let expSpaceInline3x = .75rem
    public static let expSpaceInline4x = 1rem
    public static let expSpaceInline6x = 1.5rem
    public static let expSpaceInline8x = 2rem
    public static let expSpaceInlineHalfX = .125rem
    public static let expSpaceInlineNone = 0px
    public static let expSpaceInset12x = 3rem
    public static let expSpaceInset16x = 4rem
    public static let expSpaceInset1x = .25rem
    public static let expSpaceInset2x = .5rem
    public static let expSpaceInset3x = .75rem
    public static let expSpaceInset4x = 1rem
    public static let expSpaceInset6x = 1.5rem
    public static let expSpaceInset8x = 2rem
    public static let expSpaceInsetHalfX = .125rem
    public static let expSpaceInsetNone = 0px
    public static let expSpaceInsetSquish1x = .25rem .5rem
    public static let expSpaceInsetSquish2x = .5rem 1rem
    public static let expSpaceInsetSquish3x = .75rem 1.25rem
    public static let expSpaceInsetSquish4x = 1rem 2rem
    public static let expSpaceInsetSquish6x = 1.5rem 3rem
    public static let expSpaceInsetSquishHalfX = .125rem .25rem
    public static let expSpaceInsetSquishNone = 0px
    public static let expSpaceInsetStretch1x = .5rem .25rem
    public static let expSpaceInsetStretch2x = .75rem .5rem
    public static let expSpaceInsetStretch3x = 1.5rem .75rem
    public static let expSpaceInsetStretch4x = 2rem 1rem
    public static let expSpaceInsetStretch6x = 3rem 1.5rem
    public static let expSpaceInsetStretchHalfX = .25rem .125rem
    public static let expSpaceInsetStretchNone = 0px
    public static let expSpaceNone = 0px
    public static let expSpaceStack12x = 3rem
    public static let expSpaceStack16x = 4rem
    public static let expSpaceStack1x = .25rem
    public static let expSpaceStack24x = 6rem
    public static let expSpaceStack2x = .5rem
    public static let expSpaceStack32x = 8rem
    public static let expSpaceStack3x = .75rem
    public static let expSpaceStack4x = 1rem
    public static let expSpaceStack5x = 1.25rem
    public static let expSpaceStack6x = 1.5rem
    public static let expSpaceStack8x = 2rem
    public static let expSpaceStackHalfX = .125rem
    public static let expSpaceStackNone = 0px
    public static let expStateActiveBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateActiveBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStateActiveText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateDefaultBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expStateDefaultBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateDefaultText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    public static let expStateDisabledBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateDisabledBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStateDisabledText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.4)
    public static let expStateErrorBackground = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateErrorBorder = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.8)
    public static let expStateErrorText = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateFocusBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.02)
    public static let expStateFocusOutline = 2px solid rgba(0, 123, 255, 0.8)
    public static let expStateFocusText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    public static let expStateHoverBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.05)
    public static let expStateHoverBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateHoverText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.8)
    public static let expStatePressBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStatePressBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.3)
    public static let expStatePressText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateSuccessBackground = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 0.1)
    public static let expStateSuccessBorder = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 0.8)
    public static let expStateSuccessText = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let expThreeCameraFovDefault = 75 /** Default field of view for perspective camera */
    public static let expThreeCameraFovNarrow = 50 /** Narrow field of view for close-ups */
    public static let expThreeCameraFovWide = 90 /** Wider field of view for immersive scenes */
    public static let expThreeCameraPositionCloseUp = 0,1,2 /** Closer position for focused shots */
    public static let expThreeCameraPositionDefault = 0,1,5 /** Standard camera position */
    public static let expThreeCameraPositionHighAngle = 0,5,5 /** Higher angle for overhead views */
    public static let expThreeLightColorCool = #C1EFFF /** Cool light color for modern or sci-fi themes */
    public static let expThreeLightColorNeutral = #FFFFFF /** Neutral white light for general purpose */
    public static let expThreeLightColorWarm = #FFDDC1 /** Warm light color for cozy environments */
    public static let expThreeLightIntensityHigh = 2 /** High intensity for spotlight effects */
    public static let expThreeLightIntensityLow = 0.5 /** Low-intensity light for ambient scenes */
    public static let expThreeLightIntensityMedium = 1 /** Standard intensity for balanced lighting */
    public static let expThreeMaterialMetalnessFull = 1 /** Fully metallic surfaces */
    public static let expThreeMaterialMetalnessNone = 0 /** Non-metallic surfaces */
    public static let expThreeMaterialMetalnessSemi = 0.5 /** Semi-metallic surfaces */
    public static let expThreeMaterialRoughnessRough = 1 /** Fully rough surfaces with matte finish */
    public static let expThreeMaterialRoughnessSemiRough = 0.5 /** Moderately rough surfaces */
    public static let expThreeMaterialRoughnessSmooth = 0.1 /** Very smooth surfaces with a glossy finish */
    public static let expThreeTransformRotationX = 0.01 /** Slight rotation on the X-axis for dynamic positioning */
    public static let expThreeTransformRotationY = 0.01 /** Slight rotation on the Y-axis for orbit animations */
    public static let expThreeTransformScaleDefault = 1 /** Default scale */
    public static let expThreeTransformScaleLarge = 2 /** Larger scale for emphasis or focused views */
    public static let expThreeTransformScaleSmall = 0.5 /** Small scale for thumbnails or previews */
    public static let expTouchGestureLongPressDuration = 500ms
    public static let expTouchGestureSwipeThreshold = CGFloat(800.00)
    public static let expTouchGestureTapDuration = 200ms
    public static let expTouchSpacingLarge = CGFloat(384.00)
    public static let expTouchSpacingMedium = CGFloat(256.00)
    public static let expTouchSpacingSmall = CGFloat(128.00)
    public static let expTouchTargetLarge = CGFloat(768.00)
    public static let expTouchTargetMedium = CGFloat(640.00)
    public static let expTouchTargetSmall = CGFloat(512.00)
    public static let expUnitsBorderRadiusLg = 16px
    public static let expUnitsBorderRadiusMd = 8px
    public static let expUnitsBorderRadiusPill = 9999px
    public static let expUnitsBorderRadiusSm = 4px
    public static let expUnitsBorderWidthMedium = 1px
    public static let expUnitsBorderWidthThick = 1.25px
    public static let expUnitsBorderWidthThin = .75px
    public static let expUnitsLineHeightDense = 1.2
    public static let expUnitsLineHeightLg = 1.75
    public static let expUnitsLineHeightLoose = 1.8
    public static let expUnitsLineHeightMd = 1.5
    public static let expUnitsLineHeightSm = 1.25
    public static let expUnitsLineHeightXl = 2
    public static let expUnitsLineHeightXs = 1
    public static let expUnitsOpacityFull = 1
    public static let expUnitsOpacityHigh = 0.9
    public static let expUnitsOpacityLow = 0.3
    public static let expUnitsOpacityMedium = 0.6
    public static let expUnitsOpacityNone = 0
    public static let expVariantErrorAlert = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Used for alert messages related to errors */
    public static let expVariantErrorCritical = UIColor(red: 0.776, green: 0.157, blue: 0.157, alpha: 1) /** Used for critical errors or states */
    public static let expVariantErrorDanger = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Used to indicate dangerous actions */
    public static let expVariantErrorError = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** General error indicator */
    public static let expVariantErrorPrimary = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Primary color for error and danger indicators */
    public static let expVariantErrorSecondary = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Secondary color for alerting errors */
    public static let expVariantErrorTertiary = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** Tertiary color for subtle error indicators */
    public static let expVariantInformationInfo = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Used for informational messages */
    public static let expVariantInformationInformation = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** General information indicator */
    public static let expVariantInformationPrimary = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Primary color for informational messages */
    public static let expVariantInformationSecondary = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** Secondary color for additional informational elements */
    public static let expVariantInformationTertiary = UIColor(red: 0.733, green: 0.871, blue: 0.984, alpha: 1) /** Tertiary color for subtle informational cues */
    public static let expVariantNeutralDefault = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Standard neutral color for non-critical messages */
    public static let expVariantNeutralPrimary = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Primary neutral color for base states */
    public static let expVariantNeutralSecondary = UIColor(red: 0.741, green: 0.741, blue: 0.741, alpha: 1) /** Secondary neutral color for subdued elements */
    public static let expVariantNeutralTertiary = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1) /** Tertiary neutral color for background elements */
    public static let expVariantNewAnnouncement = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Used for announcements or newly added features */
    public static let expVariantNewHighlight = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Highlight to draw attention to new items */
    public static let expVariantNewNewFeature = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Indicator for new features or items */
    public static let expVariantNewPrimary = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Primary color for new or highlighted features */
    public static let expVariantNewSecondary = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Secondary color for supporting new features */
    public static let expVariantNewTertiary = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Tertiary color for subtle new indicators */
    public static let expVariantSuccessConfirmation = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Used for successful confirmation actions */
    public static let expVariantSuccessPositive = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Used to indicate positive status */
    public static let expVariantSuccessPrimary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Primary color for success actions and statuses */
    public static let expVariantSuccessSecondary = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Secondary color for success-related components */
    public static let expVariantSuccessSuccess = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** General success indicator */
    public static let expVariantSuccessTertiary = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** Tertiary color for subtle success elements */
    public static let expVariantWarningAttention = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Used for actions that require user attention */
    public static let expVariantWarningCaution = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Used to indicate cautionary actions */
    public static let expVariantWarningDefault = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** General warning indicator */
    public static let expVariantWarningPrimary = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** Primary warning color for critical attention */
    public static let expVariantWarningSecondary = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Secondary warning color for less critical states */
    public static let expVariantWarningTertiary = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Tertiary warning color for subtle caution cues */
    public static let testColorPrimary = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
}