
//
// StyleDictionary+Class.swift
//

// Do not edit directly, this file was auto-generated.


import UIKit

public class StyleDictionaryClass {
    public static let expAnimationDelayMedium = 0.5s /** Standard delay for animations */
    public static let expAnimationDelayNone = 0s /** No delay */
    public static let expAnimationDelayShort = 0.2s /** Quick delay before animation */
    public static let expAnimationDurationLong = 1.2s /** Extended animations */
    public static let expAnimationDurationMedium = 0.6s /** Standard animation duration */
    public static let expAnimationDurationShort = 0.3s /** Quick animations */
    public static let expAnimationEasingBackOut = back.out(1.7) /** Back out easing with overshoot effect */
    public static let expAnimationEasingElasticOut = elastic.out(1, 0.3) /** Elastic bounce for expressive animations */
    public static let expAnimationEasingPower1Out = power1.out /** Ease out with slight acceleration */
    public static let expAnimationEasingPower2InOut = power2.inOut /** Balanced ease in-out for smooth transitions */
    public static let expAnimationOpacityFadeIn = 1 /** Fully visible */
    public static let expAnimationOpacityFadeOut = 0 /** Fully hidden */
    public static let expAnimationTransformRotateLarge = rotate(45deg) /** Strong rotation for significant animation effects */
    public static let expAnimationTransformRotateSmall = rotate(15deg) /** Subtle rotation for attention-grabbing animations */
    public static let expAnimationTransformScaleLarge = scale(1.05) /** Slightly enlarged for focus or highlight effects */
    public static let expAnimationTransformScaleSmall = scale(0.95) /** Slight reduction for hover or active states */
    public static let expAnimationTransformTranslateDown = translateY(10px) /** Downward translation for exit animations */
    public static let expAnimationTransformTranslateUp = translateY(-10px) /** Upward translation for entry animations */
    public static let expColorBlack100 = hsl(0, 0%, 10%) /** Black very very light */
    public static let expColorBlack200 = hsl(0, 0%, 8%) /** Black very light */
    public static let expColorBlack300 = hsl(0, 0%, 6%) /** Black light */
    public static let expColorBlack400 = hsl(0, 0%, 4%) /** Black lighter */
    public static let expColorBlack50 = hsl(0, 0%, 20%) /** Black lightest */
    public static let expColorBlack500 = hsl(0, 0%, 2%) /** Black base */
    public static let expColorBlack600 = hsl(0, 0%, 1%) /** Black dark */
    public static let expColorBlack700 = hsl(0, 0%, 0.5%) /** Black darker */
    public static let expColorBlack800 = hsl(0, 0%, 0.3%) /** Black very dark */
    public static let expColorBlack900 = hsl(0, 0%, 0%) /** Black darkest */
    public static let expColorBlue100 = hsl(220, 90%, 95%)
    public static let expColorBlue200 = hsl(220, 80%, 85%)
    public static let expColorBlue300 = hsl(220, 70%, 75%)
    public static let expColorBlue400 = hsl(220, 60%, 65%)
    public static let expColorBlue500 = hsl(220, 50%, 55%)
    public static let expColorBlue600 = hsl(220, 40%, 45%)
    public static let expColorBlue700 = hsl(220, 30%, 35%)
    public static let expColorBlue800 = hsl(220, 20%, 25%)
    public static let expColorBlue900 = hsl(220, 10%, 15%)
    public static let expColorGray100 = hsl(0, 0%, 95%) /** Gray lightest */
    public static let expColorGray200 = hsl(0, 0%, 85%) /** Gray very light */
    public static let expColorGray300 = hsl(0, 0%, 75%) /** Gray light */
    public static let expColorGray400 = hsl(0, 0%, 65%) /** Gray lighter */
    public static let expColorGray500 = hsl(0, 0%, 55%) /** Gray base */
    public static let expColorGray600 = hsl(0, 0%, 45%) /** Gray dark */
    public static let expColorGray650 = hsl(0, 0%, 40%) /** Gray dark */
    public static let expColorGray700 = hsl(0, 0%, 35%) /** Gray darker */
    public static let expColorGray800 = hsl(0, 0%, 25%) /** Gray very dark */
    public static let expColorGray900 = hsl(0, 0%, 15%) /** Gray darkest */
    public static let expColorGreen100 = hsl(120, 90%, 95%)
    public static let expColorGreen200 = hsl(120, 80%, 85%)
    public static let expColorGreen300 = hsl(120, 70%, 75%)
    public static let expColorGreen400 = hsl(120, 60%, 65%)
    public static let expColorGreen500 = hsl(120, 50%, 55%)
    public static let expColorGreen600 = hsl(120, 40%, 45%)
    public static let expColorGreen700 = hsl(120, 30%, 35%)
    public static let expColorGreen800 = hsl(120, 20%, 25%)
    public static let expColorGreen900 = hsl(120, 10%, 15%)
    public static let expColorNeutral100 = hsl(0, 0%, 95%) /** Neutral lightest */
    public static let expColorNeutral200 = hsl(0, 0%, 85%) /** Neutral very light */
    public static let expColorNeutral300 = hsl(0, 0%, 75%) /** Neutral light */
    public static let expColorNeutral400 = hsl(0, 0%, 65%) /** Neutral lighter */
    public static let expColorNeutral500 = hsl(0, 0%, 55%) /** Neutral base */
    public static let expColorNeutral600 = hsl(0, 0%, 45%) /** Neutral dark */
    public static let expColorNeutral700 = hsl(0, 0%, 35%) /** Neutral darker */
    public static let expColorNeutral800 = hsl(0, 0%, 25%) /** Neutral very dark */
    public static let expColorNeutral900 = hsl(0, 0%, 15%) /** Neutral darkest */
    public static let expColorOrange100 = hsl(30, 90%, 95%)
    public static let expColorOrange200 = hsl(30, 80%, 85%)
    public static let expColorOrange300 = hsl(30, 70%, 75%)
    public static let expColorOrange400 = hsl(30, 60%, 65%)
    public static let expColorOrange500 = hsl(30, 50%, 55%)
    public static let expColorOrange600 = hsl(30, 40%, 45%)
    public static let expColorOrange700 = hsl(30, 30%, 35%)
    public static let expColorOrange800 = hsl(30, 20%, 25%)
    public static let expColorOrange900 = hsl(30, 10%, 15%)
    public static let expColorPrimary100 = hsl(270, 75%, 95%) /** Primary lightest */
    public static let expColorPrimary200 = hsl(270, 70%, 85%) /** Primary very light */
    public static let expColorPrimary300 = hsl(270, 65%, 75%) /** Primary light */
    public static let expColorPrimary400 = hsl(270, 60%, 65%) /** Primary lighter */
    public static let expColorPrimary500 = hsl(270, 55%, 55%) /** Primary base */
    public static let expColorPrimary600 = hsl(270, 50%, 45%) /** Primary dark */
    public static let expColorPrimary700 = hsl(270, 80%, 50%) /** Primary darker (matches #7B22E0) */
    public static let expColorPrimary800 = hsl(270, 40%, 25%) /** Primary very dark */
    public static let expColorPrimary900 = hsl(270, 30%, 15%) /** Primary darkest */
    public static let expColorPurple100 = hsl(280, 90%, 95%)
    public static let expColorPurple200 = hsl(280, 80%, 85%)
    public static let expColorPurple300 = hsl(280, 70%, 75%)
    public static let expColorPurple400 = hsl(280, 60%, 65%)
    public static let expColorPurple500 = hsl(280, 50%, 55%)
    public static let expColorPurple600 = hsl(280, 40%, 45%)
    public static let expColorPurple700 = hsl(280, 30%, 35%)
    public static let expColorPurple800 = hsl(280, 20%, 25%)
    public static let expColorPurple900 = hsl(280, 10%, 15%)
    public static let expColorRed100 = hsl(0, 85%, 90%) /** Lightest red */
    public static let expColorRed200 = hsl(0, 80%, 80%) /** Very light red */
    public static let expColorRed300 = hsl(0, 75%, 70%) /** Light red */
    public static let expColorRed400 = hsl(0, 70%, 60%) /** Lighter red */
    public static let expColorRed500 = hsl(0, 95%, 50%) /** Base red (#F01D13) */
    public static let expColorRed600 = hsl(0, 80%, 40%) /** Dark red */
    public static let expColorRed700 = hsl(0, 70%, 30%) /** Darker red */
    public static let expColorRed800 = hsl(0, 60%, 25%) /** Very dark red */
    public static let expColorRed900 = hsl(0, 50%, 20%) /** Darkest red */
    public static let expColorSecondary100 = hsl(220, 100%, 95%) /** Secondary lightest */
    public static let expColorSecondary200 = hsl(220, 100%, 85%) /** Secondary very light */
    public static let expColorSecondary300 = hsl(220, 100%, 75%) /** Secondary light */
    public static let expColorSecondary400 = hsl(220, 100%, 63%) /** Secondary lighter */
    public static let expColorSecondary500 = hsl(220, 100%, 53%) /** Secondary base */
    public static let expColorSecondary600 = hsl(220, 100%, 43%) /** Secondary dark */
    public static let expColorSecondary700 = hsl(220, 100%, 33%) /** Secondary darker */
    public static let expColorSecondary800 = hsl(220, 100%, 23%) /** Secondary very dark */
    public static let expColorSecondary900 = hsl(220, 100%, 13%) /** Secondary darkest */
    public static let expColorStatusCaution = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expColorStatusInfo = UIColor(red: 0.137, green: 0.576, blue: 0.686, alpha: 1)
    public static let expColorStatusSuccess = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expColorStatusWarn = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expColorTerciary100 = hsl(195, 85%, 90%)
    public static let expColorTerciary200 = hsl(195, 85%, 80%)
    public static let expColorTerciary300 = hsl(195, 85%, 70%)
    public static let expColorTerciary400 = hsl(195, 85%, 60%)
    public static let expColorTerciary500 = hsl(195, 85%, 50%)
    public static let expColorTerciary600 = hsl(195, 85%, 40%)
    public static let expColorTerciary700 = hsl(195, 85%, 30%)
    public static let expColorTerciary800 = hsl(195, 85%, 20%)
    public static let expColorTerciary900 = hsl(195, 85%, 10%)
    public static let expColorTransparent = hsl(0, 0%, 0%, 0)
    public static let expColorWhite100 = hsl(0, 0%, 100%) /** White pure */
    public static let expColorWhite200 = hsl(0, 0%, 98%) /** White very light */
    public static let expColorWhite300 = hsl(40, 20%, 98%) /** White warm light */
    public static let expColorWhite400 = hsl(240, 20%, 98%) /** White cool light */
    public static let expColorWhite500 = hsl(0, 0%, 95%) /** White base light */
    public static let expColorWhite600 = hsl(0, 0%, 92%) /** White soft disabled */
    public static let expColorWhite650 = hsl(0, 0%, 87%) /** White soft disabled */
    public static let expColorWhite700 = rgba(255, 255, 255, 0.8) /** White light overlay */
    public static let expColorWhite800 = rgba(255, 255, 255, 0.5) /** White medium overlay */
    public static let expColorWhite900 = rgba(255, 255, 255, 0.2) /** White faint overlay */
    public static let expColorYellow100 = hsl(60, 90%, 95%)
    public static let expColorYellow200 = hsl(60, 80%, 85%)
    public static let expColorYellow300 = hsl(60, 70%, 75%)
    public static let expColorYellow400 = hsl(60, 60%, 65%)
    public static let expColorYellow500 = hsl(60, 50%, 55%)
    public static let expColorYellow600 = hsl(60, 40%, 45%)
    public static let expColorYellow700 = hsl(60, 30%, 35%)
    public static let expColorYellow800 = hsl(60, 20%, 25%)
    public static let expColorYellow900 = hsl(60, 10%, 15%)
    public static let expComponentsAccordionBackgroundColorAccordionslideButton = hsl(0, 0%, 95%)
    public static let expComponentsAccordionBackgroundColorAccordionslideHover = rgba(255, 255, 255, 0.5)
    public static let expComponentsAccordionBackgroundColorButton = none
    public static let expComponentsAccordionBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsAccordionBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsAccordionBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsAccordionBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsAccordionBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expComponentsAccordionBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expComponentsAccordionBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expComponentsAccordionBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    public static let expComponentsAccordionBorderButtomBottom = 2px solid transparent
    public static let expComponentsAccordionBorderButton = none
    public static let expComponentsAccordionBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    public static let expComponentsAccordionBorderColorBarBottom = hsl(0, 0%, 85%)
    public static let expComponentsAccordionBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsAccordionBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsAccordionBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsAccordionBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsAccordionBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsAccordionBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsAccordionBorderPanel = 1px solid hsl(0, 0%, 85%)
    public static let expComponentsAccordionBorderPanelTop = none
    public static let expComponentsAccordionBorderRadiusAccordionslide = 4px
    public static let expComponentsAccordionBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsAccordionBorderWidth = 1px
    public static let expComponentsAccordionFontSizeAccordionslideIcon = 1rem
    public static let expComponentsAccordionFontSizeButton = 1rem
    public static let expComponentsAccordionFontSizeLarge = 1.25rem
    public static let expComponentsAccordionFontSizeMedium = 1rem
    public static let expComponentsAccordionFontSizeSmall = .875rem
    public static let expComponentsAccordionFontSizeXl = 1.5rem
    public static let expComponentsAccordionFontWeightBold = 700
    public static let expComponentsAccordionFontWeightExtraBold = 800
    public static let expComponentsAccordionFontWeightLight = 300
    public static let expComponentsAccordionFontWeightMedium = 500
    public static let expComponentsAccordionFontWeightRegular = 400
    public static let expComponentsAccordionFontWeightSemiBold = 600
    public static let expComponentsAccordionFontWeightThin = 100
    public static let expComponentsAccordionGapBar = .5rem
    public static let expComponentsAccordionHeightAccordionslideIcon = 2em
    public static let expComponentsAccordionHeightAccordionslideMinheightIcon = 2em
    public static let expComponentsAccordionHeightMedium = 3.5rem
    public static let expComponentsAccordionLineHeight = 1
    public static let expComponentsAccordionLocationBottom = 1.5rem
    public static let expComponentsAccordionLocationLeft = 1.5rem
    public static let expComponentsAccordionLocationRight = 1.5rem
    public static let expComponentsAccordionMarginAccordionContentLeft = 1.25rem
    public static let expComponentsAccordionMarginAccordionslideButton = .5em 1em
    public static let expComponentsAccordionMarginLarge = 1rem 1.5rem
    public static let expComponentsAccordionMarginMedium = .75rem 1.25rem
    public static let expComponentsAccordionMarginSmall = .5rem 1rem
    public static let expComponentsAccordionNdsIconIconHeight = 2100
    public static let expComponentsAccordionNdsIconIconWidth = 2100
    public static let expComponentsAccordionNdsIconIconXaxis = 100
    public static let expComponentsAccordionNdsIconIconYaxis = 100
    public static let expComponentsAccordionPaddingButton = .5em 1em
    public static let expComponentsAccordionPaddingLarge = 1rem 1.5rem
    public static let expComponentsAccordionPaddingMedium = .75rem 1.25rem
    public static let expComponentsAccordionPaddingSmall = .5rem 1rem
    public static let expComponentsAccordionShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expComponentsAccordionShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expComponentsAccordionShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expComponentsAccordionTextColorAccordionslideIcon = hsl(220, 30%, 35%)
    public static let expComponentsAccordionTextColorButton = hsl(0, 0%, 4%)
    public static let expComponentsAccordionTextColorButtonActive = hsl(220, 40%, 45%)
    public static let expComponentsAccordionTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsAccordionTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsAccordionTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsAccordionTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsAccordionTextColorLight = hsl(0, 0%, 95%)
    public static let expComponentsAccordionTextColorPrimary = hsl(0, 0%, 95%)
    public static let expComponentsAccordionTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsAccordionTransitionButton = color 0.3s, border-bottom-color 0.3s
    public static let expComponentsAccordionWidthAccordionslideIcon = 2em
    public static let expComponentsAccordionWidthAccordionslideMinwidthIcon = 2em
    public static let expComponentsAccordionWidthMedium = 3.5rem
    public static let expComponentsActionMenuIconRight = 0
    public static let expComponentsActionMenuIconTop = 50%
    public static let expComponentsActionMenuIconTransform = translateY(-50%)
    public static let expComponentsActionMenuResultItemBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsActionMenuResultItemBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expComponentsActionMenuResultItemPadding = .5rem
    public static let expComponentsActionMenuResultItemTextColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsActionMenuResultItemTextColorHover = hsl(0, 0%, 95%)
    public static let expComponentsActionMenuResultListBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsActionMenuResultListBorder = 1px solid hsl(0, 0%, 85%)
    public static let expComponentsActionMenuResultListBorderRadius = 4px
    public static let expComponentsActionMenuResultListFontSize = 1rem
    public static let expComponentsActionMenuResultListLeft = 0
    public static let expComponentsActionMenuResultListListStyle = none
    public static let expComponentsActionMenuResultListMargin = 0
    public static let expComponentsActionMenuResultListMaxHeight = fit-content
    public static let expComponentsActionMenuResultListPadding = 0
    public static let expComponentsActionMenuResultListShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expComponentsActionMenuResultListTextColor = hsl(0, 0%, 6%)
    public static let expComponentsActionMenuResultListTextColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsActionMenuResultListTextColorHover = hsl(0, 0%, 2%)
    public static let expComponentsActionMenuResultListTop = 100%
    public static let expComponentsActionMenuResultListWidth = 100%
    public static let expComponentsActionMenuResultListZIndex = 1000
    public static let expComponentsActionMenuSearchBoxBorder = 1px solid hsl(0, 0%, 65%)
    public static let expComponentsActionMenuSearchBoxBorderRadius = 4px
    public static let expComponentsActionMenuSearchBoxFontSize = 1.25rem
    public static let expComponentsActionMenuSearchBoxPadding = .5rem .5rem .5rem calc(2rem * .9375)
    public static let expComponentsActionMenuSearchBoxWidth = 12rem
    public static let expComponentsActionMenuSearchBoxWrapperWidth = 100%
    public static let expComponentsActionMenuWidth = 100%
    public static let expComponentsAlertBackgroundColorError = UIColor(red: 1.000, green: 0.922, blue: 0.933, alpha: 1)
    public static let expComponentsAlertBackgroundColorInfo = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expComponentsAlertBackgroundColorWarning = UIColor(red: 1.000, green: 0.953, blue: 0.878, alpha: 1)
    public static let expComponentsAlertBorderRadius = 4px
    public static let expComponentsAlertPadding = 16px
    public static let expComponentsAlertTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expComponentsAlertTextColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsAlertTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    public static let expComponentsButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsButtonBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expComponentsButtonBackgroundColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsButtonBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expComponentsButtonBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsButtonBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsButtonBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsButtonBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsButtonBorderRadiusDefault = 4px
    public static let expComponentsButtonBorderRadiusPill = 9999px
    public static let expComponentsButtonFontSizeLarge = 1.25rem
    public static let expComponentsButtonFontSizeMedium = 1rem
    public static let expComponentsButtonFontSizeSmall = .875rem
    public static let expComponentsButtonFontWeightBold = 700
    public static let expComponentsButtonFontWeightExtraBold = 800
    public static let expComponentsButtonFontWeightLight = 300
    public static let expComponentsButtonFontWeightMedium = 500
    public static let expComponentsButtonFontWeightRegular = 400
    public static let expComponentsButtonFontWeightSemiBold = 600
    public static let expComponentsButtonFontWeightThin = 100
    public static let expComponentsButtonGroupGap = .25rem
    public static let expComponentsButtonPaddingLarge = 1rem 1.5rem
    public static let expComponentsButtonPaddingMedium = .75rem 1.25rem
    public static let expComponentsButtonPaddingSmall = .5rem 1rem
    public static let expComponentsButtonTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsButtonTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsButtonTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsButtonTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsButtonTextColorPrimary = hsl(0, 0%, 95%)
    public static let expComponentsButtonTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsCardBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expComponentsCardBackgroundColorFooter = hsl(0, 0%, 98%)
    public static let expComponentsCardBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsCardBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expComponentsCardBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsCardBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expComponentsCardBorderRadius = 4px
    public static let expComponentsCardFontFamilyBody = Open Sans, sans-serif
    public static let expComponentsCardFontSizeContent = 1rem
    public static let expComponentsCardFontSizeLarge = 1.25rem
    public static let expComponentsCardFontSizeMedium = 1rem
    public static let expComponentsCardFontSizeSmall = .875rem
    public static let expComponentsCardFontSizeSubTitle = 1rem
    public static let expComponentsCardFontSizeTitle = 1.5rem
    public static let expComponentsCardFontWeightBold = 700
    public static let expComponentsCardFontWeightExtraBold = 800
    public static let expComponentsCardFontWeightLight = 300
    public static let expComponentsCardFontWeightMedium = 500
    public static let expComponentsCardFontWeightRegular = 400
    public static let expComponentsCardFontWeightSemiBold = 600
    public static let expComponentsCardFontWeightThin = 100
    public static let expComponentsCardPaddingCompact = .75em
    public static let expComponentsCardPaddingDefault = 1em
    public static let expComponentsCardShadowDefault = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1)
    public static let expComponentsCardShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expComponentsCardTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsCardTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsCardTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsCardTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsCardTextColorPrimary = hsl(0, 0%, 2%)
    public static let expComponentsCardTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsCardTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expComponentsCardWidthExtraLarge = 100%
    public static let expComponentsCardWidthLarge = 75%
    public static let expComponentsCardWidthMedium = 50%
    public static let expComponentsCardWidthSmall = 33%
    public static let expComponentsCardWidthXtraSmall = 20%
    public static let expComponentsCheckboxBackgroundColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsCheckboxBackgroundColorUnchecked = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsCheckboxBorderColorChecked = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsCheckboxBorderColorUnchecked = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsCheckboxContainerGap = .5rem
    public static let expComponentsCheckboxHeight = 1rem
    public static let expComponentsCheckboxLabelFontSize = 1rem
    public static let expComponentsCheckboxOpacityDisabled = 0.6
    public static let expComponentsCheckboxSize = CGFloat(256.00)
    public static let expComponentsCheckboxWidth = 1rem
    public static let expComponentsChipBackgroundColorDefault = hsl(30, 50%, 55%)
    public static let expComponentsChipBackgroundColorHover = hsl(30, 80%, 85%)
    public static let expComponentsChipBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsChipBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expComponentsChipBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsChipBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expComponentsChipBorderRadius = 16px
    public static let expComponentsChipFontFamilyBody = Open Sans, sans-serif
    public static let expComponentsChipFontSizeContent = 1rem
    public static let expComponentsChipFontSizeLarge = 1.25rem
    public static let expComponentsChipFontSizeMedium = 1rem
    public static let expComponentsChipFontSizeSmall = .875rem
    public static let expComponentsChipFontSizeSubTitle = 1rem
    public static let expComponentsChipFontSizeTitle = 1.25rem
    public static let expComponentsChipFontWeightBold = 700
    public static let expComponentsChipFontWeightExtraBold = 800
    public static let expComponentsChipFontWeightLight = 300
    public static let expComponentsChipFontWeightMedium = 500
    public static let expComponentsChipFontWeightRegular = 400
    public static let expComponentsChipFontWeightSemiBold = 600
    public static let expComponentsChipFontWeightThin = 100
    public static let expComponentsChipLineHeightDefault = 1
    public static let expComponentsChipPaddingClose = 0px
    public static let expComponentsChipPaddingCompact = .75em
    public static let expComponentsChipPaddingDefault = 0.5rem 1em
    public static let expComponentsChipShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    public static let expComponentsChipShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expComponentsChipTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsChipTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsChipTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsChipTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsChipTextColorPrimary = hsl(0, 0%, 2%)
    public static let expComponentsChipTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsChipTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expComponentsChipTextColorTitle = hsl(0, 0%, 40%)
    public static let expComponentsChipWidthExtraLarge = 100%
    public static let expComponentsChipWidthLarge = 75%
    public static let expComponentsChipWidthMedium = 50%
    public static let expComponentsChipWidthSmall = 33%
    public static let expComponentsChipWidthXtraSmall = 20%
    public static let expComponentsDrawerBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsDrawerBackgroundColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsDrawerBackgroundColorDrawerContent = hsl(0, 0%, 95%)
    public static let expComponentsDrawerBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expComponentsDrawerBackgroundColorInverse = hsl(195, 85%, 50%)
    public static let expComponentsDrawerBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsDrawerBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expComponentsDrawerBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsDrawerBorderRadiusDefault = 4px
    public static let expComponentsDrawerFontSizeContent = 1rem
    public static let expComponentsDrawerFontSizeSubTitle = 1rem
    public static let expComponentsDrawerFontSizeTitle = 1.5rem
    public static let expComponentsDrawerFontWeightClose = 400
    public static let expComponentsDrawerFontWeightTitle = 400
    public static let expComponentsDrawerHeightBody = calc(100vh - 3.5rem)
    public static let expComponentsDrawerHeightTitle = 3.5rem
    public static let expComponentsDrawerMarginCloseLeft = auto
    public static let expComponentsDrawerOverlay = rgba(0, 0, 0, 0.5)
    public static let expComponentsDrawerPaddingActionTitleLeft = 0
    public static let expComponentsDrawerPaddingDrawerInner = 1rem 2.5rem
    public static let expComponentsDrawerPaddingDrawerInner768 = 2rem 2.5rem
    public static let expComponentsDrawerPaddingTitleLeft = 3.5rem
    public static let expComponentsDrawerShadowBox = 2px 3px 4px 0px rgba(0, 0, 0, 0.2)
    public static let expComponentsDrawerTextColorBody = hsl(0, 0%, 2%)
    public static let expComponentsDrawerTextColorIcon = hsl(0, 0%, 6%)
    public static let expComponentsDrawerTextColorInverse = hsl(220, 100%, 53%)
    public static let expComponentsDrawerTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expComponentsDrawerTextColorTitle = hsl(220, 100%, 53%)
    public static let expComponentsDrawerTransformDefault = translateX(-100%)
    public static let expComponentsDrawerTransformDrawerBottom = translateX(100%)
    public static let expComponentsDrawerTransformDrawerRight = translateX(100%)
    public static let expComponentsDrawerTransition = transform 0.3s ease-out
    public static let expComponentsDrawerWidthBorder = 1px
    public static let expComponentsDropdownArrowFontSize = .875rem
    public static let expComponentsDropdownArrowTextColor = hsl(0, 0%, 6%)
    public static let expComponentsDropdownButtonBackgroundColor = hsl(0, 0%, 95%)
    public static let expComponentsDropdownButtonBackgroundColorHover = hsl(0, 0%, 75%)
    public static let expComponentsDropdownButtonBorder = 1px solid hsl(280, 40%, 45%)
    public static let expComponentsDropdownButtonBorderColorHover = hsl(220, 100%, 53%)
    public static let expComponentsDropdownButtonBorderRadius = 4px
    public static let expComponentsDropdownButtonFontSize = 1rem
    public static let expComponentsDropdownButtonFontWeight = 500
    public static let expComponentsDropdownButtonPadding = .5rem 1rem
    public static let expComponentsDropdownButtonTextColor = hsl(0, 0%, 6%)
    public static let expComponentsDropdownButtonTextColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsDropdownButtonTransition = border-color 0.3s ease
    public static let expComponentsDropdownLabelFontSize = .875rem
    public static let expComponentsDropdownLabelMarginBottom = .5rem
    public static let expComponentsDropdownLabelTextColor = hsl(0, 0%, 6%)
    public static let expComponentsDropdownListBackgroundColor = hsl(0, 0%, 95%)
    public static let expComponentsDropdownListBorder = 1px solid hsl(0, 0%, 85%)
    public static let expComponentsDropdownListBorderRadius = 4px
    public static let expComponentsDropdownListFontSize = 1rem
    public static let expComponentsDropdownListHeight = fit-content
    public static let expComponentsDropdownListLeft = 0
    public static let expComponentsDropdownListListStyle = none
    public static let expComponentsDropdownListMargin = 0
    public static let expComponentsDropdownListPadding = 0
    public static let expComponentsDropdownListShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expComponentsDropdownListTextColor = hsl(0, 0%, 6%)
    public static let expComponentsDropdownListTextColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsDropdownListTextColorHover = hsl(0, 0%, 2%)
    public static let expComponentsDropdownListTop = 100%
    public static let expComponentsDropdownListTransition = background-color 0.3s ease-in-out
    public static let expComponentsDropdownListWidth = 100%
    public static let expComponentsDropdownListZIndex = 1000
    public static let expComponentsDropdownOptionBackgroundColor = hsl(0, 0%, 95%)
    public static let expComponentsDropdownOptionBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsDropdownOptionBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expComponentsDropdownOptionBackgroundColorSelected = rgba(255, 255, 255, 0.2)
    public static let expComponentsDropdownOptionBorder = none
    public static let expComponentsDropdownOptionBorderRadius = 4px
    public static let expComponentsDropdownOptionFontSize = 1rem
    public static let expComponentsDropdownOptionFontWeight = 500
    public static let expComponentsDropdownOptionFontWeightSelected = 700
    public static let expComponentsDropdownOptionPadding = .5rem 1rem
    public static let expComponentsDropdownOptionTextColor = hsl(0, 0%, 6%)
    public static let expComponentsDropdownOptionTextColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsDropdownOptionTextColorHover = hsl(0, 0%, 95%)
    public static let expComponentsDropdownOptionTransition = background-color 0.3s ease-in-out
    public static let expComponentsDropdownWidth = 12rem
    public static let expComponentsFabBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsFabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsFabBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsFabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsFabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expComponentsFabBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expComponentsFabBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expComponentsFabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsFabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsFabBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsFabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsFabBorderRadiusPill = 9999px
    public static let expComponentsFabFontSizeLarge = 1.25rem
    public static let expComponentsFabFontSizeMedium = 1rem
    public static let expComponentsFabFontSizeSmall = .875rem
    public static let expComponentsFabFontSizeXl = 1.5rem
    public static let expComponentsFabFontWeightBold = 700
    public static let expComponentsFabFontWeightExtraBold = 800
    public static let expComponentsFabFontWeightLight = 300
    public static let expComponentsFabFontWeightMedium = 500
    public static let expComponentsFabFontWeightRegular = 400
    public static let expComponentsFabFontWeightSemiBold = 600
    public static let expComponentsFabFontWeightThin = 100
    public static let expComponentsFabHeightMedium = 3.5rem
    public static let expComponentsFabLocationBottom = 1.5rem
    public static let expComponentsFabLocationLeft = 1.5rem
    public static let expComponentsFabLocationRight = 1.5rem
    public static let expComponentsFabMarginAccordionslide = .5em 0 .5em 0
    public static let expComponentsFabPaddingLarge = 1rem 1.5rem
    public static let expComponentsFabPaddingMedium = .75rem 1.25rem
    public static let expComponentsFabPaddingSmall = .5rem 1rem
    public static let expComponentsFabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expComponentsFabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expComponentsFabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expComponentsFabTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsFabTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsFabTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsFabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsFabTextColorLight = hsl(0, 0%, 95%)
    public static let expComponentsFabTextColorPrimary = hsl(0, 0%, 95%)
    public static let expComponentsFabTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsFabWidthMedium = 3.5rem
    public static let expComponentsIconFillDefault = hsl(0, 0%, 1%)
    public static let expComponentsIconStrokeDefault = hsl(0, 0%, 1%)
    public static let expComponentsMenuBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expComponentsMenuBackgroundColorFooter = hsl(0, 0%, 98%)
    public static let expComponentsMenuBackgroundColorToggleBg = hsl(0, 0%, 98%)
    public static let expComponentsMenuBorderColorDefault = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsMenuBorderColorError = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expComponentsMenuBorderColorFocus = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsMenuBorderColorFooterBorderTop = hsl(0, 0%, 87%)
    public static let expComponentsMenuBorderRadius = 4px
    public static let expComponentsMenuFontFamilyBody = Open Sans, sans-serif
    public static let expComponentsMenuFontSizeContent = 1rem
    public static let expComponentsMenuFontSizeLarge = 1.25rem
    public static let expComponentsMenuFontSizeMedium = 1rem
    public static let expComponentsMenuFontSizeSmall = .875rem
    public static let expComponentsMenuFontSizeSubTitle = 1rem
    public static let expComponentsMenuFontSizeTitle = 1.25rem
    public static let expComponentsMenuFontWeightBold = 700
    public static let expComponentsMenuFontWeightExtraBold = 800
    public static let expComponentsMenuFontWeightLight = 300
    public static let expComponentsMenuFontWeightMedium = 500
    public static let expComponentsMenuFontWeightRegular = 400
    public static let expComponentsMenuFontWeightSemiBold = 600
    public static let expComponentsMenuFontWeightThin = 100
    public static let expComponentsMenuPaddingCompact = .75em
    public static let expComponentsMenuPaddingDefault = 0.5rem 1em
    public static let expComponentsMenuShadowDefault = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08)
    public static let expComponentsMenuShadowHover = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15)
    public static let expComponentsMenuTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsMenuTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsMenuTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsMenuTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsMenuTextColorPrimary = hsl(0, 0%, 2%)
    public static let expComponentsMenuTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsMenuTextColorSubtitle = hsl(0, 0%, 40%)
    public static let expComponentsMenuTextColorTitle = hsl(0, 0%, 40%)
    public static let expComponentsMenuWidthExtraLarge = 100%
    public static let expComponentsMenuWidthLarge = 75%
    public static let expComponentsMenuWidthMedium = 50%
    public static let expComponentsMenuWidthSmall = 33%
    public static let expComponentsMenuWidthXtraSmall = 20%
    public static let expComponentsModalBackgroundColor = hsl(0, 0%, 95%)
    public static let expComponentsModalBodyFontFamily = Open Sans, sans-serif
    public static let expComponentsModalBodyFontSize = 1rem
    public static let expComponentsModalBodyPadding = 2.5rem 0.5rem
    public static let expComponentsModalBodyWidth = 50em
    public static let expComponentsModalBorderRadius = 4px
    public static let expComponentsModalButtonCellPadding = 0 .5rem
    public static let expComponentsModalButtonRowPadding = 1rem
    public static let expComponentsModalCloseBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsModalCloseBorder = none
    public static let expComponentsModalCloseFontWeight = 700
    public static let expComponentsModalCloseHeight = 3.5rem
    public static let expComponentsModalCloseInverse = hsl(195, 85%, 50%)
    public static let expComponentsModalClosePadding = .75rem
    public static let expComponentsModalCloseWidth = 3.5rem
    public static let expComponentsModalContentBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsModalContentBorderRadius = 4px
    public static let expComponentsModalContentHeight = 100vh
    public static let expComponentsModalContentPadding = 1rem
    public static let expComponentsModalContentShadow = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expComponentsModalContentWidth = 100%
    public static let expComponentsModalDialogTransformBottom = translate(-50%, 0)
    public static let expComponentsModalDialogTransformDefault = translate(-50%, -50%)
    public static let expComponentsModalDialogTransformLeft = translate(0, -50%)
    public static let expComponentsModalDialogTransformRight = translate(0, -50%)
    public static let expComponentsModalDialogTransformTop = translate(-50%, 0)
    public static let expComponentsModalDialogTransition = transform 0.3s ease-out
    public static let expComponentsModalHeaderBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsModalHeaderBorderBottom = 1px solid #CCCCCC
    public static let expComponentsModalHeaderBorderRadius = 4px
    public static let expComponentsModalHeaderHeight = 3.5rem
    public static let expComponentsModalHeaderInverse = hsl(195, 85%, 50%)
    public static let expComponentsModalHeaderPadding = 1rem
    public static let expComponentsModalHeaderTextColor = hsl(0, 0%, 20%)
    public static let expComponentsModalHeightMedium = 9em
    public static let expComponentsModalHeightShort = 3em
    public static let expComponentsModalHeightTall = 18em
    public static let expComponentsModalIconInverse = hsl(195, 85%, 50%)
    public static let expComponentsModalIconStyleCautionFill = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expComponentsModalIconStyleCautionStroke = UIColor(red: 1.000, green: 0.757, blue: 0.020, alpha: 1)
    public static let expComponentsModalIconStyleDefaultFill = hsl(0, 0%, 45%)
    public static let expComponentsModalIconStyleDefaultStroke = hsl(0, 0%, 45%)
    public static let expComponentsModalIconStyleSuccessFill = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expComponentsModalIconStyleSuccessStroke = UIColor(red: 0.161, green: 0.659, blue: 0.278, alpha: 1)
    public static let expComponentsModalIconStyleWarnFill = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expComponentsModalIconStyleWarnStroke = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expComponentsModalLineHeight = 1.5
    public static let expComponentsModalOpenOpacity = 1
    public static let expComponentsModalOverlayColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let expComponentsModalOverlayOpacity = 0.5
    public static let expComponentsModalPadding = 1.5rem
    public static let expComponentsModalResponsiveBorderRadius481px768px = 4px
    public static let expComponentsModalResponsiveBorderRadiusMax480px = 4px
    public static let expComponentsModalResponsiveBorderRadiusMinWidth768pxContentBorderRadius = .25em
    public static let expComponentsModalResponsiveBorderRadiusMinWidth768pxHeaderBorderRadius = .25rem .25rem 0 0
    public static let expComponentsModalResponsiveHeight481px768px = 26.25em
    public static let expComponentsModalResponsiveHeightMax480px = 26.25em
    public static let expComponentsModalResponsiveWidth481px768px = 17.5em
    public static let expComponentsModalResponsiveWidthMax480px = 17.5em
    public static let expComponentsModalStatusFontFamily = Open Sans, sans-serif
    public static let expComponentsModalStatusFontSize = 1rem
    public static let expComponentsModalStatusFontWeight = 400
    public static let expComponentsModalStatusIconBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsModalStatusIconBorder = none
    public static let expComponentsModalStatusIconFontWeight = 700
    public static let expComponentsModalStatusIconHeight = 1.5rem
    public static let expComponentsModalStatusIconInverse = hsl(195, 85%, 50%)
    public static let expComponentsModalStatusIconMargin = 0 12px 0 0
    public static let expComponentsModalStatusIconPadding = 0 12px 0 0
    public static let expComponentsModalStatusIconTextColor = hsl(0, 0%, 20%)
    public static let expComponentsModalStatusIconWidth = 1.5rem
    public static let expComponentsModalStatusLineHeight = 1.5
    public static let expComponentsModalStatusMargin = 1rem
    public static let expComponentsModalStatusPadding = 1rem
    public static let expComponentsModalSvgFill = hsl(0, 0%, 20%)
    public static let expComponentsModalTextAreaFontFamily = Open Sans, sans-serif
    public static let expComponentsModalTextAreaFontSize = 1rem
    public static let expComponentsModalTextAreaPadding = 1rem
    public static let expComponentsModalTextAreaTextAlign = left
    public static let expComponentsModalTextAreaWidth = 23em
    public static let expComponentsModalTextColor = hsl(0, 0%, 6%)
    public static let expComponentsModalTitleFontFamily = Open Sans, sans-serif
    public static let expComponentsModalTitleFontSize = 1.25rem
    public static let expComponentsModalTitleFontWeight = 400
    public static let expComponentsModalTitlePaddingLeft = .75rem
    public static let expComponentsModalTransition = transform 0.3s ease-out
    public static let expComponentsModalTypographyContent = 1rem
    public static let expComponentsModalTypographyFontFamily = Open Sans, sans-serif
    public static let expComponentsModalTypographySubtitle = 1rem
    public static let expComponentsModalTypographyTitle = 1.5rem
    public static let expComponentsModalWidthMedium = 35em
    public static let expComponentsModalWidthNarrow = 28em
    public static let expComponentsModalZIndex = 1000
    public static let expComponentsRadioBackgroundColorChecked = hsl(220, 100%, 53%)
    public static let expComponentsRadioBackgroundColorUnchecked = hsl(0, 0%, 95%)
    public static let expComponentsRadioBorderColorChecked = hsl(0, 0%, 2%)
    public static let expComponentsRadioBorderColorUnchecked = hsl(220, 100%, 53%)
    public static let expComponentsRadioDisabledBackgroundColor = hsl(0, 0%, 75%)
    public static let expComponentsRadioDisabledBorderColor = hsl(0, 0%, 45%)
    public static let expComponentsRadioDisabledOpacity = 0.6
    public static let expComponentsRadioGroupIndicatorBackgroundColor = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsRadioGroupIndicatorBorder = 2px solid hsl(220, 100%, 43%)
    public static let expComponentsRadioGroupIndicatorBorderRadius = CGFloat(800.00)
    public static let expComponentsRadioGroupIndicatorHeight = 1rem
    public static let expComponentsRadioGroupIndicatorMarginRight = .5rem
    public static let expComponentsRadioGroupIndicatorTransition = background-color 0.3s ease
    public static let expComponentsRadioGroupIndicatorWidth = 1rem
    public static let expComponentsRadioGroupMarginBottom = .5rem
    public static let expComponentsRadioLabelFontFamily = Open Sans, sans-serif
    public static let expComponentsRadioLabelFontSize = 1rem
    public static let expComponentsRadioLabelMarginLeft = .5rem
    public static let expComponentsRadioLabelTextColor = hsl(0, 0%, 2%)
    public static let expComponentsRadioSize = CGFloat(256.00)
    public static let expComponentsSliderThumbColor = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expComponentsSliderThumbSize = CGFloat(256.00)
    public static let expComponentsSliderTrackColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsSliderTrackHeight = CGFloat(64.00)
    public static let expComponentsSplitButtonBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsSplitButtonBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsSplitButtonBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsSplitButtonBackgroundColorDropdownButton = hsl(220, 100%, 53%)
    public static let expComponentsSplitButtonBackgroundColorDropdownButtonHover = hsl(220, 100%, 23%)
    public static let expComponentsSplitButtonBackgroundColorDropdownMenu = hsl(0, 0%, 92%)
    public static let expComponentsSplitButtonBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsSplitButtonBackgroundColorPrimaryButton = hsl(280, 40%, 45%)
    public static let expComponentsSplitButtonBackgroundColorPrimaryButtonHover = hsl(280, 20%, 25%)
    public static let expComponentsSplitButtonBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsSplitButtonBorderDropdownButton = 1px solid hsl(220, 100%, 43%)
    public static let expComponentsSplitButtonBorderDropdownButtonLeft = 1px solid hsl(220, 100%, 23%)
    public static let expComponentsSplitButtonBorderDropdownMenu = 1px solid hsl(0, 0%, 45%)
    public static let expComponentsSplitButtonBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsSplitButtonBorderPrimaryButton = 1px solid hsl(280, 40%, 45%)
    public static let expComponentsSplitButtonBorderRadiusDropdownButton = 0 4px 4px 0
    public static let expComponentsSplitButtonBorderRadiusDropdownMenu = 4px
    public static let expComponentsSplitButtonBorderRadiusPrimaryButton = 4px 0 0 4px
    public static let expComponentsSplitButtonFontSizeDropdownIcon = 1rem
    public static let expComponentsSplitButtonFontSizePrimaryButton = 1rem
    public static let expComponentsSplitButtonFontWeightBold = 700
    public static let expComponentsSplitButtonFontWeightExtraBold = 800
    public static let expComponentsSplitButtonFontWeightLight = 300
    public static let expComponentsSplitButtonFontWeightMedium = 500
    public static let expComponentsSplitButtonFontWeightRegular = 400
    public static let expComponentsSplitButtonFontWeightSemiBold = 600
    public static let expComponentsSplitButtonFontWeightThin = 100
    public static let expComponentsSplitButtonLabelColor = hsl(0, 0%, 6%)
    public static let expComponentsSplitButtonLabelColorHover = hsl(0, 0%, 2%)
    public static let expComponentsSplitButtonLabelFontSize = 1rem
    public static let expComponentsSplitButtonLabelFontWeight = 500
    public static let expComponentsSplitButtonLabelMarginBottom = .5rem
    public static let expComponentsSplitButtonLabelTransition = color 0.3s
    public static let expComponentsSplitButtonPaddingDropdownButton = .73em
    public static let expComponentsSplitButtonPaddingPrimaryButton = .5rem 1rem
    public static let expComponentsSplitButtonRangeSliderGap = .5rem
    public static let expComponentsSplitButtonRangeSliderRangeBackgroundColor = hsl(0, 0%, 85%)
    public static let expComponentsSplitButtonRangeSliderRangeBorderRadius = 4px
    public static let expComponentsSplitButtonRangeSliderRangeTransition = background-color 0.3s ease-in-out
    public static let expComponentsSplitButtonRangeSliderThumbBackgroundColor = hsl(195, 85%, 50%)
    public static let expComponentsSplitButtonRangeSliderThumbBorderRadius = 50%
    public static let expComponentsSplitButtonRangeSliderThumbHeight = 1.25rem
    public static let expComponentsSplitButtonRangeSliderThumbTransition = background-color 0.3s ease-in-out
    public static let expComponentsSplitButtonRangeSliderThumbWidth = 1.25rem
    public static let expComponentsSplitButtonRangeSliderValueDisplayColor = hsl(0, 0%, 6%)
    public static let expComponentsSplitButtonRangeSliderValueDisplayFontSize = 1rem
    public static let expComponentsSplitButtonRangeSliderValueDisplayFontWeight = 700
    public static let expComponentsSplitButtonShadowDropdownMenuBox = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expComponentsSplitButtonTextColorDropdownButton = hsl(0, 0%, 95%)
    public static let expComponentsSplitButtonTextColorPrimaryButton = hsl(0, 0%, 95%)
    public static let expComponentsSplitButtonTransitionPrimaryButton = background-color 0.3s ease-in-out
    public static let expComponentsSplitButtonWidthDropdownMenuMin = 8rem
    public static let expComponentsSwitchBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsSwitchBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsSwitchBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsSwitchBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsSwitchBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expComponentsSwitchBackgroundColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsSwitchBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expComponentsSwitchBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsSwitchBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsSwitchBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsSwitchBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsSwitchBorderRadiusDefault = 4px
    public static let expComponentsSwitchBorderRadiusPill = 9999px
    public static let expComponentsSwitchFontSize = .675rem
    public static let expComponentsSwitchFontWeight = 700
    public static let expComponentsSwitchHeight = 1.5rem
    public static let expComponentsSwitchLeverColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    public static let expComponentsSwitchLeverColorBackgroundOnDefault = hsl(280, 60%, 65%)
    public static let expComponentsSwitchLeverHeightLarge = 1.5rem
    public static let expComponentsSwitchLeverHeightMedium = 1.25rem
    public static let expComponentsSwitchLeverHeightSmall = 1rem
    public static let expComponentsSwitchLeverShadowBoxShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expComponentsSwitchLeverShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    public static let expComponentsSwitchLeverShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    public static let expComponentsSwitchLeverShadowOnStatic = none
    public static let expComponentsSwitchLeverWidthLarge = 4rem
    public static let expComponentsSwitchLeverWidthMedium = 3rem
    public static let expComponentsSwitchLeverWidthSmall = 2rem
    public static let expComponentsSwitchPaddingLarge = 1rem 1.5rem
    public static let expComponentsSwitchPaddingMedium = .75rem 1.25rem
    public static let expComponentsSwitchPaddingSmall = .5rem 1rem
    public static let expComponentsSwitchTextColorDanger = hsl(0, 80%, 40%)
    public static let expComponentsSwitchTextColorDefault = hsl(0, 0%, 4%)
    public static let expComponentsSwitchTextColorSuccess = hsl(120, 60%, 65%)
    public static let expComponentsSwitchTextColorWarning = hsl(60, 40%, 45%)
    public static let expComponentsSwitchThumbColorBackgroundOffStaticDefault = hsl(280, 60%, 65%)
    public static let expComponentsSwitchThumbColorBackgroundOffStaticDisabled = hsl(0, 0%, 45%)
    public static let expComponentsSwitchThumbColorBackgroundOffStaticFocused = hsl(220, 100%, 53%)
    public static let expComponentsSwitchThumbColorBackgroundOffStaticHover = hsl(280, 50%, 55%)
    public static let expComponentsSwitchThumbColorBackgroundOffStaticPressed = hsl(220, 100%, 53%)
    public static let expComponentsSwitchThumbColorBackgroundOnStaticDefault = hsl(280, 60%, 65%)
    public static let expComponentsSwitchThumbColorBackgroundOnStaticFocused = hsl(220, 100%, 53%)
    public static let expComponentsSwitchThumbColorBackgroundOnStaticHover = hsl(280, 40%, 45%)
    public static let expComponentsSwitchThumbColorBorderOffFocused = 4px solid hsl(0, 0%, 55%)
    public static let expComponentsSwitchThumbColorBorderOffPressed = 4px solid hsl(270, 55%, 55%)
    public static let expComponentsSwitchThumbColorBorderOnFocused = 4px solid hsl(220, 100%, 53%)
    public static let expComponentsSwitchThumbColorBorderOnPressed = 4px solid hsl(270, 55%, 55%)
    public static let expComponentsSwitchThumbShadowOffPressed = -2px -2px 10px 10px 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40)
    public static let expComponentsSwitchThumbShadowOffStatic = 1px 1px 2px 2px rgba(115, 111, 111, 0.35)
    public static let expComponentsSwitchThumbShadowOnStatic = none
    public static let expComponentsSwitchThumbWidth = 1.5rem
    public static let expComponentsSwitchTrackColorBackgroundOffDisabled = hsl(0, 0%, 45%)
    public static let expComponentsSwitchTrackColorBackgroundOnDefault = hsl(240, 20%, 98%)
    public static let expComponentsSwitchTrackHeight = 1.25rem
    public static let expComponentsSwitchTrackShadow = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    public static let expComponentsSwitchTrackWidth = 3rem
    public static let expComponentsTabBackgroundColorButton = none
    public static let expComponentsTabBackgroundColorDanger = hsl(0, 95%, 50%)
    public static let expComponentsTabBackgroundColorDangerHover = hsl(0, 75%, 70%)
    public static let expComponentsTabBackgroundColorDisabled = hsl(0, 0%, 85%)
    public static let expComponentsTabBackgroundColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsTabBackgroundColorHoverNotDisabled = hsl(220, 100%, 33%)
    public static let expComponentsTabBackgroundColorPrimary = hsl(280, 60%, 65%)
    public static let expComponentsTabBackgroundColorSecondary = hsl(220, 100%, 53%)
    public static let expComponentsTabBorderBarBottom = 2px solid hsl(0, 0%, 85%)
    public static let expComponentsTabBorderButtomBottom = 2px solid transparent
    public static let expComponentsTabBorderButton = none
    public static let expComponentsTabBorderButtonBorderBottomActive = hsl(220, 40%, 45%)
    public static let expComponentsTabBorderColorBarBottom = hsl(0, 0%, 85%)
    public static let expComponentsTabBorderColorDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsTabBorderColorNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsTabBorderColorPrimary = hsl(280, 40%, 45%)
    public static let expComponentsTabBorderColorSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsTabBorderDisabled = UIColor(red: 0.961, green: 0.961, blue: 0.961, alpha: 1)
    public static let expComponentsTabBorderNone = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0)
    public static let expComponentsTabBorderPanel = 1px solid hsl(0, 0%, 85%)
    public static let expComponentsTabBorderPanelTop = none
    public static let expComponentsTabBorderRadiusPill = 9999px
    public static let expComponentsTabBorderSecondary = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expComponentsTabBorderWidth = 1px
    public static let expComponentsTabFontSizeButton = 1rem
    public static let expComponentsTabFontSizeLarge = 1.25rem
    public static let expComponentsTabFontSizeMedium = 1rem
    public static let expComponentsTabFontSizeSmall = .875rem
    public static let expComponentsTabFontSizeXl = 1.5rem
    public static let expComponentsTabFontWeightBold = 700
    public static let expComponentsTabFontWeightExtraBold = 800
    public static let expComponentsTabFontWeightLight = 300
    public static let expComponentsTabFontWeightMedium = 500
    public static let expComponentsTabFontWeightRegular = 400
    public static let expComponentsTabFontWeightSemiBold = 600
    public static let expComponentsTabFontWeightThin = 100
    public static let expComponentsTabGapBar = .5rem
    public static let expComponentsTabHeightMedium = 3.5rem
    public static let expComponentsTabLocationBottom = 1.5rem
    public static let expComponentsTabLocationLeft = 1.5rem
    public static let expComponentsTabLocationRight = 1.5rem
    public static let expComponentsTabPaddingButton = .5em 1em
    public static let expComponentsTabPaddingLarge = 1rem 1.5rem
    public static let expComponentsTabPaddingMedium = .75rem 1.25rem
    public static let expComponentsTabPaddingSmall = .5rem 1rem
    public static let expComponentsTabShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expComponentsTabShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08)
    public static let expComponentsTabShadowOutline = 0 0 0 3px rgba(127, 25, 229, 1)
    public static let expComponentsTabTextColorButton = hsl(0, 0%, 4%)
    public static let expComponentsTabTextColorButtonActive = hsl(220, 40%, 45%)
    public static let expComponentsTabTextColorDanger = hsl(0, 0%, 95%)
    public static let expComponentsTabTextColorDisabled = hsl(0, 0%, 45%)
    public static let expComponentsTabTextColorHoverDisabled = hsl(0, 0%, 75%)
    public static let expComponentsTabTextColorHoverNotDisabled = rgba(255, 255, 255, 0.8)
    public static let expComponentsTabTextColorLight = hsl(0, 0%, 95%)
    public static let expComponentsTabTextColorPrimary = hsl(0, 0%, 95%)
    public static let expComponentsTabTextColorSecondary = hsl(0, 0%, 95%)
    public static let expComponentsTabTransitionButton = color 0.3s, border-bottom-color 0.3s
    public static let expComponentsTabWidthMedium = 3.5rem
    public static let expComponentsTextareaBackgroundColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expComponentsTextareaBorder = 1px solid hsl(0, 0%, 75%)
    public static let expComponentsTextareaBorderFocus = hsl(220, 100%, 53%)
    public static let expComponentsTextareaBorderRadius = 4px
    public static let expComponentsTextareaCharCounterFontFamily = Open Sans, sans-serif
    public static let expComponentsTextareaCharCounterFontSize = .875rem
    public static let expComponentsTextareaCharCounterFontWeight = 400
    public static let expComponentsTextareaCharCounterMargin = .5rem 0 0 0
    public static let expComponentsTextareaCharCounterTextAlign = right
    public static let expComponentsTextareaCharCounterTextColor = hsl(0, 0%, 55%)
    public static let expComponentsTextareaDisabled = hsl(0, 0%, 75%)
    public static let expComponentsTextareaErrorFontFamily = Open Sans, sans-serif
    public static let expComponentsTextareaErrorFontSize = .875rem
    public static let expComponentsTextareaErrorFontWeight = 400
    public static let expComponentsTextareaErrorMargin = .5rem 0 0 0
    public static let expComponentsTextareaErrorTextColor = hsl(0, 95%, 50%)
    public static let expComponentsTextareaFontSize = 1rem
    public static let expComponentsTextareaGap = .5rem
    public static let expComponentsTextareaPadding = .5rem
    public static let expComponentsTextareaPlaceholderBackgroundColor = hsl(0, 0%, 85%)
    public static let expComponentsTextareaPlaceholderTextColor = hsl(0, 0%, 55%)
    public static let expComponentsTextareaTextColorPlaceholder = hsl(0, 0%, 55%)
    public static let expComponentsTextareaTransition = transform 0.3s ease-out
    public static let expComponentsTextareaWidth = 16rem
    public static let expComponentsTextinputBackgroundColorDefault = hsl(0, 0%, 95%)
    public static let expComponentsTextinputBackgroundColorDisabled = hsl(0, 0%, 95%)
    public static let expComponentsTextinputBackgroundColorFocus = UIColor(red: 0.878, green: 0.969, blue: 0.980, alpha: 1)
    public static let expComponentsTextinputBackgroundColorNumeric = hsl(0, 0%, 95%)
    public static let expComponentsTextinputBorderRadiusDefault = 4px
    public static let expComponentsTextinputButtonBackgroundColor = hsl(0, 0%, 95%)
    public static let expComponentsTextinputButtonBackgroundColorDisabled = hsl(0, 0%, 95%)
    public static let expComponentsTextinputButtonBackgroundColorHover = hsl(220, 100%, 53%)
    public static let expComponentsTextinputButtonBorder = 1px solid hsl(0, 0%, 75%)
    public static let expComponentsTextinputButtonBorderRadius = 4px
    public static let expComponentsTextinputButtonFontSize = 1.25rem
    public static let expComponentsTextinputButtonHeight = 2rem
    public static let expComponentsTextinputButtonMargin = .5rem 0 0 0
    public static let expComponentsTextinputButtonPadding = .5rem
    public static let expComponentsTextinputButtonTextColor = hsl(0, 0%, 20%)
    public static let expComponentsTextinputButtonTextColorDisabled = hsl(0, 0%, 75%)
    public static let expComponentsTextinputButtonTextColorHover = hsl(0, 0%, 95%)
    public static let expComponentsTextinputButtonTransition = transform 0.3s ease-out
    public static let expComponentsTextinputButtonWidth = 2rem
    public static let expComponentsTextinputErrorMessageFontFamily = Open Sans, sans-serif
    public static let expComponentsTextinputErrorMessageFontSize = .875rem
    public static let expComponentsTextinputErrorMessageFontWeight = 400
    public static let expComponentsTextinputErrorMessageMargin = .5rem 0 0 0
    public static let expComponentsTextinputErrorMessageTextColor = hsl(0, 95%, 50%)
    public static let expComponentsTextinputInputBorder = 1px solid hsl(0, 0%, 75%)
    public static let expComponentsTextinputInputBorderFocus = hsl(220, 100%, 53%)
    public static let expComponentsTextinputInputBorderRadius = 4px
    public static let expComponentsTextinputInputBorderRadiusNumeric = 4px
    public static let expComponentsTextinputInputFontSize = 1rem
    public static let expComponentsTextinputInputGap = .5rem
    public static let expComponentsTextinputInputPadding = .5rem
    public static let expComponentsTextinputInputTextColorDisabled = hsl(0, 0%, 75%)
    public static let expComponentsTextinputInputTextColorPlaceholder = hsl(0, 0%, 55%)
    public static let expComponentsTextinputInputTransition = transform 0.3s ease-out
    public static let expComponentsTextinputInputWidth = 16rem
    public static let expComponentsTextinputInputWidthNumeric = 4rem
    public static let expComponentsTextinputLabelFontFamily = Open Sans, sans-serif
    public static let expComponentsTextinputLabelFontSize = 1rem
    public static let expComponentsTextinputLabelFontWeight = 400
    public static let expComponentsTextinputLabelMargin = .5rem 0 0 0
    public static let expComponentsTextinputLabelTextColor = hsl(0, 0%, 20%)
    public static let expComponentsTextinputPaddingDefault = 8px 12px
    public static let expComponentsTextinputWrapperErrorBorderColor = UIColor(red: 0.878, green: 0.282, blue: 0.282, alpha: 1)
    public static let expComponentsToastBackgroundColorError = hsl(0, 95%, 50%)
    public static let expComponentsToastBackgroundColorInfo = hsl(220, 60%, 65%)
    public static let expComponentsToastBackgroundColorSuccess = hsl(120, 60%, 65%)
    public static let expComponentsToastBackgroundColorWarning = hsl(60, 40%, 45%)
    public static let expComponentsToastBorderRadius = 4px
    public static let expComponentsToastFontSize = 1rem
    public static let expComponentsToastPadding = 1rem
    public static let expComponentsToastPositionsBottomLeftBottom = 1rem
    public static let expComponentsToastPositionsBottomLeftLeft = 1rem
    public static let expComponentsToastPositionsBottomRightBottom = 1rem
    public static let expComponentsToastPositionsBottomRightRight = 1rem
    public static let expComponentsToastPositionsTopLeftLeft = 1rem
    public static let expComponentsToastPositionsTopLeftTop = 1rem
    public static let expComponentsToastPositionsTopRightRight = 1rem
    public static let expComponentsToastPositionsTopRightTop = 1rem
    public static let expComponentsToastShadowBox = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expComponentsToastTextColorDefault = hsl(0, 0%, 95%)
    public static let expComponentsToastTextColorError = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expComponentsToastTextColorWarning = UIColor(red: 1.000, green: 0.435, blue: 0.000, alpha: 1)
    public static let expComponentsToastTransition = transform 0.3s ease-out
    public static let expComponentsToastZIndex = 1000
    public static let expComponentsTooltipBackgroundColor = hsl(0, 0%, 6%)
    public static let expComponentsTooltipBorderRadius = 4px
    public static let expComponentsTooltipFontSize = .875rem
    public static let expComponentsTooltipPadding = .5rem
    public static let expComponentsTooltipPointerBackgroundColor = hsl(0, 0%, 2%)
    public static let expComponentsTooltipPointerBorderStyle = solid
    public static let expComponentsTooltipPointerBottomBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expComponentsTooltipPointerBottomBorderWidth = 8px 8px 0 8px
    public static let expComponentsTooltipPointerBottomLeft = 52%
    public static let expComponentsTooltipPointerBottomMarginTop = 1rem
    public static let expComponentsTooltipPointerBottomTop = -32%
    public static let expComponentsTooltipPointerBottomTransform = translateX(-50%) rotate(180deg)
    public static let expComponentsTooltipPointerContentBackground = hsl(0, 0%, 2%)
    public static let expComponentsTooltipPointerContentBorderRadius = 4px
    public static let expComponentsTooltipPointerContentFontSize = .875rem
    public static let expComponentsTooltipPointerContentPadding = .5rem
    public static let expComponentsTooltipPointerContentTextColor = hsl(0, 0%, 95%)
    public static let expComponentsTooltipPointerContentWhiteSpace = nowrap
    public static let expComponentsTooltipPointerContentZIndex = 1000
    public static let expComponentsTooltipPointerHeight = calc(.5rem * .375)
    public static let expComponentsTooltipPointerLeftBorderColor = hsl(0, 0%, 0%, 0) hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expComponentsTooltipPointerLeftBorderWidth = 8px 8px 8px 0
    public static let expComponentsTooltipPointerLeftRight = -11px
    public static let expComponentsTooltipPointerLeftTop = 50%
    public static let expComponentsTooltipPointerLeftTransform = translateY(-50%) rotate(180deg)
    public static let expComponentsTooltipPointerRightBorderColor = transparent transparent transparent hsl(0, 0%, 2%)
    public static let expComponentsTooltipPointerRightBorderWidth = .5rem 0 .5rem .5rem
    public static let expComponentsTooltipPointerRightLeft = -11.5%
    public static let expComponentsTooltipPointerRightTop = 50%
    public static let expComponentsTooltipPointerRightTransform = translateY(-50%) rotate(180deg)
    public static let expComponentsTooltipPointerTopBorderColor = hsl(0, 0%, 2%) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0) hsl(0, 0%, 0%, 0)
    public static let expComponentsTooltipPointerTopBorderWidth = .5rem .5rem 0 .5rem
    public static let expComponentsTooltipPointerTopBottom = -11px
    public static let expComponentsTooltipPointerTopLeft = 50%
    public static let expComponentsTooltipPointerTopTop = auto
    public static let expComponentsTooltipPointerTopTransform = translateX(-50%) rotate(360deg)
    public static let expComponentsTooltipPointerWidth = calc(.5rem * .625)
    public static let expComponentsTooltipShadow = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expComponentsTooltipTextColor = hsl(0, 0%, 95%)
    public static let expComponentsTooltipZIndex = 1000
    public static let expConceptActionAliasesCta = action
    public static let expConceptActionAliasesInteraction = action
    public static let expConceptActionAliasesInteractive = action
    public static let expConceptActionDisabledBackgroundColor = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expConceptActionDisabledTextColor = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    public static let expConceptActionPrimaryBackgroundColor = UIColor(red: 0.000, green: 0.482, blue: 1.000, alpha: 1)
    public static let expConceptActionPrimaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expConceptActionSecondaryBackgroundColor = UIColor(red: 0.424, green: 0.459, blue: 0.490, alpha: 1)
    public static let expConceptActionSecondaryTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expConceptAllocationHigh = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1) /** Represents high allocation or usage level */
    public static let expConceptAllocationLow = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Represents low allocation or usage level */
    public static let expConceptAllocationMedium = UIColor(red: 1.000, green: 0.765, blue: 0.000, alpha: 1) /** Represents medium allocation or usage level */
    public static let expConceptBodyColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expConceptBodyColorMuted = UIColor(red: 0.400, green: 0.400, blue: 0.400, alpha: 1)
    public static let expConceptBodyFontSizeDefault = CGFloat(256.00)
    public static let expConceptBodyFontSizeSmall = CGFloat(224.00)
    public static let expConceptBodyFontWeightDefault = 400
    public static let expConceptBodyLineHeightDefault = 1.5
    public static let expConceptCommerceAvailabilityInStock = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    public static let expConceptCommerceAvailabilityOutOfStock = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    public static let expConceptCommerceDiscountColor = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1)
    public static let expConceptCommerceDiscountFontWeight = 700
    public static let expConceptCommercePriceColor = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    public static let expConceptCommercePriceFontSize = CGFloat(288.00)
    public static let expConceptFeedbackAliasesAlert = feedback
    public static let expConceptFeedbackAliasesMessaging = feedback
    public static let expConceptFeedbackAliasesNotification = feedback
    public static let expConceptFeedbackErrorBackgroundColor = UIColor(red: 0.949, green: 0.871, blue: 0.871, alpha: 1)
    public static let expConceptFeedbackErrorTextColor = UIColor(red: 0.663, green: 0.267, blue: 0.259, alpha: 1)
    public static let expConceptFeedbackSuccessBackgroundColor = UIColor(red: 0.875, green: 0.941, blue: 0.847, alpha: 1)
    public static let expConceptFeedbackSuccessTextColor = UIColor(red: 0.235, green: 0.463, blue: 0.239, alpha: 1)
    public static let expConceptFeedbackWarningBackgroundColor = UIColor(red: 0.988, green: 0.973, blue: 0.890, alpha: 1)
    public static let expConceptFeedbackWarningTextColor = UIColor(red: 0.541, green: 0.427, blue: 0.231, alpha: 1)
    public static let expConceptHeadingAliasesDisplay = heading
    public static let expConceptHeadingAliasesHeader = heading
    public static let expConceptHeadingAliasesHeadingLevel = heading
    public static let expConceptHeadingAliasesHeadline = heading
    public static let expConceptHeadingFontSizeLarge = CGFloat(512.00)
    public static let expConceptHeadingFontSizeMedium = CGFloat(384.00)
    public static let expConceptHeadingFontSizeSmall = CGFloat(288.00)
    public static let expConceptHeadingFontWeightDefault = 700
    public static let expConceptHeadingLineHeightDefault = 1.2
    public static let expConceptVisualizationAliasesCharting = visualization
    public static let expConceptVisualizationAliasesCharts = visualization
    public static let expConceptVisualizationAliasesDataviz = visualization
    public static let expConceptVisualizationHighlight = UIColor(red: 1.000, green: 0.843, blue: 0.000, alpha: 1)
    public static let expConceptVisualizationPrimary = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expConceptVisualizationSecondary = UIColor(red: 1.000, green: 0.341, blue: 0.200, alpha: 1)
    public static let expConceptVisualizationTertiary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1)
    public static let expElementBadgeBackgroundColorDefault = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expElementBadgeBackgroundColorInfo = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementBadgeBackgroundColorSuccess = UIColor(red: 0.000, green: 0.800, blue: 0.400, alpha: 1)
    public static let expElementBadgeBorderRadius = 12px
    public static let expElementBadgePaddingLarge = 6px 12px
    public static let expElementBadgePaddingMedium = 4px 8px
    public static let expElementBadgePaddingSmall = 2px 4px
    public static let expElementBadgeTextColorDefault = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expElementLeftIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementLeftIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementLeftIconColorDisabled = UIColor(red: 0.667, green: 0.667, blue: 0.667, alpha: 1)
    public static let expElementLeftIconSizeLarge = CGFloat(512.00)
    public static let expElementLeftIconSizeMedium = CGFloat(384.00)
    public static let expElementLeftIconSizeSmall = CGFloat(256.00)
    public static let expElementMaskBackgroundColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.8)
    public static let expElementMaskBlur = CGFloat(64.00)
    public static let expElementMaskOpacity = 0.8
    public static let expElementOverlayBackgroundColorDefault = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.5)
    public static let expElementOverlayBackgroundColorLight = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 0.3)
    public static let expElementOverlayOpacityDefault = 0.5
    public static let expElementOverlayOpacityLight = 0.3
    public static let expElementRightIconColorActive = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementRightIconColorDefault = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementRightIconColorHover = UIColor(red: 0.333, green: 0.333, blue: 0.333, alpha: 1)
    public static let expElementRightIconSizeLarge = CGFloat(512.00)
    public static let expElementRightIconSizeMedium = CGFloat(384.00)
    public static let expElementRightIconSizeSmall = CGFloat(256.00)
    public static let expElementSpinnerAnimationDurationFast = 0.5s
    public static let expElementSpinnerAnimationDurationNormal = 1s
    public static let expElementSpinnerAnimationDurationSlow = 1.5s
    public static let expElementSpinnerColorDefault = UIColor(red: 0.000, green: 0.467, blue: 0.800, alpha: 1)
    public static let expElementSpinnerColorLight = UIColor(red: 0.800, green: 0.800, blue: 0.800, alpha: 1)
    public static let expElementSpinnerSizeLarge = CGFloat(512.00)
    public static let expElementSpinnerSizeMedium = CGFloat(384.00)
    public static let expElementSpinnerSizeSmall = CGFloat(256.00)
    public static let expElementTooltipBackgroundColor = UIColor(red: 0.200, green: 0.200, blue: 0.200, alpha: 1)
    public static let expElementTooltipBorderRadius = 4px
    public static let expElementTooltipPadding = 8px
    public static let expElementTooltipShadowDefault = 0px 2px 4px rgba(0, 0, 0, 0.2)
    public static let expElementTooltipTextColor = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expElevationBackground = 0 /** Base background layer */
    public static let expElevationContent = 10 /** Primary content layer */
    public static let expElevationHeader = 100 /** Header or navigation bar layer */
    public static let expElevationModal = 500 /** Modal dialogs, highest elevation in most layouts */
    public static let expElevationOverlay = 200 /** Overlay elements like modals or drop-downs */
    public static let expElevationPopover = 400 /** Popovers, positioned above tooltips */
    public static let expElevationTooltip = 300 /** Tooltips, positioned above overlays */
    public static let expFontFontSizeBody = 1rem
    public static let expFontFontSizeHeading = 1.75rem
    public static let expFontFontSizeLg = 1.25rem
    public static let expFontFontSizeMd = 1rem
    public static let expFontFontSizeSm = .875rem
    public static let expFontFontSizeXl = 1.5rem
    public static let expFontFontSizeXs = .75rem
    public static let expFontFontSizeXxl = 2rem
    public static let expFontFontSizeXxs = .675rem
    public static let expFontFontStyleItalic = italic
    public static let expFontFontStyleNormal = normal
    public static let expFontFontStyleOblique = oblique
    public static let expFontFontWeightBold = 700
    public static let expFontFontWeightExtraBold = 800
    public static let expFontFontWeightLight = 300
    public static let expFontFontWeightMedium = 500
    public static let expFontFontWeightRegular = 400
    public static let expFontFontWeightSemiBold = 600
    public static let expFontFontWeightThin = 100
    public static let expFontFontsMonospace = Courier New, monospace
    public static let expFontFontsSans = Open Sans, sans-serif
    public static let expFontFontsSerif = Times New Roman, serif
    public static let expFontLetterSpacingNormal = 0px /** Normal letter spacing */
    public static let expFontLetterSpacingTight = -0.5px /** Tight letter spacing */
    public static let expFontLetterSpacingWide = 0.5px /** Wide letter spacing */
    public static let expFontLineHeightLoose = 1.8 /** Looser line height for readability */
    public static let expFontLineHeightNormal = 1.5 /** Standard line height */
    public static let expFontLineHeightTight = 1.2 /** Tight line height for compact text */
    public static let expFontTextTransformCapitalize = capitalize
    public static let expFontTextTransformLowercase = lowercase
    public static let expFontTextTransformNone = none
    public static let expFontTextTransformUppercase = uppercase
    public static let expFontTypographyBodyFontFamily = Times New Roman, serif
    public static let expFontTypographyBodyFontSize = 1rem
    public static let expFontTypographyBodyFontWeight = 400
    public static let expFontTypographyBodyLetterSpacing = 0px
    public static let expFontTypographyBodyLineHeight = 1.5
    public static let expFontTypographyBodyTextTransform = none
    public static let expFontTypographyButtonFontFamily = Open Sans, sans-serif
    public static let expFontTypographyButtonFontSize = .875rem
    public static let expFontTypographyButtonFontWeight = 700
    public static let expFontTypographyButtonLetterSpacing = 0.5px
    public static let expFontTypographyButtonLineHeight = 1.2
    public static let expFontTypographyButtonTextTransform = uppercase
    public static let expFontTypographyCaptionFontFamily = Times New Roman, serif
    public static let expFontTypographyCaptionFontSize = .875rem
    public static let expFontTypographyCaptionFontWeight = 300
    public static let expFontTypographyCaptionLetterSpacing = 0.5px
    public static let expFontTypographyCaptionLineHeight = 1.8
    public static let expFontTypographyCaptionTextTransform = none
    public static let expFontTypographyHeadingFontFamily = Open Sans, sans-serif
    public static let expFontTypographyHeadingFontSize = 1.25rem
    public static let expFontTypographyHeadingFontWeight = 700
    public static let expFontTypographyHeadingLetterSpacing = 0px
    public static let expFontTypographyHeadingLineHeight = 1.2
    public static let expFontTypographyHeadingTextTransform = capitalize
    public static let expFontTypographySubheadingFontFamily = Open Sans, sans-serif
    public static let expFontTypographySubheadingFontSize = 1rem
    public static let expFontTypographySubheadingFontWeight = 600
    public static let expFontTypographySubheadingLetterSpacing = -0.5px
    public static let expFontTypographySubheadingLineHeight = 1.5
    public static let expFontTypographySubheadingTextTransform = none
    public static let expGroupButtonGroupsOrientation = horizontal
    public static let expGroupButtonGroupsSpacing = 8px
    public static let expGroupButtonGroupsStackedOnMobile = true
    public static let expGroupContextMenuAnimation = fade
    public static let expGroupContextMenuCloseOnClickOutside = true
    public static let expGroupContextMenuOpenOnRightClick = true
    public static let expGroupDropdownMaxHeight = CGFloat(3200.00)
    public static let expGroupDropdownMultiSelect = false
    public static let expGroupDropdownOpenOnHover = false
    public static let expGroupFloatingActionButtonExpandable = false
    public static let expGroupFloatingActionButtonPosition = bottom-right
    public static let expGroupFloatingActionButtonShowShadow = true
    public static let expGroupFormsDefault = true
    public static let expGroupFormsDisabled = false
    public static let expGroupFormsHasError = false
    public static let expGroupLoginForgotPasswordLinkVisible = true
    public static let expGroupLoginRememberMeEnabled = true
    public static let expGroupLoginShowPasswordToggle = true
    public static let expGroupModalsAnimation = slide
    public static let expGroupModalsCentered = true
    public static let expGroupModalsCloseOnOverlayClick = true
    public static let expGroupSearchBordered = true
    public static let expGroupSearchIconVisible = true
    public static let expGroupSearchPlaceholder = Search...
    public static let expGroupSlidersMaxValue = 100
    public static let expGroupSlidersMinValue = 0
    public static let expGroupSlidersShowLabels = true
    public static let expGroupSlidersShowTicks = true
    public static let expGroupSlidersStep = 1
    public static let expGroupTooltipsDelay = 300
    public static let expGroupTooltipsInteractive = true
    public static let expGroupTooltipsPosition = top
    public static let expMediaQueriesDesktopExtraLarge = CGFloat(40960.00) /** Extra-large desktops (e.g., QHD screens) */
    public static let expMediaQueriesDesktopLarge = CGFloat(30720.00) /** Large desktops (e.g., Full HD screens) */
    public static let expMediaQueriesDesktopMedium = CGFloat(23040.00) /** Standard desktops (e.g., MacBook Pro 15-inch) */
    public static let expMediaQueriesDesktopSmall = CGFloat(20480.00) /** Small desktops or large tablets in landscape mode */
    public static let expMediaQueriesMobileExtraLargeLandscape = CGFloat(12992.00) /** Extra-large mobile devices in landscape (e.g., larger Android phones) */
    public static let expMediaQueriesMobileExtraLargePortrait = CGFloat(7680.00) /** Extra-large mobile devices in portrait (e.g., larger Android phones) */
    public static let expMediaQueriesMobileLargeLandscape = CGFloat(12288.00) /** Large mobile devices in landscape (e.g., Pixel 5) */
    public static let expMediaQueriesMobileLargePortrait = CGFloat(6800.00) /** Large mobile devices in portrait (e.g., Pixel 5) */
    public static let expMediaQueriesMobileMediumLandscape = CGFloat(10672.00) /** Medium mobile devices in landscape (e.g., iPhone 11) */
    public static let expMediaQueriesMobileMediumPortrait = CGFloat(6000.00) /** Medium mobile devices in portrait (e.g., iPhone 11) */
    public static let expMediaQueriesMobileSmallLandscape = CGFloat(7680.00) /** Small mobile devices in landscape (e.g., iPhone SE) */
    public static let expMediaQueriesMobileSmallPortrait = CGFloat(5120.00) /** Small mobile devices in portrait (e.g., iPhone SE) */
    public static let expMediaQueriesTabletLarge = CGFloat(16384.00) /** Large tablets (e.g., iPad Pro) */
    public static let expMediaQueriesTabletMedium = CGFloat(12288.00) /** Medium tablets (e.g., iPad Mini) */
    public static let expMediaQueriesTabletSmall = CGFloat(9600.00) /** Small tablets (e.g., 7-inch devices) */
    public static let expMediaQueriesTelevision4k = CGFloat(61440.00) /** 4K UHD resolution for TVs */
    public static let expMediaQueriesTelevision8k = CGFloat(122880.00) /** 8K UHD resolution for TVs */
    public static let expMediaQueriesTelevisionFullHd = CGFloat(30720.00) /** Full HD resolution for TVs */
    public static let expMediaQueriesTelevisionHd = CGFloat(20480.00) /** HD resolution for TVs */
    public static let expModeOnDarkBackgroundPrimary = UIColor(red: 0.122, green: 0.161, blue: 0.216, alpha: 1)
    public static let expModeOnDarkBackgroundSecondary = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    public static let expModeOnDarkBackgroundTertiary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    public static let expModeOnDarkBorderDefault = UIColor(red: 0.294, green: 0.333, blue: 0.388, alpha: 1)
    public static let expModeOnDarkBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnDarkTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnDarkTextPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expModeOnDarkTextSecondary = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    public static let expModeOnLightBackgroundPrimary = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expModeOnLightBackgroundSecondary = UIColor(red: 0.976, green: 0.980, blue: 0.984, alpha: 1)
    public static let expModeOnLightBackgroundTertiary = UIColor(red: 0.898, green: 0.906, blue: 0.922, alpha: 1)
    public static let expModeOnLightBorderDefault = UIColor(red: 0.820, green: 0.835, blue: 0.859, alpha: 1)
    public static let expModeOnLightBorderHover = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnLightTextDisabled = UIColor(red: 0.612, green: 0.639, blue: 0.686, alpha: 1)
    public static let expModeOnLightTextPrimary = UIColor(red: 0.067, green: 0.094, blue: 0.153, alpha: 1)
    public static let expModeOnLightTextSecondary = UIColor(red: 0.420, green: 0.447, blue: 0.502, alpha: 1)
    public static let expScaleBoundedLightnessScale10 = UIColor(red: 0.090, green: 0.098, blue: 0.110, alpha: 1)
    public static let expScaleBoundedLightnessScale50 = UIColor(red: 0.451, green: 0.498, blue: 0.549, alpha: 1)
    public static let expScaleBoundedLightnessScale90 = UIColor(red: 0.890, green: 0.902, blue: 0.910, alpha: 1)
    public static let expScaleEnumeratedLevels100 = 100
    public static let expScaleEnumeratedLevels200 = 200
    public static let expScaleEnumeratedLevels300 = 300
    public static let expScaleEnumeratedLevels400 = 400
    public static let expScaleEnumeratedLevels50 = 50
    public static let expScaleEnumeratedLevels500 = 500
    public static let expScaleEnumeratedLevels600 = 600
    public static let expScaleEnumeratedLevels700 = 700
    public static let expScaleEnumeratedLevels800 = 800
    public static let expScaleEnumeratedLevels900 = 900
    public static let expScaleOrderedValuesExtraLarge = CGFloat(32.00)
    public static let expScaleOrderedValuesJumbo = CGFloat(48.00)
    public static let expScaleOrderedValuesLarge = CGFloat(24.00)
    public static let expScaleOrderedValuesMedium = CGFloat(16.00)
    public static let expScaleOrderedValuesSmall = CGFloat(12.00)
    public static let expScaleProportionalBase1x = CGFloat(16.00)
    public static let expScaleProportionalBase2x = CGFloat(32.00)
    public static let expScaleProportionalBase4x = CGFloat(64.00)
    public static let expScaleProportionalBaseHalf = CGFloat(8.00)
    public static let expScaleProportionalBaseQuarter = CGFloat(4.00)
    public static let expScaleTshirtSizesLg = CGFloat(32.00)
    public static let expScaleTshirtSizesMd = CGFloat(24.00)
    public static let expScaleTshirtSizesSm = CGFloat(16.00)
    public static let expScaleTshirtSizesXl = CGFloat(48.00)
    public static let expScaleTshirtSizesXs = CGFloat(12.00)
    public static let expScaleTshirtSizesXxl = CGFloat(64.00)
    public static let expScaleTshirtSizesXxs = CGFloat(8.00)
    public static let expShadowBoxOne = 0 4px 6px rgba(0, 0, 0, 0.1)
    public static let expShadowExtraLarge = 0px 12px 15px rgba(0, 0, 0, 0.15), 0px 6px 10px rgba(0, 0, 0, 0.1) /** Extra large shadow for dialogs or focused states */
    public static let expShadowFloating = 0px 16px 24px rgba(0, 0, 0, 0.2), 0px 8px 12px rgba(0, 0, 0, 0.15) /** High shadow for floating elements or fixed buttons */
    public static let expShadowFloatingLarge = 0px 16px 24px hsl(0, 2%, 44%, 0.35), 0px 8px 12px hsl(0, 2%, 44%, 0.40) /** High shadow for floating elements or fixed buttons */
    public static let expShadowInner = inset 0 2px 5px rgba(0, 0, 0, 0.2)
    public static let expShadowLarge = 0px 8px 10px rgba(0, 0, 0, 0.1), 0px 4px 6px rgba(0, 0, 0, 0.08) /** Large shadow for modals or overlays */
    public static let expShadowMedium = 0px 4px 6px rgba(0, 0, 0, 0.1), 0px 2px 4px rgba(0, 0, 0, 0.08) /** Medium shadow for elements like cards */
    public static let expShadowNone = none /** No shadow */
    public static let expShadowOverlay = rgba(0, 0, 0, 0.5)
    public static let expShadowSmall = 0px 1px 2px rgba(0, 0, 0, 0.1), 0px 1px 3px rgba(0, 0, 0, 0.08) /** Small shadow for light elements like buttons */
    public static let expShadowSmallFloat = 0px 2px 4px rgba(0, 0, 0, 0.2) /** Small floating shadow for light elements like floating action buttons */
    public static let expSizesAvatarLarge = CGFloat(1152.00)
    public static let expSizesAvatarMedium = CGFloat(768.00)
    public static let expSizesAvatarSmall = CGFloat(384.00)
    public static let expSizesAvatarXLarge = CGFloat(1536.00)
    public static let expSizesContainerFullWidth = CGFloat(1600.00)
    public static let expSizesContainerLarge = CGFloat(19200.00)
    public static let expSizesContainerMedium = CGFloat(12800.00)
    public static let expSizesContainerSmall = CGFloat(6400.00)
    public static let expSizesIconLarge = CGFloat(512.00)
    public static let expSizesIconMedium = CGFloat(384.00)
    public static let expSizesIconSmall = CGFloat(256.00)
    public static let expSizesIconXLarge = CGFloat(640.00)
    public static let expSizesRadiusCircle = 50%
    public static let expSizesRadiusLarge = 16px
    public static let expSizesRadiusMedium = 8px
    public static let expSizesRadiusNone = 0px
    public static let expSizesRadiusPill = 9999px
    public static let expSizesRadiusSmall = 4px
    public static let expSpace12x = 3rem
    public static let expSpace14x = 3.5rem
    public static let expSpace16x = 4rem
    public static let expSpace1x = .25rem
    public static let expSpace24x = 6rem
    public static let expSpace2x = .5rem
    public static let expSpace32x = 8rem
    public static let expSpace3x = .75rem
    public static let expSpace48x = 12rem
    public static let expSpace4x = 1rem
    public static let expSpace5x = 1.25rem
    public static let expSpace64x = 16rem
    public static let expSpace6x = 1.5rem
    public static let expSpace7x = 1.75rem
    public static let expSpace8x = 2rem
    public static let expSpaceHalfX = .125rem
    public static let expSpaceInline16x = 4rem
    public static let expSpaceInline1x = .25rem
    public static let expSpaceInline2x = .5rem
    public static let expSpaceInline3x = .75rem
    public static let expSpaceInline4x = 1rem
    public static let expSpaceInline6x = 1.5rem
    public static let expSpaceInline8x = 2rem
    public static let expSpaceInlineHalfX = .125rem
    public static let expSpaceInlineNone = 0px
    public static let expSpaceInset12x = 3rem
    public static let expSpaceInset16x = 4rem
    public static let expSpaceInset1x = .25rem
    public static let expSpaceInset2x = .5rem
    public static let expSpaceInset3x = .75rem
    public static let expSpaceInset4x = 1rem
    public static let expSpaceInset6x = 1.5rem
    public static let expSpaceInset8x = 2rem
    public static let expSpaceInsetHalfX = .125rem
    public static let expSpaceInsetNone = 0px
    public static let expSpaceInsetSquish1x = .25rem .5rem
    public static let expSpaceInsetSquish2x = .5rem 1rem
    public static let expSpaceInsetSquish3x = .75rem 1.25rem
    public static let expSpaceInsetSquish4x = 1rem 2rem
    public static let expSpaceInsetSquish6x = 1.5rem 3rem
    public static let expSpaceInsetSquishHalfX = .125rem .25rem
    public static let expSpaceInsetSquishNone = 0px
    public static let expSpaceInsetStretch1x = .5rem .25rem
    public static let expSpaceInsetStretch2x = .75rem .5rem
    public static let expSpaceInsetStretch3x = 1.5rem .75rem
    public static let expSpaceInsetStretch4x = 2rem 1rem
    public static let expSpaceInsetStretch6x = 3rem 1.5rem
    public static let expSpaceInsetStretchHalfX = .25rem .125rem
    public static let expSpaceInsetStretchNone = 0px
    public static let expSpaceNone = 0px
    public static let expSpaceStack12x = 3rem
    public static let expSpaceStack16x = 4rem
    public static let expSpaceStack1x = .25rem
    public static let expSpaceStack24x = 6rem
    public static let expSpaceStack2x = .5rem
    public static let expSpaceStack32x = 8rem
    public static let expSpaceStack3x = .75rem
    public static let expSpaceStack4x = 1rem
    public static let expSpaceStack5x = 1.25rem
    public static let expSpaceStack6x = 1.5rem
    public static let expSpaceStack8x = 2rem
    public static let expSpaceStackHalfX = .125rem
    public static let expSpaceStackNone = 0px
    public static let expStateActiveBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateActiveBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStateActiveText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateDefaultBackground = UIColor(red: 1.000, green: 1.000, blue: 1.000, alpha: 1)
    public static let expStateDefaultBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateDefaultText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    public static let expStateDisabledBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateDisabledBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStateDisabledText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.4)
    public static let expStateErrorBackground = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateErrorBorder = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 0.8)
    public static let expStateErrorText = UIColor(red: 1.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateFocusBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.02)
    public static let expStateFocusOutline = 2px solid rgba(0, 123, 255, 0.8)
    public static let expStateFocusText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.9)
    public static let expStateHoverBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.05)
    public static let expStateHoverBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.1)
    public static let expStateHoverText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.8)
    public static let expStatePressBackground = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.2)
    public static let expStatePressBorder = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 0.3)
    public static let expStatePressText = UIColor(red: 0.000, green: 0.000, blue: 0.000, alpha: 1)
    public static let expStateSuccessBackground = UIColor(red: 0.000, green: 1.000, blue: 0.000, alpha: 0.1)
    public static let expStateSuccessBorder = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 0.8)
    public static let expStateSuccessText = UIColor(red: 0.000, green: 0.502, blue: 0.000, alpha: 1)
    public static let expThreeCameraFovDefault = 75 /** Default field of view for perspective camera */
    public static let expThreeCameraFovNarrow = 50 /** Narrow field of view for close-ups */
    public static let expThreeCameraFovWide = 90 /** Wider field of view for immersive scenes */
    public static let expThreeCameraPositionCloseUp = 0,1,2 /** Closer position for focused shots */
    public static let expThreeCameraPositionDefault = 0,1,5 /** Standard camera position */
    public static let expThreeCameraPositionHighAngle = 0,5,5 /** Higher angle for overhead views */
    public static let expThreeLightColorCool = #C1EFFF /** Cool light color for modern or sci-fi themes */
    public static let expThreeLightColorNeutral = #FFFFFF /** Neutral white light for general purpose */
    public static let expThreeLightColorWarm = #FFDDC1 /** Warm light color for cozy environments */
    public static let expThreeLightIntensityHigh = 2 /** High intensity for spotlight effects */
    public static let expThreeLightIntensityLow = 0.5 /** Low-intensity light for ambient scenes */
    public static let expThreeLightIntensityMedium = 1 /** Standard intensity for balanced lighting */
    public static let expThreeMaterialMetalnessFull = 1 /** Fully metallic surfaces */
    public static let expThreeMaterialMetalnessNone = 0 /** Non-metallic surfaces */
    public static let expThreeMaterialMetalnessSemi = 0.5 /** Semi-metallic surfaces */
    public static let expThreeMaterialRoughnessRough = 1 /** Fully rough surfaces with matte finish */
    public static let expThreeMaterialRoughnessSemiRough = 0.5 /** Moderately rough surfaces */
    public static let expThreeMaterialRoughnessSmooth = 0.1 /** Very smooth surfaces with a glossy finish */
    public static let expThreeTransformRotationX = 0.01 /** Slight rotation on the X-axis for dynamic positioning */
    public static let expThreeTransformRotationY = 0.01 /** Slight rotation on the Y-axis for orbit animations */
    public static let expThreeTransformScaleDefault = 1 /** Default scale */
    public static let expThreeTransformScaleLarge = 2 /** Larger scale for emphasis or focused views */
    public static let expThreeTransformScaleSmall = 0.5 /** Small scale for thumbnails or previews */
    public static let expTouchGestureLongPressDuration = 500ms
    public static let expTouchGestureSwipeThreshold = CGFloat(800.00)
    public static let expTouchGestureTapDuration = 200ms
    public static let expTouchSpacingLarge = CGFloat(384.00)
    public static let expTouchSpacingMedium = CGFloat(256.00)
    public static let expTouchSpacingSmall = CGFloat(128.00)
    public static let expTouchTargetLarge = CGFloat(768.00)
    public static let expTouchTargetMedium = CGFloat(640.00)
    public static let expTouchTargetSmall = CGFloat(512.00)
    public static let expUnitsBorderRadiusLg = 16px
    public static let expUnitsBorderRadiusMd = 8px
    public static let expUnitsBorderRadiusPill = 9999px
    public static let expUnitsBorderRadiusSm = 4px
    public static let expUnitsBorderWidthMedium = 1px
    public static let expUnitsBorderWidthThick = 1.25px
    public static let expUnitsBorderWidthThin = .75px
    public static let expUnitsLineHeightDense = 1.2
    public static let expUnitsLineHeightLg = 1.75
    public static let expUnitsLineHeightLoose = 1.8
    public static let expUnitsLineHeightMd = 1.5
    public static let expUnitsLineHeightSm = 1.25
    public static let expUnitsLineHeightXl = 2
    public static let expUnitsLineHeightXs = 1
    public static let expUnitsOpacityFull = 1
    public static let expUnitsOpacityHigh = 0.9
    public static let expUnitsOpacityLow = 0.3
    public static let expUnitsOpacityMedium = 0.6
    public static let expUnitsOpacityNone = 0
    public static let expUnitsShadowLg = 0px 8px 16px rgba(0, 0, 0, 0.2)
    public static let expUnitsShadowMd = 0px 4px 8px rgba(0, 0, 0, 0.15)
    public static let expUnitsShadowSm = 0px 2px 4px rgba(0, 0, 0, 0.1)
    public static let expVariantErrorAlert = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Used for alert messages related to errors */
    public static let expVariantErrorCritical = UIColor(red: 0.776, green: 0.157, blue: 0.157, alpha: 1) /** Used for critical errors or states */
    public static let expVariantErrorDanger = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Used to indicate dangerous actions */
    public static let expVariantErrorError = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** General error indicator */
    public static let expVariantErrorPrimary = UIColor(red: 0.898, green: 0.224, blue: 0.208, alpha: 1) /** Primary color for error and danger indicators */
    public static let expVariantErrorSecondary = UIColor(red: 0.827, green: 0.184, blue: 0.184, alpha: 1) /** Secondary color for alerting errors */
    public static let expVariantErrorTertiary = UIColor(red: 0.957, green: 0.263, blue: 0.212, alpha: 1) /** Tertiary color for subtle error indicators */
    public static let expVariantInformationInfo = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Used for informational messages */
    public static let expVariantInformationInformation = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** General information indicator */
    public static let expVariantInformationPrimary = UIColor(red: 0.129, green: 0.588, blue: 0.953, alpha: 1) /** Primary color for informational messages */
    public static let expVariantInformationSecondary = UIColor(red: 0.392, green: 0.710, blue: 0.965, alpha: 1) /** Secondary color for additional informational elements */
    public static let expVariantInformationTertiary = UIColor(red: 0.733, green: 0.871, blue: 0.984, alpha: 1) /** Tertiary color for subtle informational cues */
    public static let expVariantNeutralDefault = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Standard neutral color for non-critical messages */
    public static let expVariantNeutralPrimary = UIColor(red: 0.620, green: 0.620, blue: 0.620, alpha: 1) /** Primary neutral color for base states */
    public static let expVariantNeutralSecondary = UIColor(red: 0.741, green: 0.741, blue: 0.741, alpha: 1) /** Secondary neutral color for subdued elements */
    public static let expVariantNeutralTertiary = UIColor(red: 0.878, green: 0.878, blue: 0.878, alpha: 1) /** Tertiary neutral color for background elements */
    public static let expVariantNewAnnouncement = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Used for announcements or newly added features */
    public static let expVariantNewHighlight = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Highlight to draw attention to new items */
    public static let expVariantNewNewFeature = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Indicator for new features or items */
    public static let expVariantNewPrimary = UIColor(red: 0.612, green: 0.153, blue: 0.690, alpha: 1) /** Primary color for new or highlighted features */
    public static let expVariantNewSecondary = UIColor(red: 0.671, green: 0.278, blue: 0.737, alpha: 1) /** Secondary color for supporting new features */
    public static let expVariantNewTertiary = UIColor(red: 0.729, green: 0.408, blue: 0.784, alpha: 1) /** Tertiary color for subtle new indicators */
    public static let expVariantSuccessConfirmation = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Used for successful confirmation actions */
    public static let expVariantSuccessPositive = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Used to indicate positive status */
    public static let expVariantSuccessPrimary = UIColor(red: 0.298, green: 0.686, blue: 0.314, alpha: 1) /** Primary color for success actions and statuses */
    public static let expVariantSuccessSecondary = UIColor(red: 0.400, green: 0.733, blue: 0.416, alpha: 1) /** Secondary color for success-related components */
    public static let expVariantSuccessSuccess = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** General success indicator */
    public static let expVariantSuccessTertiary = UIColor(red: 0.506, green: 0.780, blue: 0.518, alpha: 1) /** Tertiary color for subtle success elements */
    public static let expVariantWarningAttention = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Used for actions that require user attention */
    public static let expVariantWarningCaution = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Used to indicate cautionary actions */
    public static let expVariantWarningDefault = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** General warning indicator */
    public static let expVariantWarningPrimary = UIColor(red: 1.000, green: 0.596, blue: 0.000, alpha: 1) /** Primary warning color for critical attention */
    public static let expVariantWarningSecondary = UIColor(red: 1.000, green: 0.655, blue: 0.149, alpha: 1) /** Secondary warning color for less critical states */
    public static let expVariantWarningTertiary = UIColor(red: 0.984, green: 0.549, blue: 0.000, alpha: 1) /** Tertiary warning color for subtle caution cues */
}